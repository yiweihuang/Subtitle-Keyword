1
00:00:09,80 --> 00:00:11,350
好，那接下來我們來介紹一個所謂的

2
00:00:11,350 --> 00:00:13,580
Cumulative的Acknowledgement的概念

3
00:00:13,580 --> 00:00:17,450
就是說我們因為收到一個封包要回一個ACK

4
00:00:17,450 --> 00:00:20,150
那如果每一個封包都回一個ACK

5
00:00:20,150 --> 00:00:21,650
每一個封包都回一個ACK

6
00:00:21,650 --> 00:00:24,279
這個第一個ACK的數量也會比較多

7
00:00:24,280 --> 00:00:26,910
那所謂的cumulative就是說

8
00:00:26,910 --> 00:00:29,280
我這個ACK可不可以累積

9
00:00:29,280 --> 00:00:31,780
然後等一下 一次回的意思

10
00:00:31,780 --> 00:00:34,280
第一個節省這個ACK的數量

11
00:00:34,280 --> 00:00:38,410
第二個就是說我們回應這個ACK其實也代表說

12
00:00:38,410 --> 00:00:41,510
這個接收的狀態

13
00:00:41,510 --> 00:00:43,350
那這個時候我們假設

14
00:00:43,350 --> 00:00:48,250
我們訂另外一個所謂的參數叫做sequence number to ACK

15
00:00:48,250 --> 00:00:50,580
sequence number to ACK就代表說

16
00:00:50,580 --> 00:00:55,550
我們現在想要回應的sequence number是什麼

17
00:00:55,550 --> 00:00:58,150
那它代表說是說

18
00:00:58,150 --> 00:01:03,310
我們目前還沒有回應的sequence number最大

19
00:01:03,310 --> 00:01:05,710
就因為我之前有回過一些ACK嘛

20
00:01:05,710 --> 00:01:08,880
那到目前為止我們說

21
00:01:09,610 --> 00:01:15,980
還沒有回覆的、最大的sequence number的意思

22
00:01:15,980 --> 00:01:19,310
就是我們現在有很多封包可能有收到

23
00:01:19,310 --> 00:01:21,950
那我還沒有回覆那個sequence number

24
00:01:21,950 --> 00:01:24,710
那這個沒有回覆的sequence number裡面

25
00:01:24,710 --> 00:01:26,179
最大的是什麼

26
00:01:26,180 --> 00:01:32,780
我就是說也就是說小於sequence number to ACK這個數字的

27
00:01:32,780 --> 00:01:35,380
小於這個它也是一個sequence number

28
00:01:35,380 --> 00:01:39,280
小於這個sequence number的都是已經收到的意思

29
00:01:39,280 --> 00:01:41,110
都在、也就是說我們隨便講

30
00:01:41,110 --> 00:01:42,880
譬如說sequence number to ACK

31
00:01:42,880 --> 00:01:45,50
假設拉我們說它等於8

32
00:01:45,50 --> 00:01:48,910
它這個數字嘛等於8是什麼意思

33
00:01:48,910 --> 00:01:53,810
就代表說這個8以前的我通通收到的意思

34
00:01:53,810 --> 00:01:58,150
就是7、6、5、4、3、2、1我通通收到

35
00:01:58,150 --> 00:01:59,810
這是receiver給的

36
00:01:59,810 --> 00:02:05,480
所以sequence number to ACK就代表說8以上的

37
00:02:05,480 --> 00:02:07,410
通通還沒有回的意思

38
00:02:07,410 --> 00:02:10,780
那8以下的通通已經收到了

39
00:02:10,780 --> 00:02:13,50
所以這個是一個很特別的意思

40
00:02:13,50 --> 00:02:17,510
那我們說我們如果要回這個ACK呢

41
00:02:17,510 --> 00:02:21,450
我們有一個做法就是說  因為我們的封包進來的時候呢

42
00:02:21,450 --> 00:02:23,280
不見得按照順序進來

43
00:02:23,280 --> 00:02:26,680
也就是說如果呢我們收到一個封包

44
00:02:26,680 --> 00:02:29,680
它的這個編號

45
00:02:29,680 --> 00:02:31,180
我們講它的sequence number

46
00:02:31,180 --> 00:02:35,150
是比這個sequence number to ACK還大

47
00:02:35,150 --> 00:02:39,750
譬如說我們現在假設這個sequence number to ACK是8拉

48
00:02:39,750 --> 00:02:43,210
那我現在收到一個10就是sequence number是10的

49
00:02:43,210 --> 00:02:45,510
好，或者12的，比這個還大的

50
00:02:45,510 --> 00:02:49,209
那我們一回的時候我們還是回8

51
00:02:49,210 --> 00:02:54,80
因為我並沒有說  等於說我們假設現在8好了

52
00:02:54,80 --> 00:02:58,10
譬如說我們現在收到一個封包是我們講編號是10的

53
00:02:58,10 --> 00:03:00,109
那我們還是回這個

54
00:03:00,110 --> 00:03:02,650
就代表說8以前的都收到了

55
00:03:02,650 --> 00:03:05,850
因為你收到10、因為9沒有進來

56
00:03:05,850 --> 00:03:10,310
如果你回了這個10的話  就代表說10以前都收到了

57
00:03:10,310 --> 00:03:13,580
可是你9並沒有進來、8也沒有進來

58
00:03:13,580 --> 00:03:20,510
所以我們變成只能  即使收到封包的編號比較高的話

59
00:03:20,510 --> 00:03:26,209
但是我們還是只能回這個sequence number to ACK的意思

60
00:03:26,210 --> 00:03:28,150
這個就是所謂的cumulative

61
00:03:28,150 --> 00:03:31,350
這種方式我們就叫做所謂的cumulative

62
00:03:31,350 --> 00:03:37,410
因為我們回這個ACK  就不是一個ACK對一個封包了

63
00:03:37,410 --> 00:03:41,250
我們之前介紹是說  我可能送八個封包回八個ACK

64
00:03:41,250 --> 00:03:46,880
那如果我們用個這個所謂cumulative acknowledgement的機制的話

65
00:03:46,880 --> 00:03:51,380
就代表說我們這個ACK  就不一定要一個封包回一個ACK了

66
00:03:51,380 --> 00:03:55,450
我可以多個封包回一個ACK  那這個ACK代表什麼意思呢

67
00:03:55,450 --> 00:04:01,579
這個ACK代表說  Sequence number小於這個ACK的我通通收到了

68
00:04:01,580 --> 00:04:04,880
就等於說  你回了8就代表8以前都收到了

69
00:04:04,880 --> 00:04:08,250
你回了7就代表7以前通通都收到的意思

70
00:04:08,250 --> 00:04:09,580
好，那這個時候

71
00:04:09,580 --> 00:04:13,950
我們說如果我們收到一個封包進來

72
00:04:13,950 --> 00:04:18,209
好，那我們如果按照順序進來收到的話

73
00:04:18,209 --> 00:04:22,310
我們就把我們講這個LFR就把它加一

74
00:04:22,310 --> 00:04:26,710
然後呢我們就開始滑動  因為按照順序收到的話

75
00:04:26,710 --> 00:04:31,510
就是如果我們是按照順序收到的話  我就回一個ACK然後呢我就滑動

76
00:04:31,510 --> 00:04:34,680
那剛剛也有可能說我沒有按照順序收到

77
00:04:34,680 --> 00:04:38,450
可是剛剛提到了譬如說  我來3、4、5、6

78
00:04:38,450 --> 00:04:43,610
然後最後2一補齊我就回整個ACK  然後整個滑動

79
00:04:43,610 --> 00:04:45,380
就滑得比較遠一點

80
00:04:45,380 --> 00:04:48,110
都是剛剛的所謂的acknowledgement的例子

81
00:04:48,110 --> 00:04:50,150
好，我們看一個這個來介紹

82
00:04:50,150 --> 00:04:53,849
譬如說在這個圖裡面  我們看一個例子

83
00:04:53,850 --> 00:04:56,850
譬如說左邊是sender然後右邊是receiver

84
00:04:56,850 --> 00:05:00,880
然後呢我們就送了幾個封包出去來看一下

85
00:05:00,880 --> 00:05:04,150
首先第一個封包回一個ACK

86
00:05:04,150 --> 00:05:06,710
注意到我們在這個例子裡面

87
00:05:06,710 --> 00:05:12,250
我收到的封包還是有編號  我們注意看第一個封包編號是1

88
00:05:12,250 --> 00:05:17,80
但是呢假設我回的ACK是2  這個地方、這個是2

89
00:05:17,80 --> 00:05:24,109
2代表告訴對方說2以前通通都收到不含2拉

90
00:05:24,110 --> 00:05:26,750
2以前就是1嘛

91
00:05:26,750 --> 00:05:28,480
這個時候1也有收到

92
00:05:28,480 --> 00:05:30,650
那再下來看第二個封包注意一下

93
00:05:30,650 --> 00:05:33,909
第二個封包呢假設呢它掉了

94
00:05:33,910 --> 00:05:35,680
第二個封包送到一半

95
00:05:35,680 --> 00:05:38,610
編號2就是第二個封包它送到一半它掉了

96
00:05:38,610 --> 00:05:41,780
這個時候receiver因為沒有收到封包

97
00:05:41,780 --> 00:05:45,109
所以也不會回ACK  就當成沒事發生

98
00:05:45,110 --> 00:05:46,950
封包在路中間就不見

99
00:05:46,950 --> 00:05:49,409
好，這時候sender呢送的

100
00:05:49,410 --> 00:05:52,150
注意到它送了第三個封包進來

101
00:05:52,150 --> 00:05:55,750
好，所以這個地方我們特別注意

102
00:05:55,750 --> 00:06:00,550
這個時候receiver呢它就收到了第二個封包可是編號是3

103
00:06:00,550 --> 00:06:03,810
它剛剛收到的是1，現在收到的編號是3

104
00:06:03,810 --> 00:06:08,980
所以它要回ACK它要回什麼ACK  注意到在這個地方

105
00:06:08,980 --> 00:06:10,310
它的ACK還是回2

106
00:06:10,310 --> 00:06:13,350
為什麼它的ACK還是回2呢

107
00:06:13,350 --> 00:06:17,550
因為它只能告訴sender說2以前的都收到了

108
00:06:17,550 --> 00:06:23,750
就是目前只有1拉2以前的都收到了  因為2沒有收到

109
00:06:23,750 --> 00:06:27,150
所以它就不能回ACK等於4拉

110
00:06:27,150 --> 00:06:30,909
如果它回ACK等於4  就代表3、2、1通通都收到

111
00:06:30,910 --> 00:06:33,250
事實上沒有、事實上2沒有收到

112
00:06:33,250 --> 00:06:35,380
所以它只能回ACK等於2的意思

113
00:06:35,380 --> 00:06:40,680
那再來一個封包，編號4的進來

114
00:06:40,680 --> 00:06:41,980
可是我們注意到

115
00:06:41,980 --> 00:06:47,80
這個時候它能回的ACK還是2

116
00:06:47,80 --> 00:06:53,50
特別注意到這個時候還是2 因為我們2還沒有收到

117
00:06:53,50 --> 00:06:56,280
所以ACK就代表說我還在等2的意思

118
00:06:56,280 --> 00:06:58,780
2以前都收到了但是呢2還沒有

119
00:06:58,780 --> 00:07:02,650
所以ACK等於2就代表我在等2的意思

120
00:07:02,650 --> 00:07:07,109
好，再來一個封包 編號5了，還是一樣

121
00:07:07,110 --> 00:07:11,10
因為2還沒有進來我還是必須再繼續等2

122
00:07:11,10 --> 00:07:16,409
所以我還是回這個ACK還是等於2  那再來一個封包

123
00:07:16,410 --> 00:07:21,410
等於編號6了  我們還是得回這個所謂的2

124
00:07:21,410 --> 00:07:26,350
所以這個時候還是一樣

125
00:07:26,350 --> 00:07:31,280
這個時候呢假設剛剛那個2不是送到一半的時候就掉了

126
00:07:31,280 --> 00:07:33,150
在這個地方，這個2是掉了

127
00:07:33,150 --> 00:07:35,510
還好我們有設timer

128
00:07:35,510 --> 00:07:40,80
我們剛剛有提到  每一個封包即使用sliding window

129
00:07:40,80 --> 00:07:44,349
在傳送的時候還是每一個封包都要啟動一個timer

130
00:07:44,350 --> 00:07:48,980
這個2呢它的timer在這個時間  我們講timeout了

131
00:07:48,980 --> 00:07:52,350
Timeout就重送了  所以接下來注意到

132
00:07:52,350 --> 00:07:56,750
接下來這個動畫送的封包是2、編號2

133
00:07:56,750 --> 00:08:02,850
那編號2重送一收到  你注意到我們這個時候回的這個ACK

134
00:08:02,850 --> 00:08:06,650
特別特別注意一下是這個

135
00:08:06,650 --> 00:08:11,580
是回7，為什麼是回7呢

136
00:08:11,580 --> 00:08:14,810
因為我們一旦封包2一收到

137
00:08:14,810 --> 00:08:17,150
那因為剛才已經收到3、4、5、6拉

138
00:08:17,150 --> 00:08:21,510
3、4、5、6都收到了  那現在2又收到了

139
00:08:21,510 --> 00:08:25,750
就代表2、3、4、5、6通通收到了  所以我們就回7

140
00:08:25,750 --> 00:08:31,910
我們剛剛講7就代表說  7以前都收到那我們現在在等7

141
00:08:31,910 --> 00:08:36,510
你看看我們現在2一收到就代表2、3、4

142
00:08:36,510 --> 00:08:38,80
1、2、3、4、5、6其實都收到了

143
00:08:38,80 --> 00:08:41,280
那我等7嘛  所以我們回這個ACK

144
00:08:41,280 --> 00:08:46,10
叫ACK是等於7  是這個就是所謂的cumulative

145
00:08:46,10 --> 00:08:49,850
我們講所謂的你到底cumulate什麼、你累積了什麼

146
00:08:49,850 --> 00:08:54,510
就是累積了這個東西  等於說我們一回的時候

147
00:08:54,510 --> 00:08:58,750
回等於7這個7有特別特別重要的意義

148
00:08:58,750 --> 00:09:00,710
代表說7以前的全部都收到了

149
00:09:00,710 --> 00:09:04,710
那之前為什麼我們注意到在回這個7以前

150
00:09:04,710 --> 00:09:08,550
這個地方是7、這邊全部都是2

151
00:09:08,550 --> 00:09:11,180
全部都是2代表說

152
00:09:11,180 --> 00:09:15,50
我2沒有收到

153
00:09:15,50 --> 00:09:17,280
然後告訴你說我7以前全部收到了

154
00:09:17,280 --> 00:09:20,280
對於這個sender來講的話

155
00:09:20,280 --> 00:09:23,850
它就知道說  好，我在收這個ACK嘛

156
00:09:23,850 --> 00:09:27,10
我們講這個ACK回來

157
00:09:27,10 --> 00:09:29,80
前面的幾個ACK都告訴我是2

158
00:09:29,80 --> 00:09:33,180
那我就說奇怪拉為什麼對方都一直回我2呢

159
00:09:33,180 --> 00:09:34,449
代表它2沒有收到嘛

160
00:09:34,450 --> 00:09:37,480
那反正 anyway我至少要有一個timeout的機制

161
00:09:37,480 --> 00:09:40,610
就重送2  好2送過去然後回來

162
00:09:40,610 --> 00:09:42,950
結果回來說、回來已經變成7了

163
00:09:42,950 --> 00:09:46,850
就代表說好阿那代表3、4、5、6通通收到了

164
00:09:46,850 --> 00:09:51,310
也就是這個時候那個sender你看它一開始丟了

165
00:09:51,310 --> 00:09:53,180
1、2、3、4、5、6

166
00:09:53,180 --> 00:09:56,310
然後它等ACK  等到這個ACK一回來

167
00:09:56,310 --> 00:09:58,79
它就可以馬上這個視窗就可以移走了

168
00:09:58,80 --> 00:10:04,550
所以這個決定什麼、影響什麼  影響在這個視窗滑動的這個時機點

169
00:10:04,550 --> 00:10:08,680
因為這個cumulative acknowledgement相當於是說

170
00:10:08,680 --> 00:10:13,510
我們每把這個acknowledgement把它累積起來

171
00:10:13,510 --> 00:10:16,380
等於說它具有所謂累積這樣的性質

172
00:10:16,380 --> 00:10:22,680
那ACK等於7就代表說  7以前的全部都收到了

173
00:10:22,680 --> 00:10:28,79
那這個是非常非常常用到的  所謂的Cumulative的這樣子的概念

