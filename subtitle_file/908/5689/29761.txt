1
00:00:09,110 --> 00:00:10,410
那接下來我們來介紹

2
00:00:10,410 --> 00:00:14,50
這個所謂的sliding window裡面的另外的issue

3
00:00:14,50 --> 00:00:15,950
就是所謂的sequence number

4
00:00:15,950 --> 00:00:21,450
我們知道呢每一個封包都給它一個sequence number 編號

5
00:00:21,450 --> 00:00:23,810
這樣編號我們才有辦法辨認說

6
00:00:23,810 --> 00:00:26,849
它是1號、2號、3號或者4號嘛

7
00:00:26,850 --> 00:00:28,850
好，那我們接下來就來看說

8
00:00:28,850 --> 00:00:31,750
這個sequence number畢竟是一個number

9
00:00:31,750 --> 00:00:34,450
那既然是一個number呢我們說它就是finite

10
00:00:34,450 --> 00:00:38,210
它就是有限 就是這個sequence number呢

11
00:00:38,210 --> 00:00:39,850
到底有幾個sequence number

12
00:00:39,850 --> 00:00:41,750
這是有一個上限的

13
00:00:41,750 --> 00:00:45,580
那我們說這個sequence number本身也會在

14
00:00:45,580 --> 00:00:48,10
這個封包的我們講header

15
00:00:48,10 --> 00:00:53,379
在header的欄位裡面要把這個sequence number把它寫在上面

16
00:00:53,380 --> 00:00:54,810
這樣我們才知道說

17
00:00:54,810 --> 00:00:57,210
這個封包的sequence number是多少

18
00:00:57,210 --> 00:01:01,450
可是我們說因為它是一個finite就它是有限的

19
00:01:01,450 --> 00:01:03,350
那就看我們這個sequence number

20
00:01:03,350 --> 00:01:06,380
到底用多少個bit來表達的意思

21
00:01:06,380 --> 00:01:09,110
譬如說我們講如果我們用3個bit呢

22
00:01:09,110 --> 00:01:12,610
3個bit、2的3次方嘛

23
00:01:12,610 --> 00:01:14,780
我們說它可以用的sequence number

24
00:01:14,780 --> 00:01:16,350
就是0、1、2、3、4、5、6、7

25
00:01:16,350 --> 00:01:18,479
因為你也只有3個bit

26
00:01:18,480 --> 00:01:21,450
就只能8個sequence number的意思

27
00:01:21,450 --> 00:01:24,580
好，那我們說那如果你有4個bit的話呢

28
00:01:24,580 --> 00:01:27,10
你就有16個、2的4次方

29
00:01:27,10 --> 00:01:30,950
那如果你有10個bit、就2的10次方就是1000

30
00:01:30,950 --> 00:01:35,480
那每一個封包都要用掉一個sequence number

31
00:01:35,480 --> 00:01:38,610
所以當我們只有3個bit的時候

32
00:01:38,610 --> 00:01:40,980
我們的sequence number只有8個

33
00:01:40,980 --> 00:01:46,550
那你的封包如果只有送8個封包就OK嘛

34
00:01:46,550 --> 00:01:47,880
0到7就各用一個

35
00:01:47,880 --> 00:01:51,50
但是你的封包如果超過8個的話呢

36
00:01:51,50 --> 00:01:56,250
好，我們說這個時候呢sequence number就要重複使用

37
00:01:56,250 --> 00:02:04,480
重複使用就是說我們封包0、1、2、3、4、5、6、7......

38
00:02:04,480 --> 00:02:08,880
就是這個sequence number會被重複用到

39
00:02:08,880 --> 00:02:11,680
因為sequence number本身有一個上限

40
00:02:11,680 --> 00:02:16,410
我們的封包量可能會大於sequence number的數量

41
00:02:16,410 --> 00:02:22,310
那這樣的話呢  每一個sequence number就有可能需要被重複使用

42
00:02:22,310 --> 00:02:24,50
好，那接下來我們就來說

43
00:02:24,50 --> 00:02:27,510
Sequence number重複使用有什麼問題

44
00:02:27,510 --> 00:02:31,79
它會引發另外的問題  那我們就說

45
00:02:31,80 --> 00:02:37,410
好吧，如果sequence number被重複使用

46
00:02:37,410 --> 00:02:42,10
那receiver那一端它看到兩個封包

47
00:02:42,10 --> 00:02:44,10
它的sequence number是一樣的

48
00:02:44,10 --> 00:02:46,149
剛剛講0、1、2、3、4、5、6、7

49
00:02:46,150 --> 00:02:48,10
0、1、2、3、4、5、6、7

50
00:02:48,10 --> 00:02:50,549
阿那個0跟那個0 那個1跟那個1

51
00:02:50,550 --> 00:02:53,980
就是說receiver它怎麼區隔說

52
00:02:53,980 --> 00:02:57,179
如果呢我的sequence number是一樣的

53
00:02:57,180 --> 00:03:02,310
可是事實上它是屬於不同的封包阿  封包是不一樣的

54
00:03:02,310 --> 00:03:04,910
只是用了相同的sequence number

55
00:03:04,910 --> 00:03:10,210
那receiver到底有沒有辦法判斷說這兩個封包是不一樣的

56
00:03:10,210 --> 00:03:13,350
因為如果你看了sequence number是相同的

57
00:03:13,350 --> 00:03:15,650
我們會把它認為是一樣的

58
00:03:15,650 --> 00:03:17,650
那這樣我們就很麻煩了

59
00:03:17,650 --> 00:03:20,850
我們就說  好  怎麼解呢

60
00:03:20,850 --> 00:03:25,109
我們要避開這個問題  只有一個做法就是說

61
00:03:25,110 --> 00:03:33,50
好，我們說  可以用的sequence number

62
00:03:33,50 --> 00:03:39,380
它一定要大於同時在外面跑的封包數

63
00:03:39,380 --> 00:03:45,750
譬如剛剛提到  如果是編號是我們講只有3個bit

64
00:03:45,750 --> 00:03:48,780
代表說我有8個sequence number  0到7嘛

65
00:03:48,780 --> 00:03:54,350
那就代表說  那我們同時在外面跑的封包數量呢一定要小於8

66
00:03:54,350 --> 00:03:56,710
我們有sequence number是8

67
00:03:56,710 --> 00:04:01,480
就代表說我們同時在外面跑的封包的數量要小於8

68
00:04:01,480 --> 00:04:05,649
如果可以做到這樣的話還有機會解掉這個問題

69
00:04:05,650 --> 00:04:06,450
好，我們來看一下

70
00:04:06,450 --> 00:04:09,179
譬如說stop-and-wait這個protocol

71
00:04:09,180 --> 00:04:11,810
我們之前有介紹過stop-and-wait

72
00:04:11,810 --> 00:04:14,80
Stop-and-wait非常非常簡單

73
00:04:14,80 --> 00:04:17,980
它只有一個outstanding的frame

74
00:04:17,980 --> 00:04:20,580
因為送一個封包就要等ACK

75
00:04:20,579 --> 00:04:23,950
ACK沒有回來之前不可以送第二個封包

76
00:04:23,950 --> 00:04:26,550
也就是說stop-and-wait這個protocol呢

77
00:04:26,550 --> 00:04:29,750
它在同時在外面跑的封包的數量只有一個

78
00:04:29,750 --> 00:04:35,650
所以你記得我們的sequence number呢只有一個bit 只有2個

79
00:04:35,650 --> 00:04:38,750
就是我們之前用的sequence number、0跟1

80
00:04:38,750 --> 00:04:43,250
但是呢同時在外面跑的封包的數量是1

81
00:04:43,250 --> 00:04:50,750
所以這個滿足我們這樣的條件  我們說為了區隔說 為了避免

82
00:04:50,750 --> 00:04:53,750
應該說為了避免receiver收到兩個封包

83
00:04:53,750 --> 00:04:56,680
這個sequence number是一樣

84
00:04:56,680 --> 00:05:01,50
讓它沒辦法辨認這兩個是不一樣的內容

85
00:05:01,50 --> 00:05:05,980
我們就說同時在外面送的封包的數量

86
00:05:05,980 --> 00:05:11,950
要小於你的sequence number的這個space

87
00:05:11,950 --> 00:05:13,710
這個最大的這個數量

88
00:05:13,710 --> 00:05:17,750
那這個是一個很重要的這個條件

89
00:05:17,750 --> 00:05:22,450
那我們就說  我們就訂一個叫做maximum sequence number

90
00:05:22,450 --> 00:05:30,750
代表說目前可以使用的sequence number的一個上限值

91
00:05:30,750 --> 00:05:32,950
叫做maximum sequence number

92
00:05:32,950 --> 00:05:35,909
就最多拉、這個sequence number最大的這個數量

93
00:05:35,910 --> 00:05:39,880
好，我們最少最少要維持一個這樣的關係

94
00:05:39,880 --> 00:05:42,250
就剛剛提到這個關係就代表

95
00:05:42,250 --> 00:05:46,410
這個就是說SWS就是sending window size

96
00:05:46,410 --> 00:05:50,250
Sending window size就是說你可以同時送多少封包

97
00:05:50,250 --> 00:05:53,380
同時送出去不用等ACK

98
00:05:53,380 --> 00:05:55,750
也就說在外面跑的封包的意思

99
00:05:55,750 --> 00:05:58,880
好，在外面跑的封包就是這個

100
00:05:58,880 --> 00:06:02,409
Number of outstanding frames allowed

101
00:06:02,410 --> 00:06:03,580
這個就是SWS

102
00:06:03,580 --> 00:06:07,750
然後我們說它加一呢要小於等於maximum sequence

103
00:06:07,750 --> 00:06:09,550
Maximum sequence就是

104
00:06:09,550 --> 00:06:13,250
我們的最多可以用的sequence number的數量

105
00:06:13,250 --> 00:06:16,410
那我們就把這個SWS加一

106
00:06:16,410 --> 00:06:18,450
小於等於這個maximum sequence number

107
00:06:18,450 --> 00:06:20,849
就滿足了我們講這個條件

108
00:06:20,850 --> 00:06:25,410
那這樣我們至少可以不會讓receiver

109
00:06:25,410 --> 00:06:28,80
看到相同的sequence number

110
00:06:28,80 --> 00:06:31,479
不同的封包但是相同的sequence number

111
00:06:31,480 --> 00:06:37,780
但是我們說這樣的設定就夠了嗎

112
00:06:37,780 --> 00:06:42,950
我們說這個要看  看我們這個另外一個就是

113
00:06:42,950 --> 00:06:45,849
那我們的這個receiver這一端

114
00:06:45,850 --> 00:06:49,180
Receiving的window size看它的值怎麼設

115
00:06:49,180 --> 00:06:53,510
如果這個值設為1  我們剛剛有提到嘛

116
00:06:53,510 --> 00:06:56,580
Receiving的window size的設法有兩種

117
00:06:56,580 --> 00:07:00,609
一個是說它等於1  如果它等於1的話

118
00:07:00,610 --> 00:07:05,550
我們說這樣的條件是ok的  是夠的

119
00:07:05,550 --> 00:07:09,310
那如果我們把這個receiver的window size設為

120
00:07:09,310 --> 00:07:11,780
跟sending的window size一樣

121
00:07:11,780 --> 00:07:13,909
那我們設為一樣的時候呢

122
00:07:13,910 --> 00:07:18,610
我們就說  糟糕這就會出現問題就會出現問題

123
00:07:18,610 --> 00:07:22,750
底下我們就來看看那到底會發生什麼問題呢

124
00:07:22,750 --> 00:07:27,10
那我們說假設我們現在的sequence number有8個

125
00:07:27,10 --> 00:07:28,909
一樣，就剛剛講我們有8個

126
00:07:28,910 --> 00:07:32,50
就是0到7的意思

127
00:07:32,50 --> 00:07:35,780
我們的sequence number現在有0到7  有8個

128
00:07:35,780 --> 00:07:38,349
那我們也假設這個

129
00:07:38,350 --> 00:07:43,510
我們的這個receiver window size跟sending window size

130
00:07:43,510 --> 00:07:46,650
都滿足剛剛的條件

131
00:07:46,650 --> 00:07:49,979
就是window size加一要小於等於

132
00:07:49,980 --> 00:07:53,250
這個地方我們講window size加一

133
00:07:53,250 --> 00:07:57,910
它要小於等於這個maximum sequence number

134
00:07:57,910 --> 00:08:01,250
我們現在假設是這個條件  我們看一下這個條件

135
00:08:01,250 --> 00:08:03,980
就是sending的window size加一

136
00:08:03,980 --> 00:08:06,680
它要小於等於這個maximum sequence number

137
00:08:06,680 --> 00:08:10,810
那我們這裡maximum sequence number是8嘛  是8個

138
00:08:10,810 --> 00:08:15,480
所以我們說我們讓這個window size最多是等於7

139
00:08:15,480 --> 00:08:19,480
跟這個8就是剛好小於1拉

140
00:08:19,480 --> 00:08:23,480
那我們說接下來呢我們看一下我們說

141
00:08:23,480 --> 00:08:27,650
好，假設呢sender它就開始送封包

142
00:08:27,650 --> 00:08:30,549
它送了1到6  7個封包

143
00:08:30,550 --> 00:08:31,880
對不起0到6

144
00:08:31,880 --> 00:08:35,10
因為這個SWS等於7

145
00:08:35,10 --> 00:08:38,450
代表它最多可以送7個封包然後不用等ACK

146
00:08:38,450 --> 00:08:41,210
假設sender呢就送了0到6

147
00:08:41,210 --> 00:08:44,50
那receiver呢它也收了0到6

148
00:08:44,49 --> 00:08:47,449
代表說通通正確收到、通通收到了

149
00:08:47,450 --> 00:08:48,850
然後receiver呢

150
00:08:48,850 --> 00:08:51,450
當然就回一個acknowledgement就是0到6

151
00:08:51,450 --> 00:08:54,50
好，因為都收到嘛所以我就回ACK

152
00:08:54,50 --> 00:08:56,750
我們假設，就回了這個每一個封包

153
00:08:56,750 --> 00:08:59,310
在這個例子我們每一個封包都給一個ACK

154
00:08:59,310 --> 00:09:03,680
所以七個封包都收到  正常都正確

155
00:09:03,680 --> 00:09:04,810
我也回了七個ACK

156
00:09:04,810 --> 00:09:08,510
不過呢我們這個七個ACK呢通通掉了

157
00:09:08,510 --> 00:09:11,510
這是很重要  這是例子裡面

158
00:09:11,510 --> 00:09:15,350
等一下會看動畫  這個七個ACK通通都掉了

159
00:09:15,350 --> 00:09:21,980
那ACK掉了最後引發的動作就是timeout嘛

160
00:09:21,980 --> 00:09:23,410
因為對sender來講

161
00:09:23,410 --> 00:09:26,280
因為它送了七個封包它就要等那個ACK

162
00:09:26,280 --> 00:09:29,650
結果ACK全掉了所以它就會timeout

163
00:09:29,650 --> 00:09:31,10
timeout就重送

164
00:09:31,10 --> 00:09:35,480
問題就在當sender它timeout重送

165
00:09:35,480 --> 00:09:38,110
它重送0到6嘛

166
00:09:38,110 --> 00:09:41,650
因為剛剛送了這個0到6  所以現在重送也是0到6

167
00:09:41,650 --> 00:09:44,209
問題這個重送本身

168
00:09:44,210 --> 00:09:51,150
就會掉到那個receiver它會誤判

169
00:09:51,150 --> 00:09:52,650
為什麼會誤判呢

170
00:09:52,650 --> 00:09:55,550
因為這裡面receiver做了一個重要的動作

171
00:09:55,550 --> 00:09:59,680
我們看一下Receiver會做什麼動作呢

172
00:09:59,680 --> 00:10:01,510
他做了這個動作

173
00:10:01,510 --> 00:10:07,980
就是receiver，0到6都收到了而且它也回了

174
00:10:07,980 --> 00:10:12,450
那按照我們之前介紹receiver的window

175
00:10:12,450 --> 00:10:15,710
Sliding widow、它的window什麼時候slide呢

176
00:10:15,710 --> 00:10:24,50
就是它如果正確的收到依序收到  它的視窗已經滑走了滑掉了

177
00:10:24,50 --> 00:10:32,949
也就是說receiver它如果收到0到6  而且回ACK都正確 ACK也回了

178
00:10:32,950 --> 00:10:36,710
所以receiver認為這個0到6它已經沒事了  它已經收完了

179
00:10:36,710 --> 00:10:40,410
所以它就視窗就移過去了  移到哪裡呢注意到

180
00:10:40,410 --> 00:10:44,880
它的視窗已經移到7  0、1、2、3、4、5、6

181
00:10:44,880 --> 00:10:47,250
然後移到7嘛  7後面是什麼

182
00:10:47,250 --> 00:10:50,410
7後面就是0  因為我們的sequence number重複使用

183
00:10:50,410 --> 00:10:52,579
7後面就是0、1、2、3、4、5、6

184
00:10:52,580 --> 00:10:57,680
所以它已經移到7然後0、1、2、3、4、5

185
00:10:57,680 --> 00:10:59,810
因為總共只能最多7個嘛

186
00:10:59,810 --> 00:11:03,280
好，這個時候就出現一個問題

187
00:11:03,280 --> 00:11:07,10
當這個sender它重送的這個封包

188
00:11:07,10 --> 00:11:09,580
有一部分會掉到這裡面來

189
00:11:09,580 --> 00:11:14,910
掉到這個已經receiver已經滑動新的視窗裡面

190
00:11:14,910 --> 00:11:21,50
這個時候我們說  只要是在這個視窗裡面的receiver就會收起來

191
00:11:21,50 --> 00:11:26,849
變成說這個重複的我們講重送的  注意到這個地方

192
00:11:26,850 --> 00:11:35,980
Sender重送的會掉進  我們注意到它會掉到這個receiver的視窗裡面

193
00:11:35,980 --> 00:11:41,850
那這個就造成了重複接收拉  好，問題就來了

194
00:11:41,850 --> 00:11:43,380
這個時候就出現了問題啦

195
00:11:43,380 --> 00:11:47,550
它會出現這個重複接收的狀況  那這是不對的

196
00:11:47,550 --> 00:11:49,979
底下我們就來看一個動畫的例子

197
00:11:49,980 --> 00:11:53,210
好，我們說  在這個例子裡面

198
00:11:53,210 --> 00:11:56,880
Sender本身它的window size是7

199
00:11:56,880 --> 00:11:59,510
然後receiver的window size也是7

200
00:11:59,510 --> 00:12:02,410
可是我們的sequence number呢只有8個

201
00:12:02,410 --> 00:12:04,380
就是0、1、2、3、4、5、6、7

202
00:12:04,380 --> 00:12:06,350
0、1、2、3、4、5、6、7重複的使用

203
00:12:06,350 --> 00:12:09,880
那我們就說在現在這個狀況呢

204
00:12:09,880 --> 00:12:15,180
這個sender本身已經送了7個封包出來

205
00:12:15,180 --> 00:12:18,280
編號就上面的編號我們都給它編號

206
00:12:18,280 --> 00:12:22,910
就是綠色的這個0 這個就這塊

207
00:12:22,910 --> 00:12:28,709
就是sender本身它送了0、1、2、3、4、5、6

208
00:12:28,710 --> 00:12:31,510
這7個封包出來

209
00:12:31,510 --> 00:12:33,780
編號分別是0、1、2、3、4、5、6

210
00:12:33,780 --> 00:12:34,780
好，丟出來了

211
00:12:34,780 --> 00:12:36,350
那底下我們就來看

212
00:12:36,350 --> 00:12:41,680
那接下來receiver就收到這7個封包怎麼收法

213
00:12:41,680 --> 00:12:45,180
首先收到2，假設2先收到

214
00:12:45,180 --> 00:12:50,550
那我們知道如果receiver收到的封包沒有按照順序進來的話

215
00:12:50,550 --> 00:12:54,150
它的視窗不能移動  就最左邊那個

216
00:12:54,150 --> 00:12:57,50
現在我們最左邊剛好是這個編號是0

217
00:12:57,50 --> 00:13:01,150
這個receiver最左邊的這個號碼如果沒有出現

218
00:13:01,150 --> 00:13:05,709
就這個地方如果沒有出現的話  我們視窗是不能移動的

219
00:13:05,710 --> 00:13:10,480
好，這個2收到不能動  4假設按照順序

220
00:13:10,480 --> 00:13:15,610
4收到也不能動 3收到呢也不能動 5收到呢也不能動

221
00:13:15,610 --> 00:13:19,680
都不能動 這時候6收到還是不能動

222
00:13:19,680 --> 00:13:22,680
假設1收到還是不能動

223
00:13:22,680 --> 00:13:26,979
雖然都收到了，但是這些都叫做out-of-order嘛

224
00:13:26,980 --> 00:13:28,150
沒有按照順序

225
00:13:28,150 --> 00:13:29,980
但是呢我通通把它buffer起來

226
00:13:29,980 --> 00:13:31,710
我們注意看，最重要最重要

227
00:13:31,710 --> 00:13:33,280
這個0進來的時候發生什麼事呢

228
00:13:33,280 --> 00:13:37,650
好，當0收到的時候就收齊了

229
00:13:37,650 --> 00:13:42,750
收齊之後它就很簡單就開始滑動  Receiver就會開始滑動

230
00:13:42,750 --> 00:13:47,110
同時這個視窗就會滑動過來 就這樣子

231
00:13:47,110 --> 00:13:50,710
Receiver它已經完成了這個接收的動作

232
00:13:50,710 --> 00:13:54,510
而且它視窗已經滑走了  那滑走現在問題才來

233
00:13:54,510 --> 00:13:57,80
我們剛剛提到它回了這個ACK

234
00:13:57,80 --> 00:13:59,780
Receiver回了0到6的ACK

235
00:13:59,780 --> 00:14:06,579
我們假設這個ACK全部都掉了  那掉了之後馬上sender等下會發生什麼事情

236
00:14:06,580 --> 00:14:10,410
它會timeout  timeout以後呢會這6個封包

237
00:14:10,410 --> 00:14:13,449
這不是這7個封包  0到6全部重送

238
00:14:13,450 --> 00:14:14,710
注意到現在動畫

239
00:14:14,710 --> 00:14:19,480
它會timeout重送......

240
00:14:19,480 --> 00:14:24,10
好，你就發現這個7個封包重送的結果呢

241
00:14:24,10 --> 00:14:31,380
其中0到5  0到5呢它就掉在這個裡面

242
00:14:31,380 --> 00:14:33,150
這個就非常非常麻煩

243
00:14:33,150 --> 00:14:34,350
0到5在這裡

244
00:14:34,350 --> 00:14:40,880
這個在receiver來講的話  我的視窗剛剛才移過來

245
00:14:40,880 --> 00:14:45,310
就代表說只要掉在這個視窗裡面的我全收

246
00:14:45,310 --> 00:14:49,510
包含7、0、1、2、3、4、5我都收

247
00:14:49,510 --> 00:14:52,710
所以這個重送的這一塊

248
00:14:52,710 --> 00:14:56,910
這六個呢它就掉到這個視窗裡面來

249
00:14:56,910 --> 00:15:00,209
所以這六個本身我通通會收起來

250
00:15:00,210 --> 00:15:04,610
那有一個不收，就是這個6

251
00:15:04,610 --> 00:15:06,610
最外面這個編號這個6的

252
00:15:06,610 --> 00:15:11,450
編號6的它過來的時候因為6、編號6

253
00:15:11,450 --> 00:15:16,480
不在現在receiver現在的視窗裡面

254
00:15:16,480 --> 00:15:18,810
所以這個6是被丟棄的

255
00:15:18,810 --> 00:15:22,750
所以這個6本身是okay拉，沒問題但是被丟棄了

256
00:15:22,750 --> 00:15:27,410
但是呢這個編號0跟5的通通會被收起來

257
00:15:27,410 --> 00:15:32,709
那這個接收對不對、這個接收正不正常

258
00:15:32,710 --> 00:15:36,110
我們就看得到這個接收是不對的

259
00:15:36,110 --> 00:15:42,950
因為這個正常的封包0到5呢  這邊已經收過一次拉

260
00:15:42,950 --> 00:15:49,380
那你現在再收一次  這兩次都是剛剛原來的封包

261
00:15:49,380 --> 00:15:53,50
這個就叫做我們介紹的叫做duplicate frame

262
00:15:53,50 --> 00:15:56,380
這6個封包0到5通通都是重複的

263
00:15:56,380 --> 00:15:59,980
但是呢receiver它怎麼辦  它分不出來

264
00:15:59,980 --> 00:16:03,580
我剛剛0到5已經收了  視窗也移了

265
00:16:03,580 --> 00:16:06,750
現在來了一個0到5  它會認為這就是新的

266
00:16:06,750 --> 00:16:11,950
因為它落在我的視窗裡面就收  就會造成錯誤

267
00:16:11,950 --> 00:16:13,880
這個錯誤是為什麼錯誤呢

268
00:16:13,880 --> 00:16:17,110
就是因為我們的window size沒有設計好

269
00:16:17,110 --> 00:16:20,380
剛剛提到就是說如果呢

270
00:16:20,380 --> 00:16:25,810
我們說如果這sending window跟receiving window size

271
00:16:25,810 --> 00:16:33,479
當它們相等的時候  我們不能讓它只比maximum sequence number小於1

272
00:16:33,480 --> 00:16:38,110
不能只比它小  只比它小不夠安全

273
00:16:38,110 --> 00:16:41,410
就是我們一滑過來  這些重送的封包呢

274
00:16:41,410 --> 00:16:43,650
都還是可能會被收起來

275
00:16:43,650 --> 00:16:52,10
所以我們要再把這個條件呢再放嚴格一點  我們等一下來介紹到底是什麼條件

