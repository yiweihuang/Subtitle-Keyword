1
00:00:08,950 --> 00:00:12,49
那接下來我們就來介紹非常非常有名的

2
00:00:12,50 --> 00:00:14,150
叫做distance vector的這個protocol

3
00:00:14,150 --> 00:00:17,850
我們來看一下什麼叫做distance vector呢

4
00:00:17,850 --> 00:00:21,810
我們說每一個node本身  相當於每一個router

5
00:00:21,810 --> 00:00:23,750
它會做什麼事情呢

6
00:00:23,750 --> 00:00:28,250
它會maintain一個叫做  一個叫做vector的東西

7
00:00:28,250 --> 00:00:30,180
就叫做distance vector

8
00:00:30,180 --> 00:00:34,750
也就是說它會記錄了一個所謂的one dimensional array

9
00:00:34,750 --> 00:00:38,780
相當於一個所謂的單維的這個所謂的array

10
00:00:38,780 --> 00:00:42,180
好，那這個單維的array裡面它含了什麼

11
00:00:42,180 --> 00:00:47,480
含了就是說到所有其他node的distance

12
00:00:47,480 --> 00:00:50,50
為什麼叫做distance vector

13
00:00:50,50 --> 00:00:53,80
就是每一個router  它會記錄著說

14
00:00:53,80 --> 00:00:56,710
它到其它的node  就其它的router

15
00:00:56,710 --> 00:01:01,510
它們的cost是多少  那把它全部把它記下來

16
00:01:01,510 --> 00:01:03,949
這個東西就叫做distance vector

17
00:01:03,950 --> 00:01:06,210
相當於一個向量、距離的向量

18
00:01:06,210 --> 00:01:08,179
然後重點在於說

19
00:01:08,180 --> 00:01:11,750
每一個node本身把自己的距離向量

20
00:01:11,750 --> 00:01:13,480
自己的distance vector

21
00:01:13,480 --> 00:01:14,680
把它造出來之後呢

22
00:01:14,680 --> 00:01:22,110
它要把它分散或者把它送給它相鄰的neighbor

23
00:01:22,110 --> 00:01:26,180
相鄰、就是它把自己的這個distance vector

24
00:01:26,180 --> 00:01:31,180
送給相鄰的其它的router  那這是第一步

25
00:01:31,180 --> 00:01:34,150
然後經過大家這樣子交換之後呢

26
00:01:34,150 --> 00:01:38,810
最後再去算出最後所謂的router好，我們就說啦

27
00:01:38,810 --> 00:01:40,650
在這個例子裡面我們就說

28
00:01:40,650 --> 00:01:43,680
假設呢每一個node它知道說

29
00:01:45,150 --> 00:01:49,310
跟它直接相連的那個它的cost是多少

30
00:01:49,310 --> 00:01:51,450
這個通常比較容易做得到

31
00:01:51,450 --> 00:01:54,680
譬如說我們以A來講、以A這個例子來講

32
00:01:54,680 --> 00:01:58,610
在這個圖上面我們說跟A相鄰的有誰呢

33
00:01:58,610 --> 00:02:03,180
有B、有C、有E、有F

34
00:02:03,180 --> 00:02:05,250
就是跟它相鄰的

35
00:02:05,250 --> 00:02:11,680
也就是說A本身它只要知道這個B、C、E、F

36
00:02:11,680 --> 00:02:15,310
這四個跟它相鄰的cost  其他的它不知道

37
00:02:15,310 --> 00:02:19,280
因為其它的就是像這個D阿、像這個G阿

38
00:02:19,280 --> 00:02:22,210
這個就沒有相鄰  沒有相鄰你就不用管

39
00:02:22,210 --> 00:02:27,480
因為沒有直接相連的  你跟它的cost其實你也不知道

40
00:02:27,480 --> 00:02:28,950
好，但是因為你直接相連

41
00:02:28,950 --> 00:02:30,209
所以我們就知道說

42
00:02:30,210 --> 00:02:33,450
你說這個東西是ethernet、這是wifi

43
00:02:33,450 --> 00:02:36,480
這是什麼網路  因為直接相連

44
00:02:36,480 --> 00:02:38,850
所以我們就知道它的cost是多少

45
00:02:38,850 --> 00:02:40,579
好，所以我們就說

46
00:02:41,550 --> 00:02:45,110
依右上角這個網路的拓墣來看的話

47
00:02:45,110 --> 00:02:49,210
我們就可以有一個可以看的到initial distance

48
00:02:49,210 --> 00:02:51,710
Initial distance就是一開始的時候

49
00:02:51,710 --> 00:02:54,510
每一個router它都只知道

50
00:02:54,510 --> 00:02:58,880
跟它相連的這個cost  那我們現在假設

51
00:02:58,880 --> 00:03:03,579
這個為了簡單起見  我們假設這個每一個edge

52
00:03:03,580 --> 00:03:07,280
就等於說我們這個每一個edge  這個cost都是1

53
00:03:07,280 --> 00:03:11,650
簡單一點我們都是1  那有連的就有1的意思

54
00:03:11,650 --> 00:03:15,810
沒有連就是無限大  我們就說一開始時候呢

55
00:03:15,810 --> 00:03:19,680
每一個router  我們就看router A好了

56
00:03:19,680 --> 00:03:24,450
A本身我們說它的distance vector是什麼

57
00:03:24,450 --> 00:03:27,380
就是這裡  這個就是它的distance vector

58
00:03:28,680 --> 00:03:30,110
好，我們再看

59
00:03:30,110 --> 00:03:31,310
我們對A來講的話

60
00:03:31,310 --> 00:03:33,780
因為從上面這個圖來看

61
00:03:33,780 --> 00:03:37,980
跟A有相連的就是B、C、E、F嘛

62
00:03:37,980 --> 00:03:43,810
所以1代表相連，B、C、E、F

63
00:03:43,810 --> 00:03:46,650
那其他沒有相連的就是0

64
00:03:46,650 --> 00:03:48,250
對不起，就是無限大

65
00:03:48,250 --> 00:03:51,80
那自己當然跟自己的cost是0嘛

66
00:03:51,80 --> 00:03:54,510
所以這個就是一個distance vector

67
00:03:54,510 --> 00:03:58,579
A的distance vector就是、就是這樣子

68
00:03:58,580 --> 00:04:01,850
那我們再來看  那如果我們看隨便找一個

69
00:04:01,850 --> 00:04:03,950
譬如找D好了、D

70
00:04:03,950 --> 00:04:06,609
那D的distance vector就是這樣子

71
00:04:06,610 --> 00:04:09,610
這就是D的distance vector

72
00:04:09,610 --> 00:04:10,580
我們來看一下為什麼呢

73
00:04:10,580 --> 00:04:17,510
因為D本身只跟C跟G相連  所以D本身呢

74
00:04:17,510 --> 00:04:19,649
這個C這個地方是1

75
00:04:19,649 --> 00:04:22,580
對不起，G這個地方應該是1這樣子

76
00:04:22,580 --> 00:04:26,750
就是D本身是跟C跟G相連嘛

77
00:04:26,750 --> 00:04:29,510
所以他的distance vector就長的這個樣子

78
00:04:29,510 --> 00:04:31,880
那我們看如果是B的話呢

79
00:04:31,880 --> 00:04:35,780
B本身它的distance vector在這個地方

80
00:04:35,780 --> 00:04:43,380
那B本身因為它相連的是A跟C  所以A跟C

81
00:04:43,380 --> 00:04:45,610
對不起，這個也應該是1，A跟C

82
00:04:45,610 --> 00:04:48,810
這樣子的話呢  就是說每一個node本身

83
00:04:48,810 --> 00:04:52,380
都知道說它自己跟誰相連

84
00:04:52,380 --> 00:04:58,180
只有直接連在一起的  它的這個cost才會是1啦

85
00:04:58,180 --> 00:05:02,150
那沒有相連的都所謂的是無限大

86
00:05:02,150 --> 00:05:08,380
所以一開始我們說每一個node都只有自己的distance vector

87
00:05:08,380 --> 00:05:13,150
都有自己的  然後如果它有這個distance vector的時候呢

88
00:05:13,150 --> 00:05:15,250
那它一開始呢就會開始講

89
00:05:15,250 --> 00:05:17,110
建它的routing table

90
00:05:17,110 --> 00:05:19,80
那一開始我們說

91
00:05:19,80 --> 00:05:20,909
因為還沒有交換情報嘛

92
00:05:20,910 --> 00:05:26,80
所以每一個router它只能有自己的這個routing table

93
00:05:26,80 --> 00:05:30,909
那一開始每一個router它的routing table呢是不完整

94
00:05:30,910 --> 00:05:33,450
因為它只有跟它相連的資料

95
00:05:33,450 --> 00:05:36,680
那個沒有相連的  它還不知道怎麼一回事嘛

96
00:05:36,680 --> 00:05:40,850
所以我們說一樣  以這個圖的架構來看

97
00:05:40,850 --> 00:05:45,910
對於這個node A它的routing table呢  就像這個樣子

98
00:05:45,910 --> 00:05:49,250
譬如說它說如果要到B的話呢

99
00:05:49,250 --> 00:05:53,850
我應該host是1代表我跟它直接相連

100
00:05:53,850 --> 00:05:56,410
然後我下一個hop就是B

101
00:05:56,410 --> 00:06:01,50
就是要到B就送給B、然後要到C就送給C

102
00:06:01,50 --> 00:06:04,410
那是因為B、C跟它直接相連

103
00:06:04,410 --> 00:06:09,750
那你要給E要到E  我就直接送給E

104
00:06:09,750 --> 00:06:11,280
因為E也直接相連

105
00:06:11,280 --> 00:06:15,250
那要到F呢一樣我就給F

106
00:06:15,250 --> 00:06:19,150
也就是說在這個例子裡面  一開始的時候

107
00:06:19,150 --> 00:06:23,380
我們叫做initial的routing table  對A來講的話

108
00:06:23,380 --> 00:06:26,880
一開始的時候  因為一開始它只知道誰跟它相連

109
00:06:26,880 --> 00:06:31,680
所以要到這個直接相連的目的地  Cost就是1嘛

110
00:06:31,680 --> 00:06:33,610
因為它是直接相連

111
00:06:33,610 --> 00:06:38,150
而且就直接可以到的地方就是這個直接相連的

112
00:06:38,150 --> 00:06:41,780
所以這個是一開始的時候  還沒有交換

113
00:06:41,780 --> 00:06:46,380
那這個table本身其實是不夠、不夠完美的

114
00:06:46,380 --> 00:06:50,850
譬如說今天如果A收到一個封包說

115
00:06:50,850 --> 00:06:53,750
這個封包呢是要到D、目的地在D

116
00:06:53,750 --> 00:06:56,110
那我們看這就麻煩了

117
00:06:56,110 --> 00:06:59,110
第一個我沒有、我沒有資料

118
00:06:59,110 --> 00:07:03,580
D在哪裡我都不知道  那到底要送給誰

119
00:07:03,580 --> 00:07:07,150
我們看一下  這個時候到D的cost是無限大

120
00:07:07,150 --> 00:07:10,650
代表說我根本不知道到D要走多遠

121
00:07:10,650 --> 00:07:15,780
那甚至說我們這裡next hop也是一個不知道

122
00:07:15,780 --> 00:07:18,210
也就是說如果這個時候

123
00:07:18,210 --> 00:07:19,150
一開始的時候呢

124
00:07:19,150 --> 00:07:22,80
這個A它的routing table是這樣子

125
00:07:22,80 --> 00:07:24,780
它收到一個封包說要送給D

126
00:07:24,780 --> 00:07:26,650
那就麻煩了

127
00:07:26,650 --> 00:07:28,150
第一個我不知道往哪裡送

128
00:07:28,150 --> 00:07:31,710
因為我根本沒有那個D到底在哪裡這樣的概念

129
00:07:31,710 --> 00:07:34,310
完全沒有  所以一開始的時候呢

130
00:07:34,310 --> 00:07:38,950
這個initial呢是很一個我們算是這個routing table

131
00:07:38,950 --> 00:07:41,909
只有算是一部份  好，沒有關係

132
00:07:41,910 --> 00:07:42,950
那因為接下來呢

133
00:07:42,950 --> 00:07:48,280
我們就會讓router把它們自己的routing table跟對方交換

134
00:07:48,280 --> 00:07:52,510
它們就會開始交換  那我們說這個交換交換什麼

135
00:07:52,510 --> 00:07:54,310
就是交換這個distance vector

136
00:07:54,310 --> 00:07:58,480
就是每一個router它就把它自己的譬如說

137
00:07:58,480 --> 00:08:03,750
A就把它的這個vector這個就交給其他的node

138
00:08:03,750 --> 00:08:05,80
交給其它的node

139
00:08:05,80 --> 00:08:08,109
一樣每一個router呢

140
00:08:08,110 --> 00:08:13,280
都把自己的這個所謂的distance vector拿出來交換

141
00:08:13,280 --> 00:08:14,549
那我們說

142
00:08:14,550 --> 00:08:17,50
那最後最後交換出來的結果

143
00:08:17,50 --> 00:08:23,250
加上交換完再加上一個所謂的最短路徑的計算

144
00:08:23,250 --> 00:08:24,680
我們就發現說

145
00:08:24,680 --> 00:08:26,480
這個時候我們已經是

146
00:08:26,480 --> 00:08:27,780
我們叫final

147
00:08:27,780 --> 00:08:33,909
經過交換之後然後呢再重新整理、重新算過之後

148
00:08:33,909 --> 00:08:36,309
我們就發現說  我們比較聰明

149
00:08:36,309 --> 00:08:39,409
譬如說剛剛提到  我們如果要送到D

150
00:08:39,409 --> 00:08:41,780
一開始的時候我們不知道它要往哪裡去

151
00:08:41,780 --> 00:08:43,280
好，現在我們知道了說

152
00:08:43,280 --> 00:08:46,750
如果要送給D的話我們應該經過C

153
00:08:46,750 --> 00:08:50,550
我們應該走這條路、這樣子

154
00:08:50,550 --> 00:08:54,709
而且我的cost是2、2就代表說

155
00:08:54,710 --> 00:08:58,150
因為我們現在我們說每一個edge

156
00:08:58,150 --> 00:08:59,709
Cost都是1嘛

157
00:08:59,710 --> 00:09:02,410
2就代表說我們要走2步的意思

158
00:09:02,410 --> 00:09:07,310
要經過2個edge  好，那我們說如果我要到G的話呢

159
00:09:07,310 --> 00:09:12,109
G在這個地方  我們發現說我要讓它經過F

160
00:09:12,110 --> 00:09:17,280
就走這裡然後到G  那我的cost呢也是2

161
00:09:17,280 --> 00:09:21,280
也就是說我們在這個final的這種routing table裡面

162
00:09:21,280 --> 00:09:24,350
我們把沒有直接相連的

163
00:09:24,350 --> 00:09:28,50
像剛剛講D沒有直接相連、G沒有直接相連

164
00:09:28,50 --> 00:09:30,979
我們都把它、把它加起來

165
00:09:30,980 --> 00:09:32,750
都把它含進來

166
00:09:32,750 --> 00:09:35,480
然後一個透過C、一個透過F

167
00:09:35,480 --> 00:09:38,410
就是說如果要到D我們就走這樣子

168
00:09:38,410 --> 00:09:42,510
如果要到G我們就走這樣子  原來是不知道的

169
00:09:42,510 --> 00:09:45,980
那經過交換之後呢 我們就知道這件事情

170
00:09:45,980 --> 00:09:50,180
那這個就是我們講A的final的routing table

171
00:09:50,180 --> 00:09:50,949
那我們來看

172
00:09:50,950 --> 00:09:54,210
那所有的node呢、所有node

173
00:09:54,210 --> 00:09:58,950
好，我們這個地方是把所有node的這個routing table

174
00:09:58,950 --> 00:10:03,380
通通把它放在一個表來表示

175
00:10:03,380 --> 00:10:07,780
事實上對於每一個、每一個這個node來講

176
00:10:07,780 --> 00:10:12,350
譬如說針對A來講的話  那這是它的distance的算法

177
00:10:12,350 --> 00:10:16,710
它最後得出來的  那對於譬如說對於這個E來講的話

178
00:10:16,710 --> 00:10:22,780
它最後得出來的這個cost是這樣  我們只是把它全部合在一起看

179
00:10:22,780 --> 00:10:24,850
那事實上經過交換之後呢

180
00:10:24,850 --> 00:10:28,610
我們也知道每一個node它要到其他node

181
00:10:28,610 --> 00:10:31,380
它的cost  這個地方可以看得出來

182
00:10:31,380 --> 00:10:34,10
譬如出來我們假設用1  用1來當例子

183
00:10:34,10 --> 00:10:36,880
E到A，Cost是1嘛

184
00:10:36,880 --> 00:10:41,450
因為它跟A直接相連  那2的有什麼

185
00:10:41,450 --> 00:10:46,710
可以到F要2、到B也要2、到C也要2嘛

186
00:10:46,710 --> 00:10:51,250
所以它到這個B啦

187
00:10:51,250 --> 00:10:57,680
然後到C啦、然後到這個F呢都是2、Cost都是2

188
00:10:57,680 --> 00:11:01,979
好，那如果它要到D的話呢可以走這一條

189
00:11:01,980 --> 00:11:03,210
再拉一個就是3

190
00:11:03,210 --> 00:11:05,650
那可以再拉一個這樣就是3

191
00:11:05,650 --> 00:11:10,610
就是說如果它要到D的話  等於說cost就是3

192
00:11:10,610 --> 00:11:13,680
然後要到G的話  它的cost就是3

193
00:11:13,680 --> 00:11:19,579
所以這個表呢就是說我們經過交換、情報交換之後

194
00:11:19,580 --> 00:11:21,380
我們最後最後這個distance

195
00:11:21,380 --> 00:11:25,350
我們distance的cost  在每一個router裡面

196
00:11:25,350 --> 00:11:27,550
它都會記這個東西

197
00:11:27,550 --> 00:11:31,380
就是說事實上最後的routing table是長這個樣子

198
00:11:31,380 --> 00:11:33,550
但是我們這個routing table裡面

199
00:11:33,550 --> 00:11:36,349
因為它必須記錄這個所謂的cost

200
00:11:36,350 --> 00:11:40,150
它要記這個cost的值、這個值

201
00:11:40,150 --> 00:11:41,709
這個cost要記下來

202
00:11:41,710 --> 00:11:47,150
那這個cost呢就相當於是這個上面所顯示的cost、就這個

203
00:11:47,150 --> 00:11:52,380
我們只是把每一個router裡面它的routing table裡面有一個cost

204
00:11:52,380 --> 00:11:55,480
把它全部彙整起來  那就會長這個樣子

205
00:11:55,480 --> 00:11:59,150
也就是說  這個distance vector本身的概念很簡單

206
00:11:59,150 --> 00:12:04,449
就是每一個router都把它跟直接相連的router

207
00:12:04,450 --> 00:12:09,180
先把這個distance vector把它建起來  然後就交給其它

208
00:12:09,180 --> 00:12:15,10
我們注意到它是交給跟它相鄰的router  就是跟相鄰的router交換

209
00:12:15,10 --> 00:12:17,950
然後呢我就可以有更完整的資料

210
00:12:17,950 --> 00:12:20,350
然後再交換、再交換、再交換

211
00:12:20,350 --> 00:12:22,210
所以是交換、交換這樣子

212
00:12:22,210 --> 00:12:24,150
經過一段時間之後呢

213
00:12:24,150 --> 00:12:27,579
它就會整個網路的這個結構就出來

214
00:12:27,580 --> 00:12:29,680
就可以算出這個方法

215
00:12:29,680 --> 00:12:32,810
好，那我們說它的做法是什麼

216
00:12:32,810 --> 00:12:33,849
第一個我們說

217
00:12:33,850 --> 00:12:37,280
每隔，我們說每隔一段時間

218
00:12:37,280 --> 00:12:41,410
譬如說T秒、T秒  在標準裡面

219
00:12:41,410 --> 00:12:46,79
譬如說RIP來講它是30秒  我們就假設每隔T秒

220
00:12:46,80 --> 00:12:51,410
每一個router呢就把它的routing table送給它的neighbor

221
00:12:51,410 --> 00:12:55,280
Routing table一開始呢只有那個distance vector

222
00:12:55,280 --> 00:12:59,449
因為只有一個簡單的嘛  然後丟給它的neighbor

223
00:12:59,450 --> 00:13:00,750
那你交換之後呢

224
00:13:00,750 --> 00:13:04,210
我這個routing table就會有點越來越完整

225
00:13:04,210 --> 00:13:06,610
雖然一開始交換一次還不完整

226
00:13:06,610 --> 00:13:10,280
那沒有關係  就是手上有什麼樣的routing table

227
00:13:10,280 --> 00:13:16,150
就跟隔壁的交換、跟隔壁的交換  然後交換之後呢

228
00:13:16,150 --> 00:13:19,50
它就去更新它的routing table

229
00:13:19,50 --> 00:13:24,50
因為它交換就得到新的資料  獲得到這個新的訊息

230
00:13:24,50 --> 00:13:30,109
那有新的訊息之後呢  那我們就可以來再造一個更新的

231
00:13:30,110 --> 00:13:34,910
那造完更新之後  我們說因為它有一個說每隔多少秒

232
00:13:34,910 --> 00:13:38,150
我又交換，那我又得到更新的

233
00:13:38,150 --> 00:13:42,579
等於說我一開始交換就會再交換、再交換

234
00:13:42,580 --> 00:13:46,480
交換的過程當中我就慢慢的把自己的routing table呢

235
00:13:46,480 --> 00:13:53,110
越建越完整  那這個就是distance vector的一個所謂的作法

236
00:13:53,110 --> 00:13:56,710
非常簡單  好，那接下來我們要談的是說

237
00:13:56,710 --> 00:14:00,580
那distance vector有什麼樣的缺點

238
00:14:00,580 --> 00:14:02,250
好，有什麼問題呢

239
00:14:02,250 --> 00:14:04,980
我們說首先它的特性是這樣

240
00:14:04,980 --> 00:14:10,210
就是說針對good news、好消息傳得快

241
00:14:10,210 --> 00:14:11,880
我們叫fast response

242
00:14:11,880 --> 00:14:14,410
什麼叫做好消息傳得快

243
00:14:14,410 --> 00:14:17,280
就是說原來譬如說原來的link

244
00:14:17,280 --> 00:14:20,250
譬如說阻塞嘛、cost變高了

245
00:14:20,250 --> 00:14:25,810
那現在這個網路呢突然變通暢了、Cost降低了

246
00:14:25,810 --> 00:14:32,310
這種cost降低呢傳得快  就是說網路變好大家比較快知道

247
00:14:32,310 --> 00:14:37,880
這是distance vector的特色之一  就是網路如果變好

248
00:14:37,880 --> 00:14:41,410
就是好消息啦  那好消息傳得快

249
00:14:41,410 --> 00:14:43,850
很快就大家交換、交換、交換之後呢

250
00:14:43,850 --> 00:14:47,580
大家就會把這個好消息把它反應出來

251
00:14:47,580 --> 00:14:50,280
它還有一個特色叫做bad news

252
00:14:50,280 --> 00:14:54,280
Slow response、壞消息傳得慢

253
00:14:54,280 --> 00:14:58,10
壞消息傳得慢的意思就是說

254
00:14:58,10 --> 00:15:00,780
如果我們的網路狀態變差了

255
00:15:00,780 --> 00:15:07,250
譬如說這個變阻塞或者斷線  包括斷線就是壞消息嘛

256
00:15:07,250 --> 00:15:10,810
就是線路斷掉  那線路斷掉這樣的事情

257
00:15:10,810 --> 00:15:16,579
要讓這些router知道  我們說這個它會比較慢

258
00:15:16,580 --> 00:15:21,680
就是壞消息傳得慢、好消息傳得快

259
00:15:21,680 --> 00:15:25,849
這就是distance vector的特色  還有一個就是說

260
00:15:25,850 --> 00:15:31,180
因為它定期  它就會交換、交換、交換

261
00:15:31,180 --> 00:15:35,750
所以我們說可能這個交換的這個message的數量

262
00:15:35,750 --> 00:15:38,50
也可能就比較多一點

263
00:15:38,50 --> 00:15:41,780
那不過重點在於說distance vector

264
00:15:41,780 --> 00:15:45,110
它有一個非常非常重要的特性

265
00:15:45,110 --> 00:15:50,910
就是好消息傳得快、壞消息傳得慢

266
00:15:50,910 --> 00:15:56,510
那我們後面呢就會用一些例子來解釋說為什麼

267
00:15:56,510 --> 00:16:00,310
為什麼好消息傳得快  那為什麼壞消息會傳得慢

