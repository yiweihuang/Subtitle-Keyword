1
00:00:08,950 --> 00:00:13,809
好，那接下來我們就來介紹有關這個router的特性

2
00:00:13,810 --> 00:00:15,280
我們叫router的這個特徵

3
00:00:15,280 --> 00:00:20,480
我們說首先第一個呢router本身是我們叫network layer routing

4
00:00:20,480 --> 00:00:23,550
因為它是算是第三層的設備

5
00:00:23,550 --> 00:00:26,150
所以這個是network layer的routing

6
00:00:26,150 --> 00:00:28,509
那network layer的routing本身

7
00:00:28,510 --> 00:00:32,780
它就跟network layer的protocol是我們叫protocol dependent

8
00:00:32,780 --> 00:00:36,50
譬如說IP的它就是跑IP的

9
00:00:36,50 --> 00:00:38,510
然後IPX另外一個protocol

10
00:00:38,510 --> 00:00:41,449
就是第三層的protocol，就是跑IPX

11
00:00:41,450 --> 00:00:43,680
那IP跟IPX就是不一樣

12
00:00:43,680 --> 00:00:47,280
所以本身我們說這個router本身

13
00:00:47,280 --> 00:00:51,10
它到底是用哪一個network layer的protocol

14
00:00:51,10 --> 00:00:53,610
它是有關係的  這是第一點

15
00:00:53,610 --> 00:00:55,980
第二點就是說我們說呀

16
00:00:55,980 --> 00:01:00,610
網路上面會出現所謂的MAC broadcast跟multicast packets

17
00:01:00,610 --> 00:01:05,850
就是我們在一個LAN、一個layer 2或是一個交換機的網路

18
00:01:05,850 --> 00:01:10,479
可能會出現所謂的廣播的封包或者群播的封包

19
00:01:10,480 --> 00:01:11,880
我們之前也介紹過

20
00:01:11,880 --> 00:01:16,649
譬如說一般的layer 2的switch或者layer 2的bridge

21
00:01:16,650 --> 00:01:19,580
看到一個broadcast或multicast

22
00:01:19,580 --> 00:01:20,980
因為它不知道

23
00:01:20,980 --> 00:01:24,450
尤其是multicast它不知道它的目的地在什麼地方

24
00:01:24,450 --> 00:01:26,550
或者它的member在什麼地方

25
00:01:26,550 --> 00:01:30,250
所以一般的layer 2的switch或bridge

26
00:01:30,250 --> 00:01:32,680
看到multicast就會把它廣播出去

27
00:01:32,680 --> 00:01:33,950
那我們說這種廣播

28
00:01:33,950 --> 00:01:37,280
第一個浪費頻寬、第二個有安全性的問題

29
00:01:37,280 --> 00:01:39,310
因為很容易被人家竊聽嘛

30
00:01:39,310 --> 00:01:42,980
好，那我們說router本身呢它會filter

31
00:01:42,980 --> 00:01:45,510
這是router很重要的功能之一

32
00:01:45,510 --> 00:01:49,480
就是說router呢看到一個廣播的封包

33
00:01:49,480 --> 00:01:51,950
或者看到一個所謂的multicast封包

34
00:01:51,950 --> 00:01:55,350
那它會把它濾掉

35
00:01:55,350 --> 00:01:58,479
除非它是說譬如說它是一個廣播

36
00:01:58,480 --> 00:02:02,510
它會收上來看一下但是不會隨便把它轉出去

37
00:02:02,510 --> 00:02:09,710
所以router本身它會把這個MAC所謂的broadcast跟multicast

38
00:02:09,710 --> 00:02:11,580
這個封包呢它會把它濾掉

39
00:02:11,580 --> 00:02:15,80
那router本身我們說也很容易來support

40
00:02:15,80 --> 00:02:16,980
我們叫mixed media

41
00:02:16,980 --> 00:02:21,950
因為我們說這個router可以接很多個port、很多個接口

42
00:02:21,950 --> 00:02:24,880
那每一個接口呢可以是不同的媒介

43
00:02:24,880 --> 00:02:28,609
譬如說是光纖的、同軸電纜的、wifi的

44
00:02:28,610 --> 00:02:33,880
就不同的這種media、不同的速度都可以不一樣

45
00:02:33,880 --> 00:02:36,49
router本身具有這樣的特性

46
00:02:36,50 --> 00:02:40,510
然後我們說router本身會做packet fragmentation

47
00:02:40,510 --> 00:02:43,679
會做封包的所謂的分割

48
00:02:43,680 --> 00:02:48,450
那當然它router本身也可以做組合

49
00:02:48,450 --> 00:02:53,609
但是我們說因為分割之後呢就會各走各的路

50
00:02:53,610 --> 00:02:58,510
所以我們說把這個分割的之後的這個fragment的組合

51
00:02:58,510 --> 00:03:04,10
一般我們是讓host就是最後的目的地再來進行這樣的工作

52
00:03:04,10 --> 00:03:07,149
不過router本身當然它也可以做

53
00:03:07,150 --> 00:03:09,880
如果它可以把它收齊的話

54
00:03:09,880 --> 00:03:11,310
不過一般是不做

55
00:03:11,310 --> 00:03:15,10
我們說這個reassembly交給那個host來做比較好

56
00:03:15,10 --> 00:03:16,709
好，我們說

57
00:03:16,710 --> 00:03:21,680
好，那IP本身呢我們講

58
00:03:21,680 --> 00:03:26,250
router本身呢它會根據這個網路的address來做filtering

59
00:03:26,250 --> 00:03:33,450
filtering就是說它是可以故意把一些譬如說像有惡意的這個封包

60
00:03:33,450 --> 00:03:41,450
一般叫做access-control list、ACL、Access-control list

61
00:03:41,450 --> 00:03:43,579
變成是說我們有一些黑名單

62
00:03:49,980 --> 00:03:54,10
那這種我們不受歡迎的這種IP叫做黑名單

63
00:03:54,10 --> 00:03:57,79
我們把這個黑名單放到router裡面去的時候

64
00:03:57,80 --> 00:03:59,710
它就可以做這個過濾的動作

65
00:03:59,710 --> 00:04:04,150
我們說這個router本來是封包進來我就去查表嘛

66
00:04:04,150 --> 00:04:05,610
說這個封包要到哪裡去

67
00:04:05,610 --> 00:04:08,180
但是我們也可以做一個動作就是說

68
00:04:08,180 --> 00:04:13,550
我們看看說這個封包裡面的IP到底是歡不歡迎

69
00:04:13,550 --> 00:04:18,250
如果是不受歡迎的我們說是黑名單的我們就把它濾掉了

70
00:04:18,250 --> 00:04:20,250
我們就根本不幫它送

71
00:04:20,250 --> 00:04:24,650
所以router本身它其實有類似防火牆的這個功能

72
00:04:24,650 --> 00:04:28,880
router本身最基本的就是像ACL

73
00:04:28,880 --> 00:04:31,550
我們叫做access control list

74
00:04:31,550 --> 00:04:32,810
就它有一個清單

75
00:04:32,810 --> 00:04:36,280
根據這個清單來做封包處理的參考

76
00:04:36,280 --> 00:04:38,880
那在黑名單裡面的就把它濾掉

77
00:04:38,880 --> 00:04:42,180
所以router本身其實不只做封包的轉送

78
00:04:42,180 --> 00:04:45,950
它其實也在幫我們做防護的這個工作

79
00:04:45,950 --> 00:04:49,180
那router本身還可以做所謂的accounting

80
00:04:49,180 --> 00:04:53,880
accounting就牽涉到類似像計費

81
00:04:53,880 --> 00:04:57,850
譬如說根據你的流量，它會記這個封包的流量

82
00:04:57,850 --> 00:05:01,310
譬如說從哪個IP丟出來的封包流量多少

83
00:05:01,310 --> 00:05:05,450
或者說呢要到某一個destination的IP

84
00:05:05,450 --> 00:05:06,950
那它的流量多少

85
00:05:06,950 --> 00:05:13,710
那它可以根據這些流量來做一些所謂的計費或者計價

86
00:05:13,710 --> 00:05:18,80
因為有時候我們網路的這個收費呢是跟我們流量有關

87
00:05:18,80 --> 00:05:21,750
那流量的計算，Router呢可以做這件事情

88
00:05:21,750 --> 00:05:24,750
因為封包都是經過router去轉送的

89
00:05:24,750 --> 00:05:28,150
所以router本身可以幫我們做所謂的accounting的事情

90
00:05:28,150 --> 00:05:33,750
好，那我們說router本身呢看看在通訊上面

91
00:05:33,750 --> 00:05:38,80
如果說我們這個  我們講我們的主機拉

92
00:05:38,80 --> 00:05:42,650
跟router之間它怎麼來通訊

93
00:05:42,650 --> 00:05:44,349
因為我們剛剛提到

94
00:05:44,350 --> 00:05:49,950
我們的主機通常會接到一個譬如說一個layer 2的switch

95
00:05:49,950 --> 00:05:53,349
或者一個所謂的wifi的access point

96
00:05:53,350 --> 00:05:55,450
然後後面再接到所謂的router

97
00:05:55,450 --> 00:05:59,380
就是如果我們的主機是可以透過AP

98
00:05:59,380 --> 00:06:02,710
透過交換機接到router去

99
00:06:02,710 --> 00:06:05,10
當然也可以直接接到router

100
00:06:05,10 --> 00:06:07,110
就是這個router本身它有很多接口

101
00:06:07,110 --> 00:06:09,510
大部分這個router一接出來

102
00:06:09,510 --> 00:06:12,80
通常是layer 2的交換機或者access point

103
00:06:12,80 --> 00:06:14,409
但它也可以直接接到host

104
00:06:14,410 --> 00:06:17,150
就是我們的電腦本身也可以跟router呢

105
00:06:17,150 --> 00:06:20,250
直接用一條線把它接起來，這都可以

106
00:06:20,250 --> 00:06:23,310
好，但是我們特別想強調是說

107
00:06:23,310 --> 00:06:27,510
router本身我們說它是highly configurable

108
00:06:27,510 --> 00:06:30,610
router本身的設定呢非常有彈性的

109
00:06:30,610 --> 00:06:35,250
就是我們設它IP啦、設它這些routing的這些protocol

110
00:06:35,250 --> 00:06:36,380
我們可以做設定

111
00:06:36,380 --> 00:06:40,850
很容易設定，我們說但是呢不容易做對

112
00:06:40,850 --> 00:06:44,410
就是因為它的這個設定必須有一些經驗

113
00:06:44,410 --> 00:06:46,280
必須有一些know how

114
00:06:46,280 --> 00:06:51,710
一個對router、對IP這些相關的經驗或相關的知識

115
00:06:51,710 --> 00:06:53,510
如果不夠多的話

116
00:06:53,510 --> 00:06:55,150
我今天把一個router交給你

117
00:06:55,150 --> 00:06:57,349
請把它設定讓它可以動

118
00:06:57,350 --> 00:07:00,110
這個就一個不是很簡單的事情

119
00:07:00,110 --> 00:07:03,350
因為你只要設錯這個封包可能就繞錯位置了

120
00:07:03,350 --> 00:07:05,650
或者根本就被drop掉

121
00:07:05,650 --> 00:07:10,10
變成說這個router的設定是一個很重要的工作呢

122
00:07:10,10 --> 00:07:13,150
很容易做因為它很有彈性可是不容易對

123
00:07:13,150 --> 00:07:15,380
能不能設定對呢

124
00:07:15,380 --> 00:07:17,880
這個就是要看我們的經驗夠不夠

125
00:07:17,880 --> 00:07:23,50
那事實上在國際這邊還有很多就是考這個證照

126
00:07:23,50 --> 00:07:26,180
就是專門針對router的設定、router的管理

127
00:07:26,180 --> 00:07:28,150
還有一個證照去考

128
00:07:28,150 --> 00:07:31,750
如果有這個證照就代表說你對router的認識是夠的

129
00:07:31,750 --> 00:07:33,50
好，我們再看

130
00:07:33,50 --> 00:07:37,480
那router本身它也可以handle我們叫做speed mismatch

131
00:07:37,480 --> 00:07:41,910
剛提到因為我們可以有不同的media嘛

132
00:07:41,910 --> 00:07:44,710
那這個media本身會有不同的速度

133
00:07:44,710 --> 00:07:47,680
所以router本身在收封包的時候

134
00:07:47,680 --> 00:07:51,780
就是將剛剛講的快速的網路進來的封包量大

135
00:07:51,780 --> 00:07:54,780
那它要把它丟到比較慢速的網路

136
00:07:54,780 --> 00:07:57,109
就是進來多  出去少

137
00:07:57,110 --> 00:08:01,210
那它就一定要暫時把它buffer起來

138
00:08:01,210 --> 00:08:03,10
先暫存然後慢慢的消化

139
00:08:03,10 --> 00:08:04,710
那它有這樣的能力

140
00:08:04,710 --> 00:08:12,310
也就是說router本身有足夠多的buffer來吸收或者消化大量進來的封包

141
00:08:12,310 --> 00:08:13,480
可是出去比較慢

142
00:08:13,480 --> 00:08:16,310
但是我們說不管它這個buffer多大

143
00:08:16,310 --> 00:08:18,550
它還是有一個上限

144
00:08:18,550 --> 00:08:21,710
那萬一進來的量持續的增加

145
00:08:21,710 --> 00:08:23,310
出去呢持續的消化不良

146
00:08:23,310 --> 00:08:26,910
那它這個buffer呢還是最後還是會有我們講overflow

147
00:08:26,910 --> 00:08:31,180
還是會滿掉  那一滿掉就必須開始丟封包了

148
00:08:31,180 --> 00:08:33,680
那到底丟封包的時候怎麼挑

149
00:08:33,679 --> 00:08:35,679
那也是另外的機制

150
00:08:35,679 --> 00:08:38,109
就是那我丟封包的時候我挑誰的封包先丟

151
00:08:38,110 --> 00:08:41,880
這個都是我們後面有機會會來講的一個機制

152
00:08:41,880 --> 00:08:44,250
好，那這個也就是說

153
00:08:44,250 --> 00:08:49,380
這個router本身呢它還可以做叫做congestion control

154
00:08:49,380 --> 00:08:53,150
Congestion control就是擁擠的控制

155
00:08:53,150 --> 00:08:58,79
譬如說我這個router呢已經消化不良了

156
00:08:58,80 --> 00:09:02,780
剛剛提到我就是因為收了太多然後呢我已經消化不良

157
00:09:02,780 --> 00:09:04,850
所以我會把一些封包丟掉

158
00:09:04,850 --> 00:09:08,510
封包丟掉本身也算是congestion control的一個方法

159
00:09:08,510 --> 00:09:10,910
因為我丟棄某一些封包

160
00:09:10,910 --> 00:09:15,280
好，那就會讓這個擁擠的程度呢就降低嘛

161
00:09:15,280 --> 00:09:18,550
也就是說我如果沒辦法靠我自己把它消化掉

162
00:09:18,550 --> 00:09:21,150
那我至少會把一些封包把它丟掉

163
00:09:21,150 --> 00:09:23,910
那至少降低這個封包的這個流量

164
00:09:23,910 --> 00:09:28,10
也算是間接的或者直接的我就降低這個congestion

165
00:09:28,10 --> 00:09:31,510
好，當然我也可以告訴我的上游說

166
00:09:31,510 --> 00:09:35,150
你送慢一點，因為我已經消化不良

167
00:09:35,150 --> 00:09:37,810
送慢一點，那這樣子就是說

168
00:09:37,810 --> 00:09:41,780
router跟router之間它們可以經過這樣子溝通來回

169
00:09:41,780 --> 00:09:46,50
來控制這個傳送的速率啦或者資料量

170
00:09:46,50 --> 00:09:48,449
這個都是router可以做的事情

171
00:09:48,450 --> 00:09:50,610
好，那我們再來看

172
00:09:50,610 --> 00:09:53,910
那router呢還有很重要的這個特性

173
00:09:53,910 --> 00:09:55,280
就是所謂的routing protocol

174
00:09:55,280 --> 00:10:00,310
我們說routing protocol就是router跟router之間

175
00:10:00,310 --> 00:10:03,550
它們平常要互相溝通的一個protocol

176
00:10:03,550 --> 00:10:06,910
那溝通的目的就是希望把每一個router

177
00:10:06,910 --> 00:10:09,510
它周邊的網路的狀況

178
00:10:09,510 --> 00:10:12,210
譬如說哪個地方快、哪個地方慢

179
00:10:12,210 --> 00:10:14,180
哪個地方擁擠、哪個地方舒緩

180
00:10:14,180 --> 00:10:18,609
把這個整個拓墣的結構還有整個網路的狀況呢

181
00:10:18,610 --> 00:10:20,880
好，告訴其他的router

182
00:10:20,880 --> 00:10:23,150
好，那這樣的話我們就可以

183
00:10:23,150 --> 00:10:30,480
根據這個routing protocol來算出那個所謂的routing table

184
00:10:30,480 --> 00:10:35,650
那routing table呢就可以決定說到底我們要走哪一條路

185
00:10:35,650 --> 00:10:40,810
就是routing table就是告訴我們說我們的路呢到底要怎麼走

186
00:10:40,810 --> 00:10:43,410
那這個routing table本身我們說又有兩類

187
00:10:43,410 --> 00:10:45,180
一個叫static routing

188
00:10:45,180 --> 00:10:48,849
Static routing就是我們做設定

189
00:10:48,850 --> 00:10:52,110
就是說譬如說從這個IP到那個IP

190
00:10:52,110 --> 00:10:54,310
我們不管網路的狀況

191
00:10:54,310 --> 00:10:57,849
不管它近或者遠、或者快、或者慢

192
00:10:57,850 --> 00:10:59,880
我就是要讓它走這條路

193
00:10:59,880 --> 00:11:01,910
這個叫static routing

194
00:11:01,910 --> 00:11:03,910
就是所謂的靜態的這個路由

195
00:11:03,910 --> 00:11:08,579
就是說因為策略的關係或者因為怎麼樣特別的考量

196
00:11:08,580 --> 00:11:15,210
我們說要到某一個這個目的地或者某一個網路、網段

197
00:11:15,210 --> 00:11:17,580
我固定讓它走哪一條路

198
00:11:17,580 --> 00:11:21,510
所以這種static routing是比較用策略性的

199
00:11:21,510 --> 00:11:24,180
或者用管理式的方式來做決定的

200
00:11:24,180 --> 00:11:29,109
跟網路的狀態沒關係  跟遠近快慢都沒關係

201
00:11:29,110 --> 00:11:31,650
就是我是靜態設定好

202
00:11:31,650 --> 00:11:33,380
好，這是最基本的

203
00:11:33,380 --> 00:11:35,680
那另外一個就是所謂的動態

204
00:11:35,680 --> 00:11:39,180
就是剛剛提到說我們會根據網路的狀態

205
00:11:39,180 --> 00:11:43,550
網路好的盡量走  那網路比較近的盡量走

206
00:11:43,550 --> 00:11:47,10
所以dynamic routing就變成說

207
00:11:47,10 --> 00:11:50,680
我必須能夠反應網路的狀態

208
00:11:50,680 --> 00:11:54,79
根據網路的狀態來選一個最好的路徑

209
00:11:54,80 --> 00:11:56,580
那我們說這種比較典型的

210
00:11:56,580 --> 00:12:00,380
比較經典的routing protocol有兩個

211
00:12:00,380 --> 00:12:04,210
一個是所謂的  我們叫做RIP

212
00:12:04,210 --> 00:12:06,410
routing information protocol

213
00:12:06,410 --> 00:12:11,280
這是第一代的，那它是一個distance vector的方法來設計的

214
00:12:11,280 --> 00:12:17,850
那第二個呢叫做OSPF，那它叫做open shortest path first

215
00:12:17,850 --> 00:12:20,780
就是第二代它是一個所謂的link state的方式

216
00:12:20,780 --> 00:12:24,50
就是說它會找最短路徑的意思

217
00:12:24,50 --> 00:12:27,410
就是說我們如果說一個router在這個地方

218
00:12:27,410 --> 00:12:28,510
一個router在這個地方

219
00:12:28,510 --> 00:12:32,10
中間有很多路，它會盡量走這個所謂的最短的路

220
00:12:32,10 --> 00:12:33,950
可能這邊有路、這邊有路

221
00:12:33,950 --> 00:12:36,410
v就是盡量走最短的路

222
00:12:36,410 --> 00:12:41,410
這就是所謂的OSPF，叫做open shortest path first

223
00:12:41,410 --> 00:12:43,579
那我們說這個routing protocol

224
00:12:43,580 --> 00:12:50,180
它就希望能夠提供reliability還有我們叫做alternative這種routes

225
00:12:50,180 --> 00:12:53,910
希望能夠提供有不同路徑的選擇

226
00:12:53,910 --> 00:12:58,310
因為某一條路徑因為阻塞  因為斷線可能就不通

227
00:12:58,310 --> 00:13:00,810
沒關係，我們會繞另外一條路

228
00:13:00,810 --> 00:13:04,280
所以我們說這個IP本身它非常強韌

229
00:13:04,280 --> 00:13:08,480
強韌就是說只要你網路只要連在一起

230
00:13:08,480 --> 00:13:11,410
中間有一些斷掉、一些停電

231
00:13:11,410 --> 00:13:17,480
就是有部分都壞掉了但是只要網路的連線還是連在一起的話

232
00:13:17,480 --> 00:13:22,750
我們這個routing protocol它就會找到這些路

233
00:13:22,750 --> 00:13:26,610
只要路存在它就會把它找出來

234
00:13:26,610 --> 00:13:29,680
讓我們這個通訊呢就可以繼續的溝通

235
00:13:29,680 --> 00:13:31,849
這是它非常非常厲害的地方

236
00:13:31,850 --> 00:13:35,950
我們講非常的reliable  非常reliable

237
00:13:35,950 --> 00:13:42,980
當然如果真的網路壞到說根本就是整個是斷掉的

238
00:13:42,980 --> 00:13:46,80
這就沒辦法了，斷掉這個神仙也救不了

239
00:13:46,80 --> 00:13:50,410
只要不是全部斷掉我們就會把那個路呢

240
00:13:50,410 --> 00:13:53,350
讓它把它找出來、讓它還是可以連起來

241
00:13:53,350 --> 00:13:54,510
就是非常非常厲害

242
00:13:54,510 --> 00:13:58,980
好，最後我們說這個router本身它還提供什麼呢

243
00:13:58,980 --> 00:14:00,680
我們叫做troubleshooting

244
00:14:00,680 --> 00:14:05,750
就是我們如果要做一些譬如說偵錯

245
00:14:05,750 --> 00:14:06,950
譬如說網路出問題了

246
00:14:06,950 --> 00:14:11,150
我們要進到router裡面去我們就可以看一下這個網路的狀態

247
00:14:11,150 --> 00:14:12,980
我們可以做所謂的troubleshooting

248
00:14:12,980 --> 00:14:16,210
那最後面呢我們就來比較一下說

249
00:14:16,210 --> 00:14:22,550
這個router本身跟bridge我們說這個到底有什麼差異

250
00:14:22,550 --> 00:14:26,280
我們說router本身我們已經介紹過了

251
00:14:26,280 --> 00:14:29,209
那我們以前呢也介紹過什麼叫做bridge

252
00:14:29,210 --> 00:14:33,380
這個在這個地方bridge相當於是也是layer 2

253
00:14:33,380 --> 00:14:35,580
也是類似switch，就是交換機

254
00:14:35,580 --> 00:14:39,380
第二層交換機跟第三層的router

255
00:14:39,380 --> 00:14:41,780
我們講這是兩個不同的設備

256
00:14:41,780 --> 00:14:46,150
那bridge或switch呢處理第二層的這個資料

257
00:14:46,150 --> 00:14:48,680
那router呢處理那三層的資料

258
00:14:48,680 --> 00:14:50,410
那這兩個是不同的設備

259
00:14:50,410 --> 00:14:55,550
那我們來看看說這兩種設備到底有什麼不一樣

260
00:14:55,550 --> 00:14:56,550
我們先看第一點

261
00:14:56,550 --> 00:15:01,10
我們說bridge本身呢它是layer 2的設備嘛

262
00:15:01,10 --> 00:15:03,450
或是它看MAC address、網卡位置

263
00:15:03,450 --> 00:15:06,510
那router本身是layer 3的設備

264
00:15:06,510 --> 00:15:09,210
它看的是IP address

265
00:15:09,210 --> 00:15:10,810
我們再看第二點

266
00:15:10,810 --> 00:15:15,180
我們說bridge本身叫做protocol independent

267
00:15:15,180 --> 00:15:18,150
就是它跟你的protocol是沒有關係

268
00:15:18,150 --> 00:15:21,380
因為它根本不去看layer 3的東西

269
00:15:21,380 --> 00:15:25,50
就是它根本不看你是IP還是譬如說IPX

270
00:15:25,50 --> 00:15:27,380
所以我們說這個layer 2的設備

271
00:15:27,380 --> 00:15:33,450
封包進來它只看MAC、它根本不看layer 3的

272
00:15:33,450 --> 00:15:35,780
就不管是IP啦、IPX啦

273
00:15:35,780 --> 00:15:38,550
對於這種bridge來講它根本不看

274
00:15:38,550 --> 00:15:44,209
但是呢router呢我們說它是protocol dependent，它一定要看

275
00:15:44,210 --> 00:15:47,810
因為它必須根據IP或根據IPX

276
00:15:47,810 --> 00:15:50,849
然後做不同的這個處理的這個方法

277
00:15:50,850 --> 00:15:54,380
所以我們說router本身是protocol dependent

278
00:15:54,380 --> 00:15:56,80
好，接下來看第三個

279
00:15:56,80 --> 00:15:59,580
好，那我們說bridge本身或者switch本身

280
00:15:59,580 --> 00:16:02,650
它會做automatic address learning

281
00:16:02,650 --> 00:16:05,579
因為它會學那個address

282
00:16:05,580 --> 00:16:08,780
代表說工作站到底接在哪一個port

283
00:16:08,780 --> 00:16:10,750
我們講它會address learning的過程

284
00:16:10,750 --> 00:16:15,150
好，然後router本身呢  它針對這個address啦

285
00:16:15,150 --> 00:16:17,880
它就必須做所謂的設定

286
00:16:17,880 --> 00:16:21,980
router它必須用IP address做設定的意思

287
00:16:21,980 --> 00:16:25,480
那MAC address、MAC address是可以自己學

288
00:16:25,480 --> 00:16:27,850
可是IP address呢必須做設定

289
00:16:27,850 --> 00:16:29,650
好，那我們說

290
00:16:29,650 --> 00:16:32,10
Bridge本身或者switch本身

291
00:16:32,10 --> 00:16:36,410
如果它看到所謂的multicast或者broadcast封包

292
00:16:36,410 --> 00:16:39,880
它會把它forward、會廣播、會pass

293
00:16:39,880 --> 00:16:43,850
那我們說router本身它看到這個multicast

294
00:16:43,850 --> 00:16:45,110
或看到這個broadcast

295
00:16:45,110 --> 00:16:47,750
它會把它filter  它會把它濾掉

296
00:16:47,750 --> 00:16:51,880
然後bridge本身我們講low cost，也比較便宜

297
00:16:51,880 --> 00:16:55,380
然後router呢因為它相對的是會貴的比較多

298
00:16:55,380 --> 00:17:00,210
因為他第一個處理封包的這個工作比較複雜

299
00:17:00,210 --> 00:17:05,880
然後他要處理的這個封包量因為router如果放在網路的核心的話

300
00:17:05,880 --> 00:17:08,310
第一個它的封包的流量也很多

301
00:17:08,310 --> 00:17:11,980
所以他的一般的成本、它的這個單價呢

302
00:17:11,980 --> 00:17:17,50
會比一般的bridge、一般啦大概高5到10倍或者10倍以上

303
00:17:17,50 --> 00:17:21,149
看這個規格  好，那我們說bridge本身

304
00:17:21,150 --> 00:17:24,710
它沒有flow control也沒有congestion control

305
00:17:24,710 --> 00:17:27,610
就是一般的交換機、layer 2交換機

306
00:17:27,609 --> 00:17:29,679
封包進來查表一樣

307
00:17:29,680 --> 00:17:31,980
不過它查的表是MAC table

308
00:17:31,980 --> 00:17:34,250
查了之後就出去、查了之後就出去

309
00:17:34,250 --> 00:17:38,250
本身沒有做flow跟congestion control

310
00:17:38,250 --> 00:17:40,710
那我們說router本身有做congestion control

311
00:17:40,710 --> 00:17:43,650
剛剛提到因為router本身封包進來

312
00:17:43,650 --> 00:17:46,850
它如果來不及出去它會故意把一些封包

313
00:17:46,850 --> 00:17:49,449
把它丟掉  故意把封包丟掉

314
00:17:49,450 --> 00:17:51,680
讓這個網路的流量降低

315
00:17:51,680 --> 00:17:54,510
所以他可以做到所謂的congestion control

316
00:17:54,510 --> 00:17:59,410
那我們說bridge本身它的security比較弱一點

317
00:17:59,410 --> 00:18:04,550
因為剛剛提到像如果收到multicast或收到broadcast

318
00:18:04,550 --> 00:18:06,210
這個封包就廣播出去

319
00:18:06,210 --> 00:18:10,250
廣播出去其他的node就會收到

320
00:18:10,250 --> 00:18:13,580
它可以竊聽這個裡面的內容等等

321
00:18:13,580 --> 00:18:17,409
可是我們說router本身的security比較完整一點

322
00:18:17,410 --> 00:18:21,680
譬如說它可以設定剛剛講ACL，就access control list

323
00:18:21,680 --> 00:18:26,850
它可以把黑名單的IP呢放進去然後就可以把它濾掉

324
00:18:26,850 --> 00:18:30,250
所以它有比較好的這個安全性

325
00:18:30,250 --> 00:18:33,50
好，那我們說bridge本身呢

326
00:18:33,50 --> 00:18:35,180
它一個特性我們要做transparent

327
00:18:35,180 --> 00:18:38,950
Transparent就是所謂的通透 透明的意思

328
00:18:38,950 --> 00:18:43,480
就是說我們一般的這個電腦本身在用網路的時候

329
00:18:43,480 --> 00:18:46,680
我們不需要知道網路有多少交換機

330
00:18:46,680 --> 00:18:49,680
或者交換機怎麼連我們通通不用知道

331
00:18:49,680 --> 00:18:50,980
這個叫說transparent

332
00:18:50,980 --> 00:18:56,150
就是說交換機跟這個bridge對我們一般的電腦來說

333
00:18:56,150 --> 00:19:00,410
它是透明的、你看不到、你也不用去管它

334
00:19:00,410 --> 00:19:03,980
但是router呢你就必須看得到

335
00:19:03,980 --> 00:19:08,880
因為我們每個電腦上面至少你要設一個叫做default router

336
00:19:08,880 --> 00:19:14,950
因為我們說如果我們送的對象在同一個LAN我就直接丟給它

337
00:19:14,950 --> 00:19:19,650
那如果我們送的對象不在同一個LAN你就必須丟給router

338
00:19:19,650 --> 00:19:22,710
那你要丟給router你就必須知道router的存在

339
00:19:22,710 --> 00:19:25,750
所以我們這個每一個主機

340
00:19:25,750 --> 00:19:30,110
都必須知道說跟你相連的router它的IP是什麼

341
00:19:30,110 --> 00:19:31,850
這個是一定要知道的

342
00:19:31,850 --> 00:19:35,980
所以我們說router本身就我們叫做non-transparency

343
00:19:35,980 --> 00:19:39,110
它就不是透明的  因為你必須看到router

344
00:19:39,110 --> 00:19:42,780
但是交換機啦、layer 2你不用看到它

345
00:19:42,780 --> 00:19:46,350
因為他存不存在跟你都沒有、你都沒有什麼影響

346
00:19:46,350 --> 00:19:47,879
這是transparent的意思

347
00:19:47,880 --> 00:19:54,10
好，那我們說bridge呢比較適合中小型的網路啦

348
00:19:54,10 --> 00:19:55,950
因為畢竟比較像區域網路

349
00:19:55,950 --> 00:19:59,210
那router呢就比較適合大型的網路

350
00:19:59,210 --> 00:20:02,680
像整個internet裡面呢就非常、非常多的這個router

351
00:20:02,680 --> 00:20:05,680
再來我們看那bridge本身呢

352
00:20:05,680 --> 00:20:09,210
它沒有frame segmentation跟reassembly的問題

353
00:20:09,210 --> 00:20:11,280
就bridge本身或者switch本身

354
00:20:11,280 --> 00:20:14,610
它在封包轉送的過程當中不會做切割

355
00:20:14,610 --> 00:20:18,709
一個封包來就一個封包出去它不會做切割

356
00:20:18,710 --> 00:20:21,950
但是router本身呢它會做切割

357
00:20:21,950 --> 00:20:25,510
然後最後的組合我們說是在host做組合

358
00:20:25,510 --> 00:20:28,150
那現在來看怎麼做routing

359
00:20:28,150 --> 00:20:30,810
我們說一般的bridge或者switch

360
00:20:30,810 --> 00:20:33,149
連接的網路可能會連成很多loop嘛

361
00:20:33,150 --> 00:20:39,80
那可是呢在傳送的時候呢我們會讓它跑一個algorithm

362
00:20:39,80 --> 00:20:43,50
叫做IEEE 802.1D  我們叫做spanning tree algorithm

363
00:20:43,50 --> 00:20:44,280
就是這個交換機之間

364
00:20:44,280 --> 00:20:48,850
也是一樣互相溝通的結果呢找到spanning tree

365
00:20:48,850 --> 00:20:52,250
然後所有的路由就走spanning tree

366
00:20:52,250 --> 00:20:56,10
好，可是router本身呢它跑的不是spanning tree

367
00:20:56,10 --> 00:20:58,350
router本身是跑routing protocol

368
00:20:58,350 --> 00:21:02,110
不管是剛剛提到的RIP或者OSPF

369
00:21:02,110 --> 00:21:05,479
反正我就交換情報以後呢我就找一條路徑

370
00:21:05,480 --> 00:21:09,350
或者找另外一些我路徑就可以比較多樣性

371
00:21:09,350 --> 00:21:12,850
那通常這個路徑呢都是最佳路徑

372
00:21:12,850 --> 00:21:15,350
因為我通常都會找最短路徑

373
00:21:15,350 --> 00:21:19,480
可是呢我們講bridge本身因為它走spanning tree

374
00:21:19,480 --> 00:21:21,950
Spanning tree就不見得是最好的

375
00:21:21,950 --> 00:21:24,380
Spanning tree只是說我有一個唯一的路徑

376
00:21:24,380 --> 00:21:26,980
那這個路徑可能其實並不是最短的路徑

377
00:21:26,980 --> 00:21:30,910
但是router所找出來的路徑通常都是最短路徑

378
00:21:30,910 --> 00:21:36,380
所以以路徑的這個所謂的優良來講的話、優劣來講的話

379
00:21:36,380 --> 00:21:40,180
Router找的路徑會比較好、Bridge找的路徑會比較差

380
00:21:40,180 --> 00:21:41,750
因為它走的是spanning tree

381
00:21:41,750 --> 00:21:43,510
好，最後呢我們說

382
00:21:43,510 --> 00:21:47,750
Bridge本身呢跟switch本身是plug and play

383
00:21:47,750 --> 00:21:52,250
就是bridge跟switch我們如果買來插上網路的線

384
00:21:52,250 --> 00:21:54,850
把電源打開、它就會自己運作了

385
00:21:54,850 --> 00:21:56,780
就它是plug and play

386
00:21:56,780 --> 00:22:00,850
但是router如果我們買來把網路也插上去接口

387
00:22:00,850 --> 00:22:03,550
網路線都插上去、把電源打開它不會動

388
00:22:03,550 --> 00:22:08,580
因為router本身你必須做設定、必須設定它的IP address

389
00:22:08,580 --> 00:22:12,379
你必須設定它的一些IP的table等等

390
00:22:12,380 --> 00:22:17,680
所以router本身呢它需要做設定才能運作

391
00:22:17,680 --> 00:22:22,280
可是bridge呢跟switch呢是不需要做任何設定一買來

392
00:22:22,280 --> 00:22:24,850
插上去、打開電源

393
00:22:24,850 --> 00:22:27,110
它就可以自己、它自己就會跑了

394
00:22:27,110 --> 00:22:32,149
這個就是所謂的plug and play跟不是plug and play的最大的差別

395
00:22:32,150 --> 00:22:35,410
好，那以上呢就是我們稍微介紹一下

396
00:22:35,410 --> 00:22:39,580
到底layer 2的switch跟layer 3的router

397
00:22:39,580 --> 00:22:42,50
它們最大的差異在什麼地方

398
00:22:42,50 --> 00:22:46,710
這個表就告訴我們說這個layer 2的設備跟layer 3的設備

399
00:22:46,710 --> 00:22:48,780
它最大的差別在什麼地方

