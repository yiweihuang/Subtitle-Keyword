1
00:00:08,90 --> 00:00:11,45
好那接下來我們來跟各位介紹

2
00:00:11,45 --> 00:00:14,55
再往上一層到所謂的第三層

3
00:00:14,55 --> 00:00:16,21
所謂的network layer

4
00:00:16,21 --> 00:00:18,75
那network layer談的是什麼呢？

5
00:00:18,75 --> 00:00:21,15
我們說 network layer 談的是說

6
00:00:21,15 --> 00:00:25,15
那你怎麼樣將封包 我們叫packet

7
00:00:25,15 --> 00:00:28,65
透過Internet 因為我們現在談的是

8
00:00:28,65 --> 00:00:31,38
變成說要透過整個比較大的網路啦

9
00:00:31,38 --> 00:00:36,58
送給所謂的目的地的主機 所以他談的是說

10
00:00:36,58 --> 00:00:40,58
不是往前走一步而已 是要透過整個網路

11
00:00:40,58 --> 00:00:42,5
也就是說經過網路

12
00:00:42,5 --> 00:00:45,68
直接跟你的目的地 兩個主機要溝通

13
00:00:45,68 --> 00:00:48,28
也就是說 依我們這個圖來講的話

14
00:00:48,28 --> 00:00:51,38
network layer要做的事情就是說

15
00:00:51,38 --> 00:00:54,95
我怎麼讓這個封包 可以這樣子送給對方

16
00:00:54,95 --> 00:01:00,18
所以要經過網路了 然後到你的目的地

17
00:01:00,18 --> 00:01:01,95
這個是所謂network layer的做法

18
00:01:01,95 --> 00:01:05,15
譬如說 包含是說 譬如說他是走這樣子

19
00:01:06,85 --> 00:01:12,18
這都可以 就是我要走不同的路線 我要經過很多router

20
00:01:12,18 --> 00:01:15,68
然後呢 把這個所謂的一個封包

21
00:01:15,68 --> 00:01:18,51
丟到目的地的這個主機上面

22
00:01:18,51 --> 00:01:24,1
就到主機這個地方 也就是說一般 我們叫做IP對IP啦

23
00:01:24,1 --> 00:01:25,78
就是因為現在每一個主機

24
00:01:25,78 --> 00:01:29,45
事實上他是每一個網卡啦 都會有一個IP address

25
00:01:29,45 --> 00:01:33,55
那從某一個IP address 送到某一個IP address

26
00:01:33,55 --> 00:01:35,68
那這個就是所謂的network layer要做的事情

27
00:01:35,68 --> 00:01:37,68
那在network layer這邊

28
00:01:37,68 --> 00:01:42,18
我們說他的這個資料的單元 我們叫做一個packet

29
00:01:42,18 --> 00:01:48,11
一個封包啦 那在Internet上面呢

30
00:01:48,11 --> 00:01:50,11
有時候也叫做所謂一個datagram

31
00:01:50,11 --> 00:01:53,24
或者一個IP的packet 一個IP的封包

32
00:01:53,25 --> 00:01:56,11
那我們說 network layer就是說

33
00:01:56,11 --> 00:02:01,85
好 我們怎麼樣把一個封包 透過Internet 我們特別強調

34
00:02:01,85 --> 00:02:06,5
因為他要送到目的地嘛 那經過網路

35
00:02:06,5 --> 00:02:08,88
所以他必須透過這個Internet

36
00:02:08,88 --> 00:02:11,75
或者經過這個Internet 然後送給對方

37
00:02:11,75 --> 00:02:13,45
好那我們來說

38
00:02:13,45 --> 00:02:17,41
那這裡面到底有什麼問題 是需要去處理的

39
00:02:17,41 --> 00:02:21,35
我們說 這裡面第一個要注意的問題 叫做routing

40
00:02:21,35 --> 00:02:24,8
routing就是說 路線怎麼選

41
00:02:24,8 --> 00:02:28,58
譬如說我們講 假設我們要從這個主機

42
00:02:28,58 --> 00:02:31,88
左下角要送給右下角的主機

43
00:02:31,88 --> 00:02:33,71
我們有什麼路徑可以選

44
00:02:33,71 --> 00:02:38,51
我可以走上面這一條路 那我也可以走下面這一條路

45
00:02:38,51 --> 00:02:42,97
我們路徑其實非常多 那我到底要走哪一條路呢

46
00:02:42,98 --> 00:02:45,25
這就是所謂的routing

47
00:02:45,25 --> 00:02:48,91
routing就是幫我們選擇路徑 那路徑非常多

48
00:02:48,91 --> 00:02:53,81
有快有慢 有便宜的有貴的 有的貴 貴的是要花錢的

49
00:02:53,81 --> 00:02:56,24
所以變成說 那你到底要走哪一條

50
00:02:56,25 --> 00:03:01,95
那除了這剛剛講 有快有慢有遠有近有便宜的之外

51
00:03:01,95 --> 00:03:04,8
還有一個更重要的是說

52
00:03:04,8 --> 00:03:08,81
網路是變的 他會斷線 他會阻塞

53
00:03:08,81 --> 00:03:12,15
所以我們不是說 我選這條路就永遠這條路

54
00:03:12,15 --> 00:03:13,95
那萬一這條斷線怎麼辦

55
00:03:13,95 --> 00:03:18,11
我們光纖埋在地底下 都有可能被怪手把它挖斷啊

56
00:03:18,11 --> 00:03:20,5
那我們的無線

57
00:03:20,5 --> 00:03:23,1
如果剛好有人在做什麼事情做一個干擾

58
00:03:23,1 --> 00:03:26,88
那他根本就送不通啊 就網路根本有時候根本就會斷掉

59
00:03:26,88 --> 00:03:31,78
那我們的路徑就不能死的 所以我們一定要動態

60
00:03:31,78 --> 00:03:35,51
我們要能夠知道說  這個地方斷線 這個地方阻塞

61
00:03:35,51 --> 00:03:39,30
我就繞繞 只要網路是連結的

62
00:03:39,31 --> 00:03:41,5
就網路是連在一起的

63
00:03:41,5 --> 00:03:44,18
阿這邊有一部份壞掉 有一部分斷掉都沒關係

64
00:03:44,18 --> 00:03:48,35
你只要連在一起 我就把你送到對方

65
00:03:48,35 --> 00:03:51,78
這就是network layer做的事情 就是說你給我一個封包

66
00:03:51,78 --> 00:03:54,61
我要透過這個Internet

67
00:03:54,61 --> 00:03:57,38
或經過這個Internet 把它送到對方去

68
00:03:57,38 --> 00:04:02,41
即使網路本身有阻塞 有斷線

69
00:04:02,41 --> 00:04:07,51
我也會繞路啦 我一定把它送到對方去

70
00:04:07,51 --> 00:04:12,54
但是呢 我這個把他努力送到對方去

71
00:04:12,55 --> 00:04:15,71
這個努力 是一種所謂的best effort

72
00:04:15,71 --> 00:04:19,55
我盡力 你斷線你阻塞 我會繞路

73
00:04:19,55 --> 00:04:22,71
但是呢萬一封包真的掉了

74
00:04:22,71 --> 00:04:24,88
我只能告訴你說封包掉了

75
00:04:24,88 --> 00:04:28,71
我不會幫你重送 就是我只是best effort

76
00:04:28,71 --> 00:04:31,48
我們叫做unreliable 不可靠

77
00:04:31,48 --> 00:04:34,11
但是呢 盡可能把你送到對方去

78
00:04:34,11 --> 00:04:37,45
萬一真的不行 萬一真的掉了 那就掉了

79
00:04:37,45 --> 00:04:40,98
如果說你這個東西很重要 我們說一定不能掉

80
00:04:40,98 --> 00:04:43,35
那你自己想辦法重送

81
00:04:43,35 --> 00:04:49,71
我們也介紹 還好啦 我們上面還有transport layer 還有TCP

82
00:04:49,71 --> 00:04:53,51
TCP才是真正的 提供可靠的啦

83
00:04:53,51 --> 00:04:57,65
那我們IP這一層 network layer是提供不可靠的服務

84
00:04:57,65 --> 00:05:01,94
我會盡力的幫你送 幫你選一條最好的路

85
00:05:01,95 --> 00:05:05,15
但是不保證一定送到對方

86
00:05:05,15 --> 00:05:10,38
我們就是說 好啦 那這個路徑這麼多

87
00:05:10,38 --> 00:05:12,55
網路的狀況隨時在變

88
00:05:12,55 --> 00:05:16,91
那網路的狀況到底是怎麼樣反映的呢

89
00:05:16,91 --> 00:05:18,81
譬如說這邊在阻塞

90
00:05:18,81 --> 00:05:21,41
那我這個router怎麼知道那邊在阻塞

91
00:05:21,41 --> 00:05:24,28
那我怎麼知道那邊斷線了

92
00:05:24,28 --> 00:05:29,28
那我怎麼知道說我要避開他我要繞他呢 繞開

93
00:05:29,28 --> 00:05:32,5
就網路的狀態是隨時在變的

94
00:05:32,5 --> 00:05:36,1
可是呢 我怎麼知道網路現在到底變得怎麼樣

95
00:05:36,1 --> 00:05:39,51
所以我們就說 router跟router之間

96
00:05:39,51 --> 00:05:42,70
他就有一個很重要的東西

97
00:05:42,71 --> 00:05:46,38
就是router跟router他們之間

98
00:05:46,38 --> 00:05:53,8
他們之間會互相的交換情報 把他的網路的連線狀態呢

99
00:05:53,8 --> 00:05:57,65
告訴其他的router 譬如說我這個router這邊接了一個交換機

100
00:05:57,65 --> 00:06:00,91
這個交換機已經斷線了 我就告訴別人說

101
00:06:00,91 --> 00:06:04,68
誒我這邊交換機斷掉了 等下你可能要走別的路

102
00:06:04,68 --> 00:06:08,31
或者說我這個原來斷線的交換機 現在修好了

103
00:06:08,31 --> 00:06:13,28
我也會告訴他 我這邊線路修好了 你可以走這條路

104
00:06:13,28 --> 00:06:17,48
就是說router跟router之間 他們要不定時的

105
00:06:17,48 --> 00:06:24,28
或者定時的 他們一直交換他們旁邊的線路的狀態

106
00:06:24,28 --> 00:06:27,38
或者把別的router告訴他的

107
00:06:27,38 --> 00:06:31,58
把他累積起來整理之後呢 再告訴其他router

108
00:06:31,58 --> 00:06:35,61
也就是router跟router之間 他們會互傳這個訊息

109
00:06:35,61 --> 00:06:38,41
使得說 讓每一個router呢

110
00:06:38,41 --> 00:06:42,21
基本上有這個網路的全貌 狀態啦

111
00:06:42,21 --> 00:06:43,81
他知道這個網路的狀態

112
00:06:43,81 --> 00:06:47,5
所以當router收到一個封包的時候呢

113
00:06:47,5 --> 00:06:51,1
他就會決定說 這個封包應該往哪裡去

114
00:06:51,1 --> 00:06:56,1
那我們說 router跟router之間 他們交換情報

115
00:06:56,1 --> 00:06:59,25
注意到 交換情報 這是什麼

116
00:06:59,25 --> 00:07:01,54
這就是protocol

117
00:07:01,55 --> 00:07:04,1
就是router跟router之間即使他們要講話

118
00:07:04,1 --> 00:07:06,48
他們也要有protocol來講話

119
00:07:06,48 --> 00:07:08,88
那router之間的protocol是什麼呢

120
00:07:08,88 --> 00:07:10,98
就叫做routing protocol

121
00:07:10,98 --> 00:07:19,31
routing protocol就是為了選擇 或者動態的選擇路徑

122
00:07:19,31 --> 00:07:23,5
而設計的protocol 就是說router之間

123
00:07:23,5 --> 00:07:24,28
 譬如說他會跟他交換

124
00:07:24,28 --> 00:07:28,8
那他會跟他交換 就是他們之間互相交換

125
00:07:28,8 --> 00:07:29,91
就是靠這個protocol

126
00:07:29,91 --> 00:07:34,98
那因為這個protocol呢 有不同的這個做法啦

127
00:07:34,98 --> 00:07:37,51
所以有所謂的像RIP

128
00:07:37,51 --> 00:07:41,45
叫router information protocol 第一代的

129
00:07:41,45 --> 00:07:45,21
那第一代呢 RIP他所謂的特性就是說

130
00:07:45,21 --> 00:07:49,71
那我們的情報交換呢 是每三十秒交換一次

131
00:07:49,71 --> 00:07:53,48
就是三十秒呢 我告訴你我的狀態

132
00:07:53,48 --> 00:07:59,51
三十秒之後呢 我再告訴你 這個三十秒依現代的網路來講

133
00:07:59,51 --> 00:08:02,85
三十秒這個時間就有點太久了啦

134
00:08:02,85 --> 00:08:04,65
就是說我剛好告訴你之後

135
00:08:04,65 --> 00:08:08,75
我剛好就斷線了 三十秒之後你才會知道

136
00:08:08,75 --> 00:08:10,75
因為三十秒之後才會再告訴你嘛

137
00:08:10,75 --> 00:08:15,61
所以如果我每隔三十秒才跟對方router互通的話

138
00:08:15,61 --> 00:08:18,44
這個可能來不及反應 這個網路

139
00:08:18,45 --> 00:08:20,31
我們講瞬間變化的這個狀態

140
00:08:20,31 --> 00:08:22,58
所以就要有所謂的第二代

141
00:08:22,58 --> 00:08:25,48
第二代就是所謂的OSPF啦

142
00:08:25,48 --> 00:08:29,5
叫open shortest path first 找最短路徑

143
00:08:29,5 --> 00:08:31,94
也就是說他會找最短路徑 就是我今天如果說

144
00:08:31,95 --> 00:08:36,18
譬如說 我們講 我這個router呢收到一個封包

145
00:08:36,18 --> 00:08:42,35
這個router收到封包啦 誒這個封包呢是要到這裡

146
00:08:42,34 --> 00:08:44,5
我們講這個是目的地啦

147
00:08:44,5 --> 00:08:47,38
這個router就會想說 我應該走哪一條路

148
00:08:47,38 --> 00:08:49,98
他會走我們叫做最短路徑

149
00:08:49,98 --> 00:08:57,1
所以這個SPF就是所謂的shortest path first

150
00:08:57,1 --> 00:09:01,38
就最短路徑優先 那我們看一下這個到底

151
00:09:01,38 --> 00:09:03,38
這一條路 你看這一條路就比較長

152
00:09:03,38 --> 00:09:04,71
這一條路可能就比較短

153
00:09:04,71 --> 00:09:07,31
之類啦 所以他會走那個最短路徑

154
00:09:07,31 --> 00:09:12,11
所以這個routing呢他就是去算最短路徑

155
00:09:12,11 --> 00:09:16,64
所以這個protocol很特別 他去算最短路徑

156
00:09:16,65 --> 00:09:20,11
譬如說 到所謂的算最短路徑是說

157
00:09:20,11 --> 00:09:22,50
你要到任何一個destination的最短路徑

158
00:09:22,51 --> 00:09:26,98
譬如說以這個router來講 他說 好啦 如果要到這邊

159
00:09:26,98 --> 00:09:30,98
這最短路徑是走這裡 那要到 我們講到這一邊好了

160
00:09:30,98 --> 00:09:32,48
那最短路徑可能是走這裡

161
00:09:32,48 --> 00:09:36,25
那到這一邊 最短路徑就是這裡 這是對這個router來講

162
00:09:36,25 --> 00:09:41,81
那我們再看一下 那如果是對這個router來講的話呢 最短路徑

163
00:09:41,81 --> 00:09:45,75
這一邊的 他是走這裡 那這一邊的呢 我們就走這裡

164
00:09:45,75 --> 00:09:49,35
那這一邊的呢 到底哪邊比較短 兩邊都差不多

165
00:09:49,35 --> 00:09:55,11
變成我就選這邊好了 就是每一個router 都有不一樣的最短路徑

166
00:09:55,11 --> 00:09:58,50
因為每一個router的地理位置都不一樣嘛

167
00:09:58,51 --> 00:10:03,68
那對這個router來講的話 這一邊是這樣子 這一邊是這樣子

168
00:10:03,68 --> 00:10:05,91
那這一邊呢 可能是這樣子

169
00:10:05,91 --> 00:10:08,78
就是每一個router 他都會記得說

170
00:10:08,78 --> 00:10:13,7
他要到其他的工作站 或其他的目的地

171
00:10:13,8 --> 00:10:16,11
哪一條路是最短路徑 他會去算

172
00:10:16,11 --> 00:10:19,35
好那我們說 你算好了啊 就走那條路徑呀

173
00:10:19,35 --> 00:10:22,55
我們剛也提到 阿網路本身沒那麼乖啊

174
00:10:22,55 --> 00:10:24,37
他等下這邊斷線那邊阻塞

175
00:10:24,38 --> 00:10:26,1
最短路徑也沒有用啊

176
00:10:26,1 --> 00:10:29,15
沒有關係 也就是說 網路的任何變化

177
00:10:29,15 --> 00:10:34,21
router他會趕快交換情報 讓你重算的意思啦

178
00:10:34,21 --> 00:10:36,5
就是我會算最短路徑

179
00:10:36,5 --> 00:10:40,15
那這個最短 這個短本身 定義是什麼

180
00:10:40,15 --> 00:10:44,31
我們一般所謂的有兩個 一個是說 我是距離最短

181
00:10:44,31 --> 00:10:49,27
距離最短代表送的最快嗎？ 不一定喔 剛剛提到

182
00:10:49,28 --> 00:10:54,25
我們同樣的距離 我一個拉光纖 光纖的速度是光速

183
00:10:54,25 --> 00:10:57,78
那我一個用無線網路 那還干擾很多對不對

184
00:10:57,78 --> 00:11:02,91
所以最短的不代表最快 所以我們在算那個最短路徑的時候

185
00:11:02,91 --> 00:11:06,15
有一個叫做所謂的cost function 就是你什麼最短

186
00:11:06,15 --> 00:11:10,55
就是說時間最短還是距離最短 那個都可以去定義他啦

187
00:11:10,55 --> 00:11:13,1
這個是在設計上的時候 可以不同的考量

188
00:11:13,1 --> 00:11:17,50
但是我們特別強調就是說 routing protocol呢

189
00:11:17,51 --> 00:11:21,51
是network layer裡面 最重要的東西

190
00:11:21,51 --> 00:11:24,78
就是router他們平常會定期

191
00:11:24,78 --> 00:11:27,18
我們講三十秒 或者不定期

192
00:11:27,18 --> 00:11:31,45
就是說 事情發生了 譬如說斷線或者剛好修好了

193
00:11:31,45 --> 00:11:35,40
event一發生 我就趕快通知 反正定期或不定期

194
00:11:35,41 --> 00:11:37,85
router跟router之間

195
00:11:37,85 --> 00:11:43,68
 他們會用這些protocol互相交換網路的狀態情報

196
00:11:43,68 --> 00:11:46,98
讓每一個router能夠掌握網路的狀態

197
00:11:46,98 --> 00:11:51,31
之後 他來算整個路徑是什麼

198
00:11:51,31 --> 00:11:55,48
他路徑算完之後呢 他就把它放到這個一個表

199
00:11:55,48 --> 00:11:58,18
就叫做routing table

200
00:11:58,18 --> 00:12:01,38
那這個routing table呢 在每一個router裡面呢

201
00:12:01,38 --> 00:12:04,58
都有一個routing table 他們都有routing table

202
00:12:04,58 --> 00:12:06,81
只是他們每一個routing table長得不一樣

203
00:12:06,81 --> 00:12:09,68
因為他們地理位置不一樣嘛 網路的狀態不一樣

204
00:12:09,68 --> 00:12:11,40
所以每一個routing table都不一樣

205
00:12:11,41 --> 00:12:13,88
那把routing table建好之後呢

206
00:12:13,88 --> 00:12:17,88
就讓router呢真的在處理封包的時候就比較簡單

207
00:12:17,88 --> 00:12:21,5
我們是說 一個封包收進來

208
00:12:21,5 --> 00:12:23,28
收到router 它做什麼事

209
00:12:23,28 --> 00:12:26,51
我們知道router是第三層的設備

210
00:12:26,51 --> 00:12:30,11
 layer3 所以他要看IP的header

211
00:12:30,11 --> 00:12:34,17
其中他會看IP裡面的叫做 destination的IP

212
00:12:34,18 --> 00:12:36,68
就是說 你這個封包要丟到哪裡去

213
00:12:36,68 --> 00:12:39,71
把那個IP拿出來 就是目的地的IP

214
00:12:39,71 --> 00:12:44,55
然後呢 接下來很重要 他去査表

215
00:12:44,55 --> 00:12:46,94
査什麼表 就査這個routing table

216
00:12:46,95 --> 00:12:49,38
就是說 一個封包進來

217
00:12:49,38 --> 00:12:51,55
我把那個目的地的IP拿出來

218
00:12:51,55 --> 00:12:54,40
去査這個表 這個表査完就告訴我說

219
00:12:54,41 --> 00:12:58,48
這個封包要往哪裡去 往上往下往左往右 就這麼簡單

220
00:12:58,48 --> 00:13:01,61
所以每一個router都做一樣的事情

221
00:13:01,61 --> 00:13:03,68
變成說每一個router呢

222
00:13:03,68 --> 00:13:06,15
我們說 他都有一個routing table

223
00:13:06,15 --> 00:13:10,40
所以一個封包接到這個router的時候我們說 他去look up

224
00:13:10,41 --> 00:13:13,1
這個動作就是叫一個look up 他去査一下表

225
00:13:13,1 --> 00:13:17,60
說這個封包應該往哪裡去 假設說 他應該往這裡去

226
00:13:17,61 --> 00:13:22,41
一樣 他又去look up 他査一個表 這個表跟那個表不一樣

227
00:13:22,41 --> 00:13:25,48
但是呢 都會告訴我說這個封包應該往哪裡去

228
00:13:25,48 --> 00:13:27,58
那他說 到 往這裡去 就這樣

229
00:13:27,58 --> 00:13:30,1
所以你可以看 每一個router

230
00:13:30,1 --> 00:13:33,45
處理每一個封包 都做一樣的事情

231
00:13:33,45 --> 00:13:37,25
封包進來 把destination IP拿出來 去査表

232
00:13:37,25 --> 00:13:42,5
告訴我說這個目的地應該往哪個port出去

233
00:13:42,5 --> 00:13:44,51
我就從那個port 把他丟出去

234
00:13:44,51 --> 00:13:48,48
那下一個router他收到的時候呢 又做一樣的事情

235
00:13:48,48 --> 00:13:51,38
但是這個表 我們講這個routing table

236
00:13:51,38 --> 00:13:54,58
他會動態的去變更

237
00:13:54,58 --> 00:13:58,78
因為他要反映網路的狀態 這邊阻塞啊那邊斷線啊

238
00:13:58,78 --> 00:14:03,7
那這個怎麼動態的去改變routing table的內容呢

239
00:14:03,8 --> 00:14:06,65
誰來做這個事情呢？就是他 routing protocol

240
00:14:06,65 --> 00:14:10,45
我們router之間會互相的定時不定時的交換情報

241
00:14:10,45 --> 00:14:13,78
然後把這個routing table把它維護好

242
00:14:13,78 --> 00:14:16,81
我們講維護嘛 所以可能會隨時去改他

243
00:14:16,81 --> 00:14:20,45
好 封包進來的時候我就査表

244
00:14:20,45 --> 00:14:24,94
所以連續兩個封包進來的時候査的表的內容可能已經變掉了

245
00:14:24,95 --> 00:14:27,31
所以為什麼說 我們說

246
00:14:27,31 --> 00:14:31,50
這個同樣一個目的地 送的封包 剛剛提到

247
00:14:31,51 --> 00:14:33,65
他送的封包 第一個呢走這樣子

248
00:14:33,65 --> 00:14:39,41
為什麼第二個進來的時候他是走這樣子 路徑不一樣

249
00:14:39,41 --> 00:14:45,31
就是因為我們的routing table他是動態維護的 動態變更

250
00:14:45,31 --> 00:14:50,90
就routing table本身他會隨著時間 裡面的內容會有點變化

251
00:14:50,91 --> 00:14:52,81
所以第一個封包進來

252
00:14:52,81 --> 00:14:56,8
同樣要到相同的目的地喔

253
00:14:56,8 --> 00:15:00,8
可能這個時間走這條路 這個時間走那條路

254
00:15:00,8 --> 00:15:02,28
因為我的routing table已經不一樣了

255
00:15:02,28 --> 00:15:04,11
那routing table為什麼不一樣呢

256
00:15:04,11 --> 00:15:06,21
因為我的routing protocol跟我說

257
00:15:06,21 --> 00:15:09,50
這條線路不通了 這條線路阻塞了

258
00:15:09,51 --> 00:15:13,28
所以routing protocol交換情報

259
00:15:13,28 --> 00:15:18,21
交換情報的結果呢 就是要算出routing table來

260
00:15:18,21 --> 00:15:22,60
就我們的製作出routing table 然後給這個router呢來使用

261
00:15:22,61 --> 00:15:27,28
那router本身 每收到一個封包 就去routing table査表

262
00:15:27,28 --> 00:15:31,31
來決定這個封包應該往哪裡去

263
00:15:31,31 --> 00:15:35,58
所以他的動作就非常非常的所謂 我們叫做非常的routing

264
00:15:35,58 --> 00:15:38,1
也就是非常的規則

265
00:15:38,1 --> 00:15:42,81
封包來査表出去 封包來査表出去

266
00:15:42,81 --> 00:15:45,58
只是這個表 這個routing table呢

267
00:15:45,58 --> 00:15:50,51
他會隨時的 內容會被改掉的意思啦 動態的

268
00:15:50,51 --> 00:15:54,98
所以我們說 network layer簡單再做一個整理

269
00:15:54,98 --> 00:15:57,88
所謂的network layer就是說 如何將封包

270
00:15:57,88 --> 00:16:02,91
透過Internet 送給我的目的地的主機

271
00:16:02,91 --> 00:16:06,75
中間可能要經過一個router 可能會經過兩個router

272
00:16:06,75 --> 00:16:10,8
可能經過三十個router 都沒有關係

273
00:16:10,8 --> 00:16:12,58
反正這個router本身

274
00:16:12,58 --> 00:16:16,40
他會幫我選擇一個所謂的最好的路線

275
00:16:16,41 --> 00:16:21,85
那即使是最好的路線 我們說 也不保證對方一定會收到

276
00:16:21,85 --> 00:16:24,65
那最重要的問題就是說 像我們這個地方

277
00:16:24,65 --> 00:16:26,45
譬如說 我們的路線都挑好了

278
00:16:26,45 --> 00:16:28,27
就是這樣子走啦 譬如說這樣子

279
00:16:28,28 --> 00:16:31,91
可是呢你的封包可能在這個router裡面呢 被丟掉

280
00:16:31,91 --> 00:16:36,38
因為我們還沒有講一個問題 就是網路阻塞

281
00:16:36,38 --> 00:16:42,18
阻塞的問題變成說 你進來的速度 很快

282
00:16:42,18 --> 00:16:45,75
可是呢 從這個router出去的速度很慢

283
00:16:45,75 --> 00:16:48,88
進來的多出去的少 就是消化不良

284
00:16:48,88 --> 00:16:52,25
好 他的封包就全部累積在router裡面

285
00:16:52,25 --> 00:16:54,25
router也是一個設備

286
00:16:54,25 --> 00:16:56,84
你的封包放在router裡面 放在哪裡

287
00:16:56,85 --> 00:16:58,68
就是放在memory 記憶體

288
00:16:58,68 --> 00:17:02,74
記憶體有個上限 所以如果說進來的量

289
00:17:02,75 --> 00:17:06,1
越來越多 出去的這個速度來不及消化

290
00:17:06,1 --> 00:17:07,88
他就會慢慢的累積

291
00:17:07,88 --> 00:17:14,50
一直到塞不下去了 他就會挑哪幾個封包比較倒霉

292
00:17:14,50 --> 00:17:17,64
被他挑到了 就把它drop掉 就把它砍掉

293
00:17:17,65 --> 00:17:23,25
那砍掉之後呢 他就告訴你說你的封包掉了 that's it

294
00:17:23,25 --> 00:17:25,78
他就告訴你的封包掉了 但是他不會幫你送

295
00:17:25,78 --> 00:17:27,31
他也救不回來 根本就丟掉了

296
00:17:27,31 --> 00:17:32,78
所以我們把封包透過network layer來傳輸的話

297
00:17:32,78 --> 00:17:37,8
有一個很重要 就是說network layer是不可靠

298
00:17:37,8 --> 00:17:40,95
他會很努力 我們叫best effort

299
00:17:40,95 --> 00:17:43,45
盡力地想幫你送到對方去

300
00:17:43,45 --> 00:17:47,95
包含說這邊斷線我就繞這邊 這邊阻塞我就繞那邊

301
00:17:47,95 --> 00:17:50,65
他很聰明 會想辦法鑽啦

302
00:17:50,65 --> 00:17:55,81
只是呢再聰明呢 封包還是可能會掉 那掉了之後呢

303
00:17:55,81 --> 00:17:59,68
掉了就掉了 因為他是一個不可靠的傳輸

304
00:17:59,68 --> 00:18:02,25
這就是所謂network layer的特色

305
00:18:02,25 --> 00:18:04,25


