1
00:00:08,77 --> 00:00:11,65
那我們今天來跟各位介紹這個單元呢

2
00:00:11,65 --> 00:00:15,17
是所謂的IEEE802.3的ethernet

3
00:00:15,18 --> 00:00:19,51
我們看一下 這個單元我們大概會介紹的內容

4
00:00:19,51 --> 00:00:22,61
我們首先會先做一個比較簡單的introduction

5
00:00:22,61 --> 00:00:25,88
介紹ethernet最基本的這個歷史的來源

6
00:00:25,88 --> 00:00:29,85
然後我們會接下來介紹ethernet的一些所謂的拓墣

7
00:00:29,85 --> 00:00:34,81
因為ethernet從早期呢 是從bus的這種所謂的拓墣

8
00:00:34,81 --> 00:00:38,75
慢慢的演進到現在的所謂的star 所謂的星狀的拓墣

9
00:00:38,75 --> 00:00:42,21
我們會介紹這個拓墣演進的這個過程

10
00:00:42,21 --> 00:00:44,28
那第三個我們來介紹這個

11
00:00:44,28 --> 00:00:46,51
ethernet他的所謂的frame format

12
00:00:46,51 --> 00:00:49,81
就是在ethernet上面我們傳送的那個封包

13
00:00:49,81 --> 00:00:53,75
他的格式是什麼格式 做一個這個比較簡單的介紹

14
00:00:53,75 --> 00:00:55,5
那第四部分呢

15
00:00:55,5 --> 00:00:58,31
我們會介紹ethernet裡面最重要的核心

16
00:00:58,31 --> 00:00:59,95
就是所謂他的MAC protocol

17
00:00:59,95 --> 00:01:02,85
就是說ethernet本身他是怎麼樣的運作

18
00:01:02,85 --> 00:01:05,61
怎麼樣把封包傳送上去

19
00:01:05,61 --> 00:01:08,8
怎麼樣把封包成功地收下來

20
00:01:08,8 --> 00:01:12,71
那這個過程呢 他用了一個比較有名的叫做CSMA/CD

21
00:01:12,71 --> 00:01:16,15
簡稱叫做carrier sense multiple access

22
00:01:16,15 --> 00:01:17,38
with collision detection

23
00:01:17,38 --> 00:01:19,48
我們介紹這樣的技術

24
00:01:19,48 --> 00:01:21,18
那最後面呢我們會介紹說

25
00:01:21,18 --> 00:01:24,21
IEEE802.3相關ethernet的標準

26
00:01:24,21 --> 00:01:29,85
因為隨著網路技術的這個進步嘛

27
00:01:29,85 --> 00:01:32,000
我們網路呢速度越來越快

28
00:01:32,1 --> 00:01:34,51
從早期的2Mbps

29
00:01:34,51 --> 00:01:39,88
到10M到100M到現在的像1G啦10G甚至100G

30
00:01:39,88 --> 00:01:41,50
在實驗室裡面都被做出來了

31
00:01:41,51 --> 00:01:45,15
所以這個整個ethernet的標準有很多種

32
00:01:45,15 --> 00:01:48,28
我們做一個比較簡單的這個summary

33
00:01:48,28 --> 00:01:50,78
那現在我們就開始來介紹這個

34
00:01:50,78 --> 00:01:53,18
ethernet本身的這個演進的歷史

35
00:01:53,18 --> 00:01:57,71
我們說 ethernet目前是過去三十年來

36
00:01:57,71 --> 00:01:59,71
大概是最成功的網路

37
00:01:59,71 --> 00:02:02,1
因為他算現在全世界上面呢

38
00:02:02,1 --> 00:02:05,1
安裝最多的網路就是這個ethernet

39
00:02:05,1 --> 00:02:08,88
那也是第一個被廣泛使用的所謂的LAN

40
00:02:08,88 --> 00:02:10,44
區域網路的這個結構

41
00:02:10,44 --> 00:02:12,97
那他的速度呢 也非常的快

42
00:02:12,98 --> 00:02:16,58
從早期的2MB 到現在甚至到100G

43
00:02:16,58 --> 00:02:19,35
都有被開發出來 所以等於說

44
00:02:19,35 --> 00:02:22,51
是一個非常非常流行 非常非常普遍的網路

45
00:02:22,51 --> 00:02:25,81
那我們從這個圖上稍微看一下 就是說

46
00:02:25,81 --> 00:02:28,21
最早期這個ethernet被發明的時候

47
00:02:28,21 --> 00:02:32,54
他中間這個圖裡面那個黃色的那條線呢

48
00:02:32,55 --> 00:02:34,85
他就是一個所謂的同軸電纜

49
00:02:34,85 --> 00:02:37,18
他是一個所謂的coaxial cable

50
00:02:37,18 --> 00:02:40,71
那這個電纜的特性就是他會做訊號的廣播

51
00:02:40,71 --> 00:02:43,97
就是我們把一個封包的訊號送到這個cable上面呢

52
00:02:43,98 --> 00:02:46,38
他會做雙向的廣播

53
00:02:46,38 --> 00:02:48,98
有點像是一個廣播的媒介

54
00:02:48,98 --> 00:02:53,21
那連在上面的工作站呢 大家都可以聽得到

55
00:02:53,21 --> 00:02:56,17
我們看一下 在這個結構裡面

56
00:02:56,18 --> 00:02:59,41
主要是有幾個特別的重要的地方

57
00:02:59,41 --> 00:03:02,21
第一個就是 我們講這個所謂的bus

58
00:03:02,21 --> 00:03:06,37
這個bus就是這個黃色的這一段呢 就是所謂的bus

59
00:03:06,38 --> 00:03:09,61
那這個bus本身

60
00:03:09,61 --> 00:03:13,15
最主要就是讓我們可以做到所謂的廣播啦

61
00:03:13,15 --> 00:03:14,54
那中間這一段呢

62
00:03:14,55 --> 00:03:17,1
黃色這一段就是所謂的bus的部分

63
00:03:17,1 --> 00:03:21,85
然後PC呢或者工作站 就透過我們所謂的tap

64
00:03:21,85 --> 00:03:25,48
或者所謂的transceiver 這個tap就是相當於是說

65
00:03:25,48 --> 00:03:30,1
在這個地方 相當於一個接口啦

66
00:03:30,1 --> 00:03:31,65
就我們用一個tap的設備

67
00:03:31,65 --> 00:03:33,97
事實上就是像這樣子一個設備

68
00:03:33,98 --> 00:03:38,75
這個tap就是等於說讓我們把這個電腦能夠連接上去

69
00:03:38,75 --> 00:03:42,81
像這兩端 都是那個同軸電纜的接口

70
00:03:42,81 --> 00:03:45,30
所以等於說這邊會有一個電纜接進來

71
00:03:45,31 --> 00:03:46,71
這邊也有一個電纜接進來

72
00:03:46,71 --> 00:03:49,11
那這個就相當於那個所謂的tap

73
00:03:49,11 --> 00:03:51,31
然後這邊還有一個接口

74
00:03:51,31 --> 00:03:54,48
這個接口就是等於說接到那個PC有一個cable

75
00:03:54,48 --> 00:03:57,1
所以電腦從這個地方接到這裡來

76
00:03:57,1 --> 00:03:59,98
然後這個就是整個這個所謂的

77
00:03:59,98 --> 00:04:03,5
ethernet的最早期就是這個樣本

78
00:04:03,5 --> 00:04:07,1
那當然他這個cable比較粗 這個設備也比較重

79
00:04:07,1 --> 00:04:09,88
然後這個是又靠那個栓上去的資料

80
00:04:09,88 --> 00:04:12,61
這個設備啦 等下我們會再做一個介紹

81
00:04:12,61 --> 00:04:17,67
那在早期這樣的ethernet的這種所謂的骨架

82
00:04:17,67 --> 00:04:22,67
基本上非常的簡單 就是以一個bus的結構呢為主

83
00:04:22,67 --> 00:04:25,48
然後PC呢就一個一個接上去

84
00:04:25,48 --> 00:04:27,91
那這樣就形成一個所謂的區域網路

85
00:04:28,51 --> 00:04:31,70
再來看一下 那這個早期呢是由

86
00:04:31,71 --> 00:04:38,28
我們說Xerox這個公司啦 大概在1970年代中期

87
00:04:38,28 --> 00:04:40,41
在Palo Alto這邊所開發出來的

88
00:04:40,41 --> 00:04:42,78
他們在他的所謂的research center

89
00:04:42,78 --> 00:04:45,37
我們叫PARC這邊所發展出來的

90
00:04:45,38 --> 00:04:49,35
後來因為這個看起來這個架構非常簡單

91
00:04:49,35 --> 00:04:51,71
而且傳輸起來效率也不錯

92
00:04:51,71 --> 00:04:54,38
所以當時的DEC跟Intel

93
00:04:54,38 --> 00:04:57,21
這兩家公司呢 就加入這個Xerox呢

94
00:04:57,21 --> 00:05:01,91
共同來定義一個所謂的10Mbps的ethernet的標準

95
00:05:01,91 --> 00:05:07,55
所以標準呢就在1978年就形成這個所謂的世界標準

96
00:05:07,55 --> 00:05:09,15
就所謂的ethernet的標準

97
00:05:09,15 --> 00:05:12,94
那這個標準後來呢就成為IEEE

98
00:05:12,95 --> 00:05:18,41
我們有一個standard叫做802系列 那其中的802.3

99
00:05:18,41 --> 00:05:20,98
就是來定義這個所謂的ethernet的

100
00:05:20,98 --> 00:05:23,61
所謂的MAC protocol跟physical layer

101
00:05:23,61 --> 00:05:25,48
所以最近我們剛剛提到

102
00:05:25,48 --> 00:05:29,51
因為ethernet本身的普及性非常非常的大

103
00:05:29,51 --> 00:05:31,68
而且網路的技術越來越好

104
00:05:31,68 --> 00:05:35,41
這傳輸的這個媒介這個越來越高級

105
00:05:35,41 --> 00:05:36,94
然後速度越來越快

106
00:05:36,95 --> 00:05:41,35
所以呢後來有100Mbps的這個版本

107
00:05:41,35 --> 00:05:44,65
我們叫做所謂的fast ethernet 我們稍微看一下

108
00:05:47,8 --> 00:05:51,58
這個所謂的fast ethernet 這是指100Mbps的

109
00:05:51,58 --> 00:05:54,5
那後來傳輸的技術呢又更快

110
00:05:54,5 --> 00:05:55,70
包括coding的技術又更好

111
00:05:55,71 --> 00:05:59,21
所以可以發展到1000Mbps

112
00:05:59,21 --> 00:06:03,61
那1000Mbps我們就簡稱為Gigabit ethernet

113
00:06:03,61 --> 00:06:05,48
因為他速度又快十倍

114
00:06:05,48 --> 00:06:09,18
那後來呢又演進到了再快十倍 叫10G

115
00:06:09,18 --> 00:06:13,85
就所謂的10G 10個Gbps的ethernet

116
00:06:13,85 --> 00:06:18,58
那最近呢 有些在比較先進的實驗室

117
00:06:18,58 --> 00:06:22,28
已經做出了像100G的這種ethernet

118
00:06:22,28 --> 00:06:25,95
所以這個速度真的是一日千里 越來越快

119
00:06:25,95 --> 00:06:27,55
那網路的速度就越來越快

120
00:06:27,55 --> 00:06:29,81
這裏也是讓我們現在 像我們的internet

121
00:06:29,81 --> 00:06:32,35
就越來越速度越快的最主要的這個因素

122
00:06:32,35 --> 00:06:34,88
就是因為網路技術的這個演進

123
00:06:34,88 --> 00:06:37,78
好 那我們說這個ethernet呢

124
00:06:37,78 --> 00:06:39,61
有幾個重要的特性

125
00:06:39,61 --> 00:06:43,18
我們講第一個 他是所謂的connectionless

126
00:06:43,18 --> 00:06:45,25
connectionless一般的意思就是說

127
00:06:45,25 --> 00:06:49,48
我兩個這個PC 他們要通訊的時候呢

128
00:06:49,48 --> 00:06:52,75
是不需要建連線 我們叫做connectionless

129
00:06:52,75 --> 00:06:54,1
不需要建連線

130
00:06:54,1 --> 00:06:56,75
也就是說 在通訊的時候呢

131
00:06:56,75 --> 00:07:00,5
不需要把一個連線建起來

132
00:07:00,5 --> 00:07:02,58
那什麼時候是需要建連線的呢

133
00:07:02,58 --> 00:07:05,5
有一些網路是要建的 譬如說我們像打電話

134
00:07:05,5 --> 00:07:08,85
打電話本身就是說我們在通話之前必須打那個電話號碼

135
00:07:08,85 --> 00:07:10,58
然後把這個線路接起來

136
00:07:10,58 --> 00:07:13,45
在網路裡面需要建連線呢也有很多

137
00:07:13,45 --> 00:07:16,85
像我們叫做ATM網路啦 或者XXX的網路

138
00:07:16,85 --> 00:07:18,78
這些網路都需要建連線

139
00:07:18,78 --> 00:07:22,15
就是說在傳送之前 要先把連線建起來

140
00:07:22,15 --> 00:07:24,41
那ethernet本身是不需要建連線

141
00:07:24,41 --> 00:07:26,48
就是我想在通訊的時候

142
00:07:26,48 --> 00:07:29,58
我只要想要把封包丟給某一個對象

143
00:07:29,58 --> 00:07:31,48
我只要把這個封包準備好

144
00:07:31,48 --> 00:07:34,98
然後根據這個CSMA/CD 這個protocol

145
00:07:34,98 --> 00:07:39,28
在適當的時間 把這個封包丟上剛剛講那個cable

146
00:07:39,28 --> 00:07:41,51
那我們可能就開始看看這個

147
00:07:41,51 --> 00:07:44,48
等於說開始進行這個傳輸的工作啦

148
00:07:44,48 --> 00:07:48,11
就是我不需要建連線 這是他第一個很重要的特色

149
00:07:48,11 --> 00:07:50,78
那第二個特色我們叫做所謂的unreliable

150
00:07:50,78 --> 00:07:53,10
unreliable就是說所謂的不可靠

151
00:07:53,11 --> 00:07:54,68
不可靠的意思就是說

152
00:07:54,68 --> 00:07:56,78
我們把這個封包丟出去呢

153
00:07:56,78 --> 00:07:59,44
 對方不一定會成功的收到

154
00:07:59,45 --> 00:08:01,98
那為什麼會不一定成功收到

155
00:08:01,98 --> 00:08:04,91
說我們雖然把這個封包丟到這個網路上面

156
00:08:04,91 --> 00:08:08,35
那他會在 像我們剛剛提到這個中間有一條

157
00:08:08,35 --> 00:08:09,68
所謂的同軸電纜

158
00:08:09,68 --> 00:08:11,70
他會在這個cable上面 訊號在這邊跑

159
00:08:11,71 --> 00:08:13,68
但是因為可能受到

160
00:08:13,68 --> 00:08:16,20
第一個是干擾 譬如說有電磁波的干擾

161
00:08:16,21 --> 00:08:18,21
他的訊號可能會有錯誤

162
00:08:18,21 --> 00:08:20,45
那另外一個就是有可能是說

163
00:08:20,45 --> 00:08:24,5
假設有兩台或多台的PC

164
00:08:24,5 --> 00:08:26,85
他們同時送他們的封包上來的話

165
00:08:26,85 --> 00:08:28,68
他們的訊號在這上面呢

166
00:08:28,68 --> 00:08:30,87
我們叫collision 就是說衝撞

167
00:08:30,88 --> 00:08:32,41
那這個訊號衝撞的結果

168
00:08:32,41 --> 00:08:34,8
就是那個訊號會損毀

169
00:08:34,8 --> 00:08:37,78
就是因為訊號都已經亂掉了 都已經打在一起了

170
00:08:37,78 --> 00:08:41,7
那這個封包也會失敗 不管怎麼樣

171
00:08:41,8 --> 00:08:43,8
我們等下後面會介紹就是說

172
00:08:43,8 --> 00:08:46,81
我如果把一個封包送上去 那如果他失敗了

173
00:08:46,81 --> 00:08:49,41
我可能會再嘗試著再試試看啦

174
00:08:49,41 --> 00:08:51,71
因為我希望把它成功送出去嘛

175
00:08:51,71 --> 00:08:54,58
但是也有可能在網路比較擁擠

176
00:08:54,58 --> 00:08:58,48
或者所謂的電磁波的干擾比較多的時候呢

177
00:08:58,48 --> 00:09:00,35
我的封包可能會失敗

178
00:09:00,35 --> 00:09:03,31
那所謂的unreliable就是說 我送出去呢

179
00:09:03,31 --> 00:09:06,48
我這個傳送的這個PC

180
00:09:06,48 --> 00:09:11,31
他只負責把封包試著成功的送出去

181
00:09:11,31 --> 00:09:15,68
但是不保證對方一定成功的收到 也就是說

182
00:09:15,68 --> 00:09:18,18
對方我可能是認為已經有送出去了

183
00:09:18,18 --> 00:09:20,18
所以我的責任已經結束了

184
00:09:20,18 --> 00:09:23,95
但是對方可能並沒有收到 剛剛可能干擾壞掉

185
00:09:23,95 --> 00:09:28,81
封包壞掉 這個傳送的這端可能不一定知道

186
00:09:28,81 --> 00:09:31,61
那receiver那一端 也就是他沒有

187
00:09:31,61 --> 00:09:34,65
一個我們叫做ACK的機制

188
00:09:34,65 --> 00:09:37,68
就是說 如果我們有這個ACK的機制就代表說

189
00:09:37,68 --> 00:09:39,98
我送一個封包給對方

190
00:09:39,98 --> 00:09:42,7
對方一定要告訴我他有沒有收到

191
00:09:42,8 --> 00:09:43,85
那這個叫做ACK

192
00:09:43,85 --> 00:09:47,35
那如果說有這樣的機制 我們叫做reliable

193
00:09:47,35 --> 00:09:49,84
因為我ㄧ定會確認對方有沒有收到

194
00:09:49,85 --> 00:09:53,8
因為對方如果有成功的收到或正確的收到

195
00:09:53,8 --> 00:09:54,98
他會回給我一個ACK

196
00:09:54,98 --> 00:09:57,11
那或者另一個我們叫做NACK

197
00:09:57,11 --> 00:09:59,60
NACK叫做所謂的negative的ACK

198
00:09:59,61 --> 00:10:02,58
就是說 那如果對方發現封包是錯誤的

199
00:10:02,58 --> 00:10:04,68
那他要告訴我封包錯誤

200
00:10:04,68 --> 00:10:08,8
就是說如果說雙方在溝通的時候

201
00:10:08,8 --> 00:10:09,98
除了把資料送給對方之外

202
00:10:09,98 --> 00:10:13,40
對方還會用一個正確收到

203
00:10:13,41 --> 00:10:16,71
或者錯誤收到的這樣的一個回應的話

204
00:10:16,71 --> 00:10:20,98
那這樣我就知道說這個封包到底有沒有成功的傳輸嘛

205
00:10:20,98 --> 00:10:23,25
如果沒有的話我就會重送

206
00:10:23,25 --> 00:10:27,35
就是說我如果知道對方接收的狀況而重送的話

207
00:10:27,35 --> 00:10:30,60
這樣他就可以達到所謂的reliable 因為他非常可靠

208
00:10:30,61 --> 00:10:33,71
就是即使網路本身有雜訊有干擾

209
00:10:33,71 --> 00:10:37,25
那因為對方會告訴我這個接收的狀況嘛

210
00:10:37,25 --> 00:10:39,31
所以我就可以再重送

211
00:10:39,31 --> 00:10:40,98
那個叫做所謂的reliable

212
00:10:40,98 --> 00:10:44,84
但是呢我們ethernet不是這樣子 ethernet就是說

213
00:10:44,85 --> 00:10:48,15
我會負責把盡量把這個封包把它送出去

214
00:10:48,15 --> 00:10:51,48
那對方有沒有收到我就不知道了

215
00:10:51,48 --> 00:10:53,85
所以我們講他是一個unreliable

216
00:10:53,85 --> 00:10:57,61
他是一個盡可能把封包成功的送給對方

217
00:10:57,61 --> 00:11:02,5
但是呢不保證對方一定會收到這個封包

218
00:11:02,5 --> 00:11:04,55
這個是他這個ethernet的特色

219
00:11:04,55 --> 00:11:07,58
好 那我們在這個介紹ethernet的時候呢

220
00:11:07,58 --> 00:11:10,21
剛剛提到一個最重要的這個技術呢

221
00:11:10,21 --> 00:11:11,84
就是所謂的MAC protocol

222
00:11:11,85 --> 00:11:15,25
MAC protocol就是說這個PC呢

223
00:11:15,25 --> 00:11:16,60
或者這個電腦本身

224
00:11:16,61 --> 00:11:21,68
他到底什麼時候可以把他的封包送到這個網路上面去

225
00:11:21,68 --> 00:11:23,40
那他一定要有一個機制嘛

226
00:11:23,41 --> 00:11:25,11
因為我們這個cable上面

227
00:11:25,11 --> 00:11:27,35
可能接了很多台電腦

228
00:11:27,35 --> 00:11:31,5
可能幾台 幾十台 甚至幾百台

229
00:11:31,5 --> 00:11:32,75
那那麼多電腦在上面

230
00:11:32,75 --> 00:11:34,28
都要用一個這個cable

231
00:11:34,28 --> 00:11:36,61
所以這個cable一般我們叫做share media

232
00:11:36,61 --> 00:11:37,85
就是這個cable只有一條

233
00:11:37,85 --> 00:11:41,71
可是有數十台甚至數百台的電腦連在上面

234
00:11:41,71 --> 00:11:45,55
那每個人要傳輸的時候呢 都要用到這個cable

235
00:11:45,55 --> 00:11:48,55
等於說這個媒介只有一個 大家要共用

236
00:11:48,55 --> 00:11:52,17
那到底什麼時候誰可以送

237
00:11:52,18 --> 00:11:55,38
這個就是所謂的MAC protocol  MAC

238
00:11:55,38 --> 00:11:57,58
我們叫media access control  到底誰

239
00:11:57,58 --> 00:12:01,1
哪一台PC在什麼時候可以送出去呢

240
00:12:01,1 --> 00:12:04,98
如果你沒有做一個所謂的協調或者管理的話

241
00:12:04,98 --> 00:12:08,25
可能大家就亂送 亂送的結果就是這個

242
00:12:08,25 --> 00:12:09,78
送出來的資料就全部撞在一起

243
00:12:09,78 --> 00:12:11,18
全部撞在一起全部撞在一起

244
00:12:11,18 --> 00:12:13,1
大家都不會成功

245
00:12:13,1 --> 00:12:15,68
所以所謂的MAC protocol就是一種機制

246
00:12:15,68 --> 00:12:17,8
這個機制就是希望

247
00:12:17,8 --> 00:12:19,55
連接在這個網路上面的這個PC呢

248
00:12:19,55 --> 00:12:21,37
經過這個機制的協調

249
00:12:21,38 --> 00:12:25,31
讓大家有更高的成功的傳送的機會

250
00:12:25,31 --> 00:12:28,25
他這個方法呢就叫做CSMA/CD

251
00:12:28,25 --> 00:12:32,45
叫做carrier sense multiple access

252
00:12:32,45 --> 00:12:34,64
with collision detection

253
00:12:34,65 --> 00:12:36,31
就是說我們在送之前

254
00:12:36,31 --> 00:12:40,7
我們會聽聽看這上面是不是已經有封包在送了啦

255
00:12:40,8 --> 00:12:42,48
那如果沒有 你就可以送出去

256
00:12:42,48 --> 00:12:44,41
那你送出去的時候 我們剛剛提到

257
00:12:44,41 --> 00:12:47,38
這個封包一送上去他會在上面往兩邊跑

258
00:12:47,38 --> 00:12:49,55
因為他是廣播的這個訊號嘛

259
00:12:49,55 --> 00:12:52,25
那也有可能兩邊同時送

260
00:12:52,25 --> 00:12:54,50
這個訊號呢最後是撞在一起的

261
00:12:54,51 --> 00:12:56,31
那這個就叫做collision

262
00:12:56,31 --> 00:12:58,35
那我們再加上collision detection

263
00:12:58,35 --> 00:13:01,7
就我可以偵測到我送出去的封包

264
00:13:01,8 --> 00:13:04,41
有沒有跟其他人的封包發生衝撞

265
00:13:04,41 --> 00:13:06,45
因為衝撞就代表這個封包失敗

266
00:13:06,45 --> 00:13:08,58
那我們當然晚一點點

267
00:13:08,58 --> 00:13:11,5
我們會有一個演算法 來決定

268
00:13:11,5 --> 00:13:14,48
晚一點點呢 時間 我再重送一次

269
00:13:14,48 --> 00:13:16,55
好這所謂的CSMA/CD

270
00:13:16,55 --> 00:13:19,15
那底下呢 我們就來介紹

271
00:13:19,15 --> 00:13:22,74
ethernet的一個所謂的拓墣演進的這個歷史

272
00:13:22,75 --> 00:13:26,5
我們說 最早期的ethernet呢

273
00:13:26,5 --> 00:13:27,78
他的架構呢是一個bus

274
00:13:27,78 --> 00:13:31,21
那個bus的結構就相當於一條這個所謂的

275
00:13:31,21 --> 00:13:32,78
 我們一般叫做匯流排啦

276
00:13:32,78 --> 00:13:36,5
就是cable 那我們在這個圖上面就可以看得到說

277
00:13:36,5 --> 00:13:40,8
我們這個bus本身的架構呢 是這樣

278
00:13:40,8 --> 00:13:43,95
就是我中間呢 有一個同軸電纜 就像這一條

279
00:13:43,95 --> 00:13:48,8
這個黑黑的這塊 就是所謂的同軸電纜

280
00:13:48,8 --> 00:13:52,78
然後剛提到說 這個同軸電纜本身

281
00:13:52,78 --> 00:13:56,28
我們有一個這個叫做所謂的transceiver

282
00:13:56,28 --> 00:13:59,45
transceiver就相當於這個在中間這個

283
00:13:59,45 --> 00:14:02,64
這個所謂的收發器啦

284
00:14:02,65 --> 00:14:06,51
因為他可以收也可以發嘛 我們叫做所謂的收發器

285
00:14:06,51 --> 00:14:10,91
然後這個收發器本身 因為這個訊號本身送上去呢

286
00:14:10,91 --> 00:14:12,55
他會往兩邊跑

287
00:14:12,55 --> 00:14:15,11
所謂往兩邊跑的意思就是這樣子

288
00:14:15,11 --> 00:14:18,28
就是說假設這一台電腦他把訊號送上去

289
00:14:18,28 --> 00:14:21,65
那送上去之後呢 這個訊號就會往這一邊

290
00:14:21,65 --> 00:14:27,18
我們講往右邊送 也會往左邊送

291
00:14:27,18 --> 00:14:28,41
就是說這個訊號本身

292
00:14:28,41 --> 00:14:30,91
任何一台電腦把這個訊號送上去呢

293
00:14:30,91 --> 00:14:33,55
他就往兩邊 訊號就往兩邊跑

294
00:14:33,55 --> 00:14:37,64
那跑到什麼時候呢 跑到這個cable的最後一端

295
00:14:37,65 --> 00:14:41,28
那最後一端這個訊號不能讓他彈回來啊

296
00:14:41,28 --> 00:14:42,71
你讓他彈回來這個封包

297
00:14:42,71 --> 00:14:44,58
等於是自己的訊號跟自己的訊號

298
00:14:44,58 --> 00:14:46,11
就撞在一起了嘛

299
00:14:46,11 --> 00:14:49,64
所以這種cable的網路結構呢 最尾巴

300
00:14:49,65 --> 00:14:54,51
最兩端都會有一個叫做terminator 所謂的終端器

301
00:14:54,51 --> 00:15:00,55
那terminator呢在這種這個bus上面呢像這個例子

302
00:15:00,55 --> 00:15:04,25
就像這個 這個就是所謂的terminator

303
00:15:04,25 --> 00:15:07,84
我們通常是這樣子把他接起來的 就把他栓上去

304
00:15:07,85 --> 00:15:11,5
這樣子把他栓上去之後呢

305
00:15:11,5 --> 00:15:14,45
我們的訊號 假設從這個地方

306
00:15:14,45 --> 00:15:16,98
從左邊進來 到送到這邊

307
00:15:16,98 --> 00:15:18,98
送到這裡呢 他就把它吃掉了

308
00:15:18,98 --> 00:15:21,17
就是說到這邊進來的時候呢

309
00:15:21,18 --> 00:15:25,21
這個訊號呢就不會彈回去的意思

310
00:15:25,21 --> 00:15:29,35
就是說terminator就是專門負責把收到的訊號

311
00:15:29,35 --> 00:15:30,74
把它吸收掉

312
00:15:30,75 --> 00:15:34,1
讓他就等於說在這個cable上面消失

313
00:15:34,1 --> 00:15:35,28
這叫所謂的terminator

314
00:15:35,28 --> 00:15:37,68
那這是所謂的bus的結構

315
00:15:37,68 --> 00:15:41,21
那這個bus的結構呢 他基本上有一個特色就是說

316
00:15:41,21 --> 00:15:45,40
他有一個所謂的長度的限制 像在ethernet裡面

317
00:15:45,41 --> 00:15:48,91
這個cable本身 因為我們訊號送上去後呢

318
00:15:48,91 --> 00:15:52,61
他畢竟是在這個電纜線上面傳輸嘛

319
00:15:52,61 --> 00:15:56,15
那傳輸當然這個傳的距離 這個越遠

320
00:15:56,15 --> 00:16:00,8
我們那個訊號的強度呢會所謂的衰減

321
00:16:00,8 --> 00:16:03,51
所以這個cable的長度 通常都有一個限制

322
00:16:03,51 --> 00:16:06,35
那在這個ethernet這個標準裡面

323
00:16:06,35 --> 00:16:08,17
他大概就是五百公尺

324
00:16:08,18 --> 00:16:09,31
就是這個一段

325
00:16:09,31 --> 00:16:13,48
我們說這個最長呢這一段就是差不多五百公尺

326
00:16:13,48 --> 00:16:16,78
也就是說我們這個網路本身拉一段

327
00:16:16,78 --> 00:16:18,88
基本上就可以達到五百公尺

328
00:16:18,88 --> 00:16:20,88


