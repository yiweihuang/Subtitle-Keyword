1
00:00:09,28 --> 00:00:11,68
我們說這個ethernet的第一代

2
00:00:11,68 --> 00:00:13,84
我們簡稱叫做10base5

3
00:00:13,85 --> 00:00:18,28
他其實就是一個比較粗線的這種同軸電纜

4
00:00:18,28 --> 00:00:20,84
的一個所謂的bus的網路

5
00:00:20,85 --> 00:00:23,75
那我們說一個ethernet的segment

6
00:00:23,75 --> 00:00:25,95
我們叫做一個網段 就是一段

7
00:00:25,95 --> 00:00:29,5
他最長呢就是五百公尺

8
00:00:29,5 --> 00:00:34,15
這是10base5的一個最基本的一段啦

9
00:00:34,15 --> 00:00:36,25
那我們的這個PC呢

10
00:00:36,25 --> 00:00:39,31
或所謂的host呢 就透過一個cable

11
00:00:39,31 --> 00:00:45,4
然後連到這個所謂的同軸電纜上 就像這個

12
00:00:45,5 --> 00:00:46,95
這個就是每一台PC呢

13
00:00:46,95 --> 00:00:49,28
都需要一個這個所謂的tap

14
00:00:49,28 --> 00:00:51,7
那這邊會有一個接口

15
00:00:51,8 --> 00:00:52,75
這個接口就是另外一條

16
00:00:52,75 --> 00:00:53,98
我們叫做transceiver cable

17
00:00:53,98 --> 00:00:57,38
這邊是接到那個PC的那個網卡

18
00:00:57,38 --> 00:01:00,7
等於說每一個PC要接到這個網路上面來

19
00:01:00,8 --> 00:01:01,95
 需要有這樣的一個tap

20
00:01:01,95 --> 00:01:05,78
然後有一個transceiver就是這個地方有一個

21
00:01:05,78 --> 00:01:08,8
這個就是所謂的transceiver啦

22
00:01:08,8 --> 00:01:13,48
就是說他本身因為這個電腦的訊號從這邊送進來

23
00:01:13,48 --> 00:01:15,95
然後同時送到這個cable上面去

24
00:01:15,95 --> 00:01:19,81
那同時這個cable的訊號呢 也會從這邊收進來

25
00:01:19,81 --> 00:01:21,11
所以她其實就是

26
00:01:21,11 --> 00:01:24,61
既可以負責傳送也可以負責接收

27
00:01:24,61 --> 00:01:26,21
所以我一般叫做transceiver

28
00:01:26,21 --> 00:01:29,8
就transmitter跟receiver這兩個字

29
00:01:29,8 --> 00:01:31,000
這個縮寫 叫transceiver

30
00:01:31,1 --> 00:01:33,75
那transceiver本身 就相當於每一台電腦呢

31
00:01:33,75 --> 00:01:37,28
都需要一個這樣的設備來做連接

32
00:01:37,28 --> 00:01:39,78
然後transceiver本身除了剛提到

33
00:01:39,78 --> 00:01:44,8
除了送訊號之外 也會接收這個進來的訊號

34
00:01:44,8 --> 00:01:49,48
然後這個transceiver本身呢就連到這個所謂的網卡

35
00:01:49,48 --> 00:01:54,8
那這個網卡呢 就是一般在電腦上面的網卡

36
00:01:54,8 --> 00:01:57,41
我們這邊就是一個類似一個網卡的例子

37
00:01:57,41 --> 00:02:00,61
那當然早期這個網卡都是一片一片

38
00:02:00,61 --> 00:02:03,28
必須插在我們電腦上面

39
00:02:03,28 --> 00:02:05,11
把電腦拆開把它插進去

40
00:02:05,11 --> 00:02:08,85
那現在的筆電其實都已經內建在裡面

41
00:02:08,85 --> 00:02:12,51
就是主機板上面呢 就已經把這個網路的這個晶片

42
00:02:12,51 --> 00:02:15,41
都已經直接接在上面了

43
00:02:16,35 --> 00:02:20,41
所以我們剛提到 在這個ethernet上面

44
00:02:20,41 --> 00:02:26,41
我們要決定說每一個PC到底在什麼時候可以傳送資料

45
00:02:26,41 --> 00:02:28,65
那個protocol叫CSMA/CD

46
00:02:28,65 --> 00:02:31,21
那這個CSMA/CD這個protocol

47
00:02:31,21 --> 00:02:35,60
我們說這個protocol本身呢 就是實作在

48
00:02:35,61 --> 00:02:38,61
我們講這個protocol就實作在這個卡上面

49
00:02:38,61 --> 00:02:40,45
就這個卡上面呢

50
00:02:40,45 --> 00:02:42,81
他就做了所謂的CSMA/CD

51
00:02:42,81 --> 00:02:45,58
等於說這個卡裡面有個晶片

52
00:02:45,58 --> 00:02:48,67
這個晶片本身就會根據我們這個

53
00:02:48,68 --> 00:02:50,71
從上面我們講

54
00:02:50,71 --> 00:02:52,88
這個訊號從上面跑進來嘛

55
00:02:52,88 --> 00:02:55,5
然後透過這個cable呢就進到這個卡

56
00:02:55,5 --> 00:02:57,18
那這個卡就會來偵測到說

57
00:02:57,18 --> 00:03:01,58
這個cable上面到底有沒有封包正在送

58
00:03:01,58 --> 00:03:04,95
那就所謂的carrier sense CS

59
00:03:04,95 --> 00:03:08,65
就是他會sense這個carrier有沒有carrier在上面跑

60
00:03:08,65 --> 00:03:11,8
訊號在上面跑 那如果他發現說

61
00:03:11,8 --> 00:03:13,15
這個網路上面現在沒有人在送

62
00:03:13,15 --> 00:03:15,15
他就把封包送上去的意思啦

63
00:03:15,15 --> 00:03:17,7
所以這個是所謂的CSMA的概念

64
00:03:17,8 --> 00:03:19,51
我們後面會再做比較多的解釋

65
00:03:19,51 --> 00:03:21,24
我們現在再來看一下

66
00:03:21,25 --> 00:03:24,75
這個10base5本身 到底是什麼意思

67
00:03:24,75 --> 00:03:30,37
這個10 十呢 就代表說他的速度呢是10Mbps

68
00:03:30,38 --> 00:03:33,58
這個base 一般叫所謂的base band

69
00:03:33,58 --> 00:03:34,95
base band的意思是說

70
00:03:34,95 --> 00:03:36,85
我們在這個cable上面跑呢

71
00:03:36,85 --> 00:03:39,21
只有一個band就是一個channel的意思

72
00:03:39,21 --> 00:03:42,35
那如果是他的另外一個對等叫做broadband

73
00:03:42,35 --> 00:03:44,35
broadband的時候可能會好幾個頻道

74
00:03:44,35 --> 00:03:47,8
我們講好幾個channel 像現在有線電視台

75
00:03:47,8 --> 00:03:48,95
那個有線電視的這種

76
00:03:48,95 --> 00:03:52,25
現在有線電視台的那種cable拉進來

77
00:03:52,25 --> 00:03:55,15
他就是個broadband 因為他可能有幾十個channel

78
00:03:55,15 --> 00:03:56,47
甚至上百個channel嘛

79
00:03:56,48 --> 00:04:00,68
可是我們把它用在所謂的電腦網路上面

80
00:04:00,68 --> 00:04:02,65
我們現在這個10base5呢

81
00:04:02,65 --> 00:04:06,61
他只有一個channel 我們叫做baseband 那這個5呢

82
00:04:06,61 --> 00:04:10,11
10base5 這個5呢 其實就是因為他每一段

83
00:04:10,11 --> 00:04:12,58
剛剛講的 就是只有五百公尺

84
00:04:12,58 --> 00:04:17,65
所以10base5 就是說他是一個10Mbps的網路

85
00:04:17,65 --> 00:04:22,11
他用baseband的技術 然後一段呢 最長是五百公尺

86
00:04:23,38 --> 00:04:25,78
剛剛有跟各位介紹過

87
00:04:25,78 --> 00:04:29,1
就是說 在這個10base5的這個網路底下呢

88
00:04:29,1 --> 00:04:32,58
我們說 這個就是所謂的transceiver

89
00:04:32,58 --> 00:04:36,28
transceiver在這個地方 事實上就是這個設備

90
00:04:36,28 --> 00:04:38,71
就是這個設備啦 就是這樣

91
00:04:38,71 --> 00:04:41,48
這就是transceiver 然後他在

92
00:04:41,48 --> 00:04:45,8
兩端就會有這個所謂的terminator

93
00:04:45,8 --> 00:04:48,70
這個黑黑這個 就是terminator 他把他接起來之後

94
00:04:48,71 --> 00:04:51,15
就把兩端給保護起來

95
00:04:51,15 --> 00:04:56,55
讓他訊號送到最終端的時候呢 不會再反彈回來

96
00:04:56,55 --> 00:04:58,85
也就是如果我們把這個cable

97
00:04:58,85 --> 00:05:00,65
terminator假如說不小心

98
00:05:00,65 --> 00:05:02,94
這樣子把他拔開或沒有接的話

99
00:05:02,95 --> 00:05:04,41
那這個網路就癱瘓了

100
00:05:04,41 --> 00:05:06,98
因為任何這個訊號送到這個尾巴

101
00:05:06,98 --> 00:05:07,85
就是說他可能會彈回來

102
00:05:07,85 --> 00:05:11,18
變成每一個封包自己跟自己可能就會衝撞

103
00:05:11,18 --> 00:05:15,97
所以這個terminator一定是要這樣子把他鎖起來

104
00:05:15,98 --> 00:05:16,95
那另外一端

105
00:05:16,95 --> 00:05:20,51
這個就是接所謂的coaxial cable這樣把他接起來

106
00:05:20,51 --> 00:05:22,91
所以變成這邊會有一個這個電纜 那你可以看得到

107
00:05:22,91 --> 00:05:26,58
這個電纜是比較粗啦 所以這個10base5呢

108
00:05:26,58 --> 00:05:30,28
他有另外一個名稱叫做粗線的ethernet

109
00:05:30,28 --> 00:05:33,25
因為他的線 這個同軸電纜線

110
00:05:33,25 --> 00:05:37,27
是很粗 像大拇指這麼粗的一個電纜

111
00:05:37,28 --> 00:05:41,38
當然這麼粗的電纜本身 第一個也比較笨重啦

112
00:05:41,38 --> 00:05:46,98
這個一個五百公尺的這個線 重量也很多也很重

113
00:05:46,98 --> 00:05:50,55
然後 佈線的時候呢 因為這個線纜比較粗嘛

114
00:05:50,55 --> 00:05:52,85
可能基本上佈在地上

115
00:05:52,85 --> 00:05:55,70
那佈在地上也有可能譬如說因為不小心

116
00:05:55,71 --> 00:05:59,58
可能會踢到這個tap 萬一把他鬆掉

117
00:05:59,58 --> 00:06:03,61
這個一鬆掉網路就斷掉了 整個網路就斷掉了

118
00:06:03,61 --> 00:06:05,44
所以這個是他的特色

119
00:06:05,95 --> 00:06:10,58
那我們說 如果他只有一個網段的話

120
00:06:10,58 --> 00:06:14,61
就像它的結構 就像這個我們剛剛有看過

121
00:06:14,61 --> 00:06:19,1
如果只有一個網段 就是這個網段本身呢 長五百公尺

122
00:06:19,1 --> 00:06:22,34
然後兩邊呢會有terminator嘛 最後兩邊

123
00:06:22,35 --> 00:06:26,68
把它做一個訊號的終結 把訊號能夠收納起來

124
00:06:26,68 --> 00:06:31,44
然後這個最長就是五百公尺一段

125
00:06:31,45 --> 00:06:33,68
然後等於說這個transceiver

126
00:06:33,68 --> 00:06:38,27
每一個電腦都有一個transceiver把它連接起來

127
00:06:38,28 --> 00:06:40,15
這是一段 五百公尺

128
00:06:40,15 --> 00:06:42,68
但是有時候我們這個五百公尺呢

129
00:06:42,68 --> 00:06:47,65
可能沒辦法cover我們所需要所謂的連接的範圍

130
00:06:47,65 --> 00:06:49,55
譬如說我們的範圍可能比較遠

131
00:06:49,55 --> 00:06:50,81
我們的距離比較遠

132
00:06:50,81 --> 00:06:54,78
可能一公里的這個距離

133
00:06:54,78 --> 00:06:56,78
我們只靠五百公尺可能連不起來

134
00:06:56,78 --> 00:07:00,37
就不夠 那不夠的話我們可以透過另外一個設備呢

135
00:07:00,38 --> 00:07:03,18
我們等下會介紹 來可以把它連起來

136
00:07:03,18 --> 00:07:07,78
那這個地方我們先介紹一下說 那在這個cable上面

137
00:07:07,78 --> 00:07:11,78
上面送的訊號 到底是什麼訊號啦

138
00:07:11,78 --> 00:07:16,44
那我們說ethernet用了一個滿有名的這個coding的方式

139
00:07:16,45 --> 00:07:18,45
我們叫做Manchester encoding

140
00:07:18,45 --> 00:07:20,91
這個coding的目的就是說

141
00:07:20,91 --> 00:07:23,95
當我們把這個訊號 我們把data送上去

142
00:07:23,95 --> 00:07:26,51
因為這個data一般都是我們講binary

143
00:07:26,51 --> 00:07:31,5
就是0101啦 那最簡單的這種訊號就是

144
00:07:31,5 --> 00:07:33,21
譬如說我用0101來講

145
00:07:33,21 --> 00:07:36,88
我們1就是高電位 那0的話就是低電位

146
00:07:36,88 --> 00:07:39,98
就是說我在上面 因為我可以量他的電壓啦

147
00:07:39,98 --> 00:07:42,5
等於說 如果是現在你的data是0

148
00:07:42,5 --> 00:07:44,15
那我就譬如說是低電位

149
00:07:44,15 --> 00:07:47,15
那如果是data是1 我就比較高的電位

150
00:07:47,15 --> 00:07:49,48
我就靠那個電位來判斷他是1或0

151
00:07:49,48 --> 00:07:53,18
但是我們在傳輸的時候有一個很重要的問題就是說

152
00:07:53,18 --> 00:07:55,97
我傳輸的兩台電腦都是獨立的電腦

153
00:07:55,98 --> 00:08:00,28
所以我用多快的速度把這個資料送上去

154
00:08:00,28 --> 00:08:04,18
那對方就應該用多快的速度把它收下來

155
00:08:04,18 --> 00:08:06,8
就是兩邊我們叫做要同步

156
00:08:06,8 --> 00:08:08,75
譬如說我送的很快 你收得很慢

157
00:08:08,75 --> 00:08:11,15
那我本來送 譬如說我送四個bits

158
00:08:11,15 --> 00:08:13,41
那妳看成兩個bits 就錯掉了

159
00:08:13,41 --> 00:08:16,15
就我送四個bits變成你就應該看四個bits

160
00:08:16,15 --> 00:08:18,85
我送一百個bits你就應該看一百個bits

161
00:08:18,85 --> 00:08:20,68
那我們這個要同步啊

162
00:08:20,68 --> 00:08:22,51
但是我們有一個實際的問題就是說

163
00:08:22,51 --> 00:08:25,1
兩台電腦之間 他的clock

164
00:08:25,1 --> 00:08:27,65
就是我們一般電腦裡面都有cpu都有clock

165
00:08:27,65 --> 00:08:31,8
這兩台電腦之間的clock呢 因為是獨立的電腦系統

166
00:08:31,8 --> 00:08:33,30
獨立的那個clock的就我們講

167
00:08:33,30 --> 00:08:35,50
譬如說石英振盪器 都是獨立的

168
00:08:35,51 --> 00:08:40,18
所以呢他們的這個時間的clock不一定會同步

169
00:08:40,18 --> 00:08:42,28
那不一定同步就很麻煩啊

170
00:08:42,28 --> 00:08:45,45
就我送出去的時候跟對方收的時候可能就會

171
00:08:45,45 --> 00:08:46,45
因為沒有同步

172
00:08:46,45 --> 00:08:48,80
會有誤差啦 就會判斷錯誤

173
00:08:48,81 --> 00:08:50,35
所以有一個技術就是說

174
00:08:50,35 --> 00:08:55,45
我如果把資料送上去 同時要把我的clock也送上去

175
00:08:55,45 --> 00:08:58,35
就是我要把我的這個所謂的時脈

176
00:08:58,35 --> 00:09:00,45
 我們的clock呢送上去給對方

177
00:09:00,45 --> 00:09:02,88
那對方依據這個clock來接收

178
00:09:02,88 --> 00:09:04,58
那這個做法有很多種

179
00:09:04,58 --> 00:09:08,28
那這個ethernet用了這裡所謂的Manchester encoding

180
00:09:08,28 --> 00:09:10,65
那Manchester encoding我們可以看一下

181
00:09:10,65 --> 00:09:12,41
他最大的特色在這個地方

182
00:09:12,41 --> 00:09:15,55
就是說他在每一個bit 也就是我們講

183
00:09:15,55 --> 00:09:19,35
因為我們在這個cable上面送的資料都是binary

184
00:09:19,35 --> 00:09:20,94
就是一個bit一個bit送

185
00:09:20,95 --> 00:09:23,11
就是一個bit 一個一個bit這樣

186
00:09:23,11 --> 00:09:24,35
一個接一個 一個接一個

187
00:09:24,35 --> 00:09:29,5
那每一個bit呢 我們都會有一個所謂的時間的寬度

188
00:09:29,5 --> 00:09:31,58
這個跟我們的傳輸速度有關

189
00:09:31,58 --> 00:09:34,88
譬如說10Mb 那就是代表說

190
00:09:34,88 --> 00:09:39,50
10Mbps嘛 一秒鐘要送10個Mb

191
00:09:39,51 --> 00:09:41,48
就是一千萬個bits

192
00:09:41,48 --> 00:09:46,8
那一個bit呢他的寬度就是十的七次方分之一嘛

193
00:09:46,8 --> 00:09:50,45
那如果你是100Mb 那就是十的八次方分之一

194
00:09:50,45 --> 00:09:54,91
就是你速度越快 每一個bit的時間就越短

195
00:09:54,91 --> 00:09:58,58
那如果說我們送的假設我送的資料全部都是0

196
00:09:58,58 --> 00:10:02,78
代表說我在cable上面呢 訊號通通都是0啦

197
00:10:02,78 --> 00:10:07,64
那我的封包很長 譬如說一萬兩千個bits 通通都是0

198
00:10:07,65 --> 00:10:10,78
那對方就不知道我的速度到底有多快

199
00:10:10,78 --> 00:10:12,31
因為我的訊號沒有變化

200
00:10:12,31 --> 00:10:16,27
他就不知道他到底要用多快的速度來取樣

201
00:10:16,28 --> 00:10:17,75
這是一個很大的問題

202
00:10:17,75 --> 00:10:18,95
那另外一個問題就是說

203
00:10:18,95 --> 00:10:21,81
那萬一我的data全部都是1 就是高電位嘛

204
00:10:21,81 --> 00:10:26,38
那一萬兩千個bits都是高電位 都是1 那對我來看

205
00:10:26,38 --> 00:10:28,55
我也不知道 對receiver來看

206
00:10:28,55 --> 00:10:30,40
他也不知道這到底有幾個bits啊

207
00:10:30,41 --> 00:10:33,71
因為通通都是1 他也不知道到底有幾個bit

208
00:10:33,71 --> 00:10:36,38
因為我們訊號沒有變化

209
00:10:36,38 --> 00:10:39,91
所以Manchester encoding呢就是要一種設計就是說

210
00:10:39,91 --> 00:10:41,95
不管你的data是0或者data是1

211
00:10:41,95 --> 00:10:44,98
我一定讓這個訊號呢有變化

212
00:10:44,98 --> 00:10:49,68
訊號的變化其實就隱藏了clock在裡面

213
00:10:49,68 --> 00:10:52,38
那這個clock就可以讓接收端呢

214
00:10:52,38 --> 00:10:55,28
用這個clock呢 來取樣你的data

215
00:10:55,28 --> 00:10:59,58
才可以正確的把你的data解讀出來 到底是1還是0

216
00:10:59,58 --> 00:11:01,48
好 那這個Manchester encoding呢

217
00:11:01,48 --> 00:11:04,38
他最大的特色就在這裡 我們注意看一下 你看

218
00:11:04,38 --> 00:11:06,85
他在這個1的時候

219
00:11:06,85 --> 00:11:10,11
就是我的data如果是1的話呢

220
00:11:10,11 --> 00:11:11,64
我在這個一個bit的中間

221
00:11:11,65 --> 00:11:13,75
他一定會有一個transition

222
00:11:13,75 --> 00:11:16,5
我們說 像這個地方 這個叫transition

223
00:11:16,5 --> 00:11:18,28
由low到high 這個transition

224
00:11:18,28 --> 00:11:22,11
那如果你是0的話呢 像這個bit是0

225
00:11:22,11 --> 00:11:24,1
那他就由high到low

226
00:11:24,1 --> 00:11:26,58
如果我們注意看這個就是說

227
00:11:26,58 --> 00:11:29,31
不管我們的data是1還是0

228
00:11:29,31 --> 00:11:34,84
我在一個bit的中間 他一定有電位的變化

229
00:11:34,85 --> 00:11:36,38
不管是 我們講

230
00:11:36,38 --> 00:11:38,85
如果是1就是low變到high

231
00:11:38,85 --> 00:11:40,85
如果是0就是high變到low

232
00:11:40,85 --> 00:11:44,15
所以你看一下 像這個1

233
00:11:44,15 --> 00:11:49,18
都是low變到high low變到high low變到high

234
00:11:49,18 --> 00:11:51,25
如果是零的話呢 就是在中間呢

235
00:11:51,25 --> 00:11:54,5
變成high變到low 由high到low這樣子

236
00:11:54,5 --> 00:11:56,5
所以變成說 你可以想像看

237
00:11:56,5 --> 00:12:00,64
如果我全部都是1 就是我就會變成一個正方形波啦

238
00:12:00,65 --> 00:12:03,81
如果我全部都是0 我也會變成一個方型波

239
00:12:03,81 --> 00:12:07,81
變成說不管我們的data有多少個1有多少個0

240
00:12:07,81 --> 00:12:12,68
我一定會有變化 那有這樣的變化呢 就可以讓接收端

241
00:12:12,68 --> 00:12:15,50
根據這個變化知道說 你變化的速度

242
00:12:15,51 --> 00:12:18,75
因為任何的變化 就代表著clock在裡面

243
00:12:18,75 --> 00:12:22,35
那我用這個clock 再回過頭來來抓這個data的時候呢

244
00:12:22,35 --> 00:12:23,55
我就會正確收到

245
00:12:23,55 --> 00:12:28,55
所以ethernet這個Manchester encoding是非常有名的

246
00:12:28,55 --> 00:12:33,15
就是說我們在這個cable上面 我把訊號送出去的時候

247
00:12:33,15 --> 00:12:36,85
事實上我要送的是1010

248
00:12:36,85 --> 00:12:40,1
但是我讓他的電位再會有一個變化

249
00:12:40,1 --> 00:12:43,18
就是不管我的data是1還是0

250
00:12:43,18 --> 00:12:46,31
他在每一個bit的中間都會有變化

251
00:12:46,31 --> 00:12:51,15
那這樣我即使送很長的連續的1 或者很長的連續的0

252
00:12:51,15 --> 00:12:54,48
都沒有關係 我的訊號都會一直有變化

253
00:12:54,48 --> 00:12:58,21
等於像我的clock就非常非常的跟對方可以做同步

254
00:12:58,21 --> 00:13:01,21
好 那我們再來看一下 就是說

255
00:13:01,21 --> 00:13:07,11
剛剛有提到說 這種10base5本身 一段呢是五百公尺

256
00:13:07,11 --> 00:13:10,91
那可是我們可能因為地理的這個環境

257
00:13:10,91 --> 00:13:12,5
這個區域比較大

258
00:13:12,5 --> 00:13:16,1
五百公尺呢你沒有辦法涵蓋這個整個區域的話呢

259
00:13:16,1 --> 00:13:19,78
我們就可以用一種設備呢 叫做所謂的repeater

260
00:13:19,78 --> 00:13:23,68
這個repeater呢 就相當於我們講所謂的repeat嘛

261
00:13:23,68 --> 00:13:29,18
把我的訊號給重新repeat一次

262
00:13:29,18 --> 00:13:32,11
那這個repeat是怎麼repeat方法呢

263
00:13:32,11 --> 00:13:33,81
是這樣子 就是說假設呢

264
00:13:33,81 --> 00:13:37,8
我們把這個當成repeater 這是repeater假設

265
00:13:37,8 --> 00:13:39,65
那我一個訊號這樣子進到這邊

266
00:13:39,65 --> 00:13:45,1
因為repeat他的接法通常都是接在所謂的

267
00:13:45,1 --> 00:13:48,78
等於說一個網段快結束了啦

268
00:13:48,78 --> 00:13:53,50
代表說你一個網段的話通常大概是五百公尺嘛 剛剛提到

269
00:13:53,51 --> 00:13:57,95
所以我的訊號在這個一個網段送了五百公尺之後呢

270
00:13:57,95 --> 00:14:00,61
我的訊號基本上已經有點衰減了

271
00:14:00,61 --> 00:14:04,11
剛剛講 我們雖然把它變成Manchester encoding

272
00:14:04,11 --> 00:14:07,21
每一個bit呢會有高低高低會有變化

273
00:14:07,21 --> 00:14:09,48
但是因為他有雜訊的干擾

274
00:14:09,48 --> 00:14:11,35
雖然你有高低的變化

275
00:14:11,35 --> 00:14:14,7
可是我的訊號呢會有一點我們叫distortion

276
00:14:14,8 --> 00:14:18,75
會有一點失真啦 等於說我那個波形會有點彎彎曲曲啦

277
00:14:18,75 --> 00:14:22,88
比較沒有這麼像正方波那麼漂亮 因為他會慢慢的衰減

278
00:14:22,88 --> 00:14:26,21
那我收到之後 假設我是repeater

279
00:14:26,21 --> 00:14:28,91
那我收到之後我至少還能夠判斷

280
00:14:28,91 --> 00:14:32,88
他是1還是0 只要我能夠判斷他是1還是0

281
00:14:32,88 --> 00:14:35,48
所以我從這邊進來 再出去的時候呢

282
00:14:35,48 --> 00:14:38,15
我就把它變成原來的方波

283
00:14:38,15 --> 00:14:41,81
就是這邊 我收到的訊號可能因為有衰減因為有失真

284
00:14:41,81 --> 00:14:44,65
其實那個波形已經不太漂亮

285
00:14:44,65 --> 00:14:47,58
但是我因為知道他還是1

286
00:14:47,58 --> 00:14:50,58
我能夠辨認出啦他到底是1還是0

287
00:14:50,58 --> 00:14:52,21
所以我出去的時候呢

288
00:14:52,21 --> 00:14:55,78
就會恢復他原來的這個 比較漂亮的這個波形

289
00:14:55,78 --> 00:14:59,84
就相當於剛開始送出來的這個 訊號比較強的波形

290
00:14:59,85 --> 00:15:01,55
所以repeater本身

291
00:15:01,55 --> 00:15:05,31
我們說他是一個設備 那他本身是會forward的

292
00:15:05,31 --> 00:15:08,68
他會轉送所謂的digital的這種所謂的signal

293
00:15:08,68 --> 00:15:11,64
那digital的signal就是剛剛講數位的訊號

294
00:15:11,65 --> 00:15:15,58
那這個數位的訊號就是1或0的這個所謂的波形啦

295
00:15:15,58 --> 00:15:17,75
就是說我們可能原來的訊號呢

296
00:15:17,75 --> 00:15:19,55
譬如說這個repeater本身

297
00:15:19,55 --> 00:15:22,37
他假設我們這個地方是一個repeater

298
00:15:22,38 --> 00:15:24,11
那這個進來的時候

299
00:15:24,11 --> 00:15:27,50
可能波形已經有點這樣不是很漂亮啦

300
00:15:27,51 --> 00:15:32,58
那出去的時候呢 我們讓他變成所謂的方形波

301
00:15:32,58 --> 00:15:35,61
讓他變得比較又完整的波

302
00:15:35,61 --> 00:15:38,15
又可以再跑更遠一點啦

303
00:15:38,15 --> 00:15:39,85
也就是說那這樣理論上

304
00:15:39,85 --> 00:15:44,58
我們只要訊號衰減到一個程度 我們就加上repeater

305
00:15:44,58 --> 00:15:47,71
那我們就可以再 譬如說這樣就可以又送五百公尺啊

306
00:15:47,71 --> 00:15:51,51
那如果說 在五百公尺之後呢又衰減

307
00:15:51,51 --> 00:15:54,68
我再加一個repeater 我又可以加五百公尺啦

308
00:15:54,68 --> 00:15:56,64
所以理論上可以變成說

309
00:15:56,65 --> 00:16:01,51
我可以用很多的repeater一直把訊號從這個衰減當中呢

310
00:16:01,51 --> 00:16:04,98
再把她補救回來 我就可以接很長很長

311
00:16:04,98 --> 00:16:06,38
理論上是這樣子啦

312
00:16:06,38 --> 00:16:09,51
但是呢我們實際上呢不可以這樣子設計

313
00:16:09,51 --> 00:16:11,51
我們實際上的設計有另外的考量

314
00:16:11,51 --> 00:16:14,21
就是說因為考慮到 我們後面會解釋

315
00:16:14,21 --> 00:16:18,84
這個整個通訊協定的這個所謂的他的效率啦

316
00:16:18,85 --> 00:16:25,61
我們會說 在ethernet上面呢最多是經過四個repeater

317
00:16:25,61 --> 00:16:28,95
就是我們整個網路最多最多

318
00:16:28,95 --> 00:16:34,11
就是兩個電腦之間 我們不管怎麼連

319
00:16:34,11 --> 00:16:36,40
我經過的這個線路呢

320
00:16:36,41 --> 00:16:40,41
最多有四個repeater 那這樣就是說

321
00:16:40,41 --> 00:16:42,18
一個ethernet本身 我們說

322
00:16:42,18 --> 00:16:47,71
他最多就是2500公尺 就是2.5公里

323
00:16:47,71 --> 00:16:52,95
那2.5公里的範圍對我們一般區域網路來講就足夠了啦

324
00:16:52,95 --> 00:16:54,95
因為2.5公里應該夠長了

325
00:16:54,95 --> 00:16:58,5
好所以我們說 如果有repeater的話呢

326
00:16:58,5 --> 00:17:01,15
像在這個地方 我們repeater看一下

327
00:17:05,8 --> 00:17:08,15
repeater呢在這個地方

328
00:17:08,15 --> 00:17:10,48
那我們就是說 我們這樣的話

329
00:17:10,48 --> 00:17:12,78
變成說我上面這一段呢是五百公尺

330
00:17:12,78 --> 00:17:14,85
下面這一段呢是五百公尺

331
00:17:14,85 --> 00:17:17,38
也就是這兩個電腦之間

332
00:17:17,38 --> 00:17:19,88
就是這個電腦跟這個電腦之間

333
00:17:19,88 --> 00:17:22,70
我就可以走這一條 這樣子

334
00:17:22,70 --> 00:17:25,80
經過repeater 再把訊號還原這樣子

335
00:17:25,80 --> 00:17:29,31
那我們這中間就相當於可以走一公里了嘛

336
00:17:29,31 --> 00:17:33,18
就是我靠一個repeater 可以把兩個網段接起來

337
00:17:33,18 --> 00:17:35,71
那我就可以有一公里

338
00:17:35,71 --> 00:17:39,11
那這是用一個repeater接兩個網段

339
00:17:39,11 --> 00:17:42,51
但是我們還可以 甚至接的更多

340
00:17:42,51 --> 00:17:44,4
那我們剛剛有提到說

341
00:17:44,5 --> 00:17:46,31
在這個ethernet的標準裡面

342
00:17:46,31 --> 00:17:48,71
他最多最多就是用五個網段

343
00:17:48,71 --> 00:17:51,71
就像這樣子的圖 那這五個網段裡面

344
00:17:51,71 --> 00:17:56,4
每一個網段都是五百公尺 那我們來看一下

345
00:17:56,5 --> 00:17:59,98
在這個五個網段裡面呢 他最長最長的距離

346
00:17:59,98 --> 00:18:02,61
就像我們這個紅色地方所畫出來的

347
00:18:02,61 --> 00:18:03,84
就是說我可能會經過

348
00:18:03,85 --> 00:18:08,15
sorry我把它收起來一下

349
00:18:08,15 --> 00:18:11,51
就我們會經過幾個網段呢

350
00:18:11,51 --> 00:18:15,38
我們看一下 首先會經過這是第一個網段

351
00:18:15,38 --> 00:18:19,58
阿中間這個第二個網段 這個是第三個網段

352
00:18:19,58 --> 00:18:23,65
那這個就已經三個網段 三個網段就一千五百公尺了

353
00:18:23,65 --> 00:18:26,71
可是我們這個repeater呢還有另外一種設計

354
00:18:26,71 --> 00:18:28,61
就是我們叫做half repeater

355
00:18:28,61 --> 00:18:31,64
就是repeater本身本來就一個設備啦

356
00:18:31,65 --> 00:18:34,45
那可是 所謂的half repeater就是說

357
00:18:34,45 --> 00:18:36,45
我把這個設備 有點把它拆兩半

358
00:18:36,45 --> 00:18:39,55
因為我的距離比較 譬如說我兩棟建築物嘛

359
00:18:39,55 --> 00:18:43,11
兩棟建築物本身 我可以用這個東西

360
00:18:43,11 --> 00:18:47,51
類似兩個這個東西中間 再用專用的線路把他接起來

361
00:18:47,51 --> 00:18:50,85
就是中間這一條 我們叫做half repeater

362
00:18:50,85 --> 00:18:53,65
他中間這個線路的長度呢大概是一公尺

363
00:18:53,65 --> 00:18:57,91
所以整個這樣子加起來 對不起是一公里

364
00:18:57,91 --> 00:19:00,41
所以整個加起來就相當於是2.5公里

365
00:19:00,41 --> 00:19:03,8
所以我們 說他的2.5公里

366
00:19:03,8 --> 00:19:08,65
就相當於是從最遠的這一端 到最遠的這一端

367
00:19:08,65 --> 00:19:12,45
那我們這中間這個路徑 大概就經過

368
00:19:12,45 --> 00:19:14,41
最長最長就是2.5公里

369
00:19:14,41 --> 00:19:17,91
所以在這個ethernet 10base5底下

370
00:19:17,91 --> 00:19:21,54
我們說 他的這種網路的這個結構呢

371
00:19:21,55 --> 00:19:25,25
最多就是用五個segment

372
00:19:25,25 --> 00:19:27,38
這五個segment的連接方式呢

373
00:19:27,38 --> 00:19:31,1
就相當於這個圖所顯示的連接方式

374
00:19:31,1 --> 00:19:33,8
那這個圖連接方式呢

375
00:19:33,8 --> 00:19:38,25
最多就是可以走到五公里的這個距離啦

376
00:19:38,25 --> 00:19:41,31
相當於就是走這一條路 這樣子

377
00:19:42,35 --> 00:19:45,95
最遠最遠這樣子啦 就差不多2.5公里

378
00:19:45,95 --> 00:19:52,48
這是我們講這個10base5最長就是2.5公里

379
00:19:52,48 --> 00:19:55,68
這個2.5公里呢 是一個很重要的參數

380
00:19:55,68 --> 00:19:58,85
這個是我們後面還會再用到的一個

381
00:19:58,85 --> 00:20:02,11
所謂的round-trip delay 我們後面會用到就是說

382
00:20:02,11 --> 00:20:05,1
我們會考慮到是說 那這個訊號

383
00:20:05,1 --> 00:20:09,1
從譬如說從這個左上角送到這個右下角

384
00:20:09,1 --> 00:20:12,31
他這個訊號到底要跑多久

385
00:20:12,31 --> 00:20:15,18
這個跟我們都非常相關 我們後面會用到就是說

386
00:20:15,18 --> 00:20:17,55
我的訊號送上去之後他就沿著這個路徑

387
00:20:17,55 --> 00:20:19,68
跑跑跑跑到最這邊來

388
00:20:19,68 --> 00:20:21,75
好啦最後再跑回來這樣子

389
00:20:21,75 --> 00:20:24,95
感覺說他一個來回的時間

390
00:20:24,95 --> 00:20:26,58
我們叫做round-trip time

391
00:20:26,58 --> 00:20:29,61
這跟我們後面要講的這個CSMA/CD呢

392
00:20:29,61 --> 00:20:31,38
是息息相關的

393
00:20:31,38 --> 00:20:33,38


