1
00:00:09,8 --> 00:00:13,14
好 那我們再來看 如果我們把一個delay

2
00:00:13,15 --> 00:00:16,21
delay就是說 兩端嘛

3
00:00:16,21 --> 00:00:19,8
這個時間啦 就是資料傳輸的時間

4
00:00:19,8 --> 00:00:22,31
剛剛講 訊號從一端到另外一端 他有一個delay

5
00:00:22,31 --> 00:00:27,18
光速啦或者所謂電子的速度 跟距離有關係

6
00:00:27,18 --> 00:00:30,61
從一端送到一端 這個叫做delay時間

7
00:00:30,61 --> 00:00:33,8
需要多少時間的延遲

8
00:00:33,8 --> 00:00:37,5
那我們說 這個delay乘上bandwidth是什麼呢

9
00:00:37,5 --> 00:00:39,35
頻寬是說

10
00:00:39,35 --> 00:00:43,80
你一秒鐘可以送多少量 一秒鐘送多少量

11
00:00:43,81 --> 00:00:47,65
然後送到對方要多久

12
00:00:47,65 --> 00:00:52,10
一個是時間 一個是速度 把它乘起來

13
00:00:52,11 --> 00:00:55,68
我們叫做delay乘上bandwidth 這什麼東東？

14
00:00:55,68 --> 00:01:00,50
我們說 latency就delay 就是我們這個pipe

15
00:01:00,51 --> 00:01:04,18
我們就把兩端的這個channel啦

16
00:01:04,18 --> 00:01:06,71
就我們有一個pipe就好像一個水管一樣

17
00:01:06,71 --> 00:01:09,98
把它來形容他來代表他

18
00:01:09,98 --> 00:01:14,54
latency呢就是這個pipe的長度

19
00:01:14,55 --> 00:01:18,81
那bandwidth呢 就是這個pipe的所謂的寬度

20
00:01:18,81 --> 00:01:21,18
那長乘寬 就它的體積

21
00:01:21,18 --> 00:01:24,98
那體積就是說 delay乘上bandwidth就代表說

22
00:01:24,98 --> 00:01:30,65
那這個pipe裡面可以存多少個data

23
00:01:30,65 --> 00:01:32,78
就相當於這個pipe裡面

24
00:01:32,78 --> 00:01:37,5
我們可以放多少個bit在這裡面

25
00:01:37,5 --> 00:01:39,58
我們舉一個簡單的例子 譬如說

26
00:01:39,58 --> 00:01:42,91
假設呢 這個delay是80 ms

27
00:01:42,91 --> 00:01:45,95
就是說我們從一端到一端 他的時間差

28
00:01:45,95 --> 00:01:48,21
時間的延遲呢 是80ms

29
00:01:48,21 --> 00:01:52,41
那我們如果用100Mbps的速度來送

30
00:01:52,41 --> 00:01:56,27
就是我一秒鐘送100mega bits

31
00:01:56,28 --> 00:02:01,8
那我送了80ms 就是因為時間嘛 我全部把它用完

32
00:02:01,8 --> 00:02:06,24
那把它乘起來 就是說我裡面可以放8個mega bit

33
00:02:06,25 --> 00:02:09,61
相當於一個mega byte的data的意思

34
00:02:09,61 --> 00:02:13,21
就是說我把兩端他們中間的delay

35
00:02:13,21 --> 00:02:16,51
乘上我傳送的速度

36
00:02:16,51 --> 00:02:21,11
相當於說我用一個bandwidth呢送這麼久

37
00:02:21,11 --> 00:02:24,37
相當於把這個pipe全部把它塞滿的意思啦

38
00:02:24,38 --> 00:02:27,78
把它塞滿呢 就是delay乘上bandwidth

39
00:02:27,78 --> 00:02:33,48
就是說把兩端中間這個pipe把它填滿的資料

40
00:02:33,48 --> 00:02:35,78
就是delay乘上bandwidth的意思

41
00:02:35,78 --> 00:02:37,78
那我們剛剛有提到說啊

42
00:02:37,78 --> 00:02:40,61
到底這個bandwidth跟latency

43
00:02:40,61 --> 00:02:46,78
哪一個比較重要 bandwidth跟latency

44
00:02:46,78 --> 00:02:50,1
那bandwidth就是transmission time

45
00:02:50,1 --> 00:02:53,41
因為bandwidth決定了transmission time嘛

46
00:02:53,41 --> 00:02:55,91
那latency呢就是propagation time

47
00:02:55,91 --> 00:02:58,5
因為他是一個傳遞的時間

48
00:02:58,5 --> 00:03:01,71
這兩個delay乘上頻寬 我們說

49
00:03:01,71 --> 00:03:06,15
他是把一個pipe塞滿的資料量

50
00:03:06,15 --> 00:03:09,11
那到底是頻寬重要還是latency重要

51
00:03:09,11 --> 00:03:11,71
我們說這個要看我們的應用是什麼

52
00:03:11,71 --> 00:03:15,71
我們說 如果呢是做大檔案的傳輸

53
00:03:15,71 --> 00:03:17,45
我們說大檔案嘛

54
00:03:17,45 --> 00:03:20,65
檔案傳輸就是你會花比較長的時間

55
00:03:20,65 --> 00:03:21,95
因為你檔案很大

56
00:03:23,1 --> 00:03:24,18
他會發生說

57
00:03:24,18 --> 00:03:27,78
你檔案還沒送完你的第一個bit已經到對方了

58
00:03:27,78 --> 00:03:31,15
這個時候頻寬就比較關鍵

59
00:03:31,15 --> 00:03:34,71
因為頻寬越大可以縮短你的那個傳輸的時間

60
00:03:34,71 --> 00:03:38,67
那我們說那如果是針對小資料

61
00:03:38,68 --> 00:03:42,41
small message 譬如說HTTP啦

62
00:03:42,41 --> 00:03:46,38
因為他只是一個很簡單的一個get 一個詢問嘛

63
00:03:46,38 --> 00:03:48,61
你的小資料來講的話

64
00:03:48,61 --> 00:03:52,91
我們說latency呢就比較關鍵

65
00:03:52,91 --> 00:03:57,25
因為你小資料就代表說 你把資料都送完了

66
00:03:57,25 --> 00:04:00,31
你的第一個bit還沒到對方喔

67
00:04:00,31 --> 00:04:03,21
所以這個時候latency就比較關鍵

68
00:04:03,21 --> 00:04:07,17
也就是說我們其實根據我們的應用啦

69
00:04:07,18 --> 00:04:09,95
來看看說到底頻寬重要還是delay重要

70
00:04:09,95 --> 00:04:12,68
哪一個會影響到我們整個效果

71
00:04:12,68 --> 00:04:17,41
那另外一個還有一個比較特殊的地方我們叫做jitter

72
00:04:17,41 --> 00:04:22,21
什麼叫做jitter呢 就是那個delay的變化

73
00:04:22,21 --> 00:04:24,21
就是說我們剛剛提到 這個pipe

74
00:04:24,21 --> 00:04:27,41
其實他是一個比較我們說 剛提到

75
00:04:27,41 --> 00:04:29,25
我們這個兩個host

76
00:04:29,25 --> 00:04:30,97
我們中間好像有一個這個管線

77
00:04:30,98 --> 00:04:35,48
這個管線呢是一個比較邏輯的概念啦

78
00:04:35,48 --> 00:04:38,28
比較logical 也就是他其實是透過Internet

79
00:04:38,28 --> 00:04:41,38
透過Internet就是說我們真的把封包塞進去的時候

80
00:04:41,38 --> 00:04:43,45
他如果透過Internet

81
00:04:43,45 --> 00:04:45,31
他到對方的時間

82
00:04:45,31 --> 00:04:48,75
有時候並不是每一個封包都一樣的時間

83
00:04:48,75 --> 00:04:53,38
因為有的快有的慢 因為他甚至說我們講他繞路啊 繞不同的路

84
00:04:53,38 --> 00:04:59,21
那什麼叫做jitter呢 我們就是說 jitter就是latency的變化

85
00:04:59,21 --> 00:05:02,8
variance in latency

86
00:05:02,8 --> 00:05:05,48
譬如說我第一個封包花多少時間到目的地

87
00:05:05,48 --> 00:05:07,91
第二個封包花多少時間到目的地

88
00:05:07,91 --> 00:05:12,1
時間都不一定會完全相同 那個時間差啦

89
00:05:12,1 --> 00:05:14,1
時間差就叫做所謂的jitter

90
00:05:14,1 --> 00:05:16,30
一般叫做所謂的抖動的程度啦

91
00:05:16,31 --> 00:05:19,48
如果每一個封包都同一個時間

92
00:05:19,48 --> 00:05:22,21
我們就叫做constant rate或constant time

93
00:05:22,21 --> 00:05:26,51
但是呢如果他會有變化 那個變化的程度

94
00:05:26,51 --> 00:05:29,31
我們叫做所謂的variance 變異度

95
00:05:29,31 --> 00:05:31,81
就是變化的程度 就叫做jitter

96
00:05:31,81 --> 00:05:35,28
那如果jitter等於0 那代表說

97
00:05:35,28 --> 00:05:40,11
每個封包 所經歷的時間 delay 都一樣

98
00:05:40,11 --> 00:05:41,78
叫jitter等於0

99
00:05:41,78 --> 00:05:45,65
那如果jitter越大 就代表說他越不穩定

100
00:05:45,65 --> 00:05:50,1
也許我們在做這個所謂的像audio video

101
00:05:50,1 --> 00:05:53,5
做視訊啦 做這個聲音啦 音樂啊

102
00:05:53,5 --> 00:05:57,18
那個封包送來的時候 如果他不穩定的時候

103
00:05:57,18 --> 00:06:01,78
我們在播放的時候呢 就會碰到一個問題就是

104
00:06:01,78 --> 00:06:04,15
你這個封包把它播完 下一個封包還沒來

105
00:06:04,15 --> 00:06:06,8
因為他慢了一點點

106
00:06:06,8 --> 00:06:09,8
那你聽起來或看起來那個畫面那個聲音

107
00:06:09,8 --> 00:06:10,44
就會不流暢

108
00:06:10,45 --> 00:06:16,18
所以一般的做法就是說 網路的確會發生封包沒有辦法

109
00:06:16,18 --> 00:06:20,80
所謂的按照我們的速度 就是等速進來

110
00:06:20,81 --> 00:06:22,91
他會有時候快有時候慢

111
00:06:22,91 --> 00:06:25,95
就那個時間差有時候會拉長一點有時候會快一點

112
00:06:25,95 --> 00:06:28,75
所以我們作法通常是說 我先放一個buffer

113
00:06:28,75 --> 00:06:31,87
就是說你封包 我就先把它收起來

114
00:06:31,88 --> 00:06:33,78
先收起來 然後我大概等

115
00:06:33,78 --> 00:06:36,58
譬如說我等一秒鐘或等兩秒鐘或等三秒鐘

116
00:06:36,58 --> 00:06:38,45
我再開始播

117
00:06:38,45 --> 00:06:43,65
那你等三秒鐘 就會收到一些了嘛 就開始播嘛

118
00:06:43,65 --> 00:06:47,71
然後你只要三秒鐘之內不要把這個播完

119
00:06:47,71 --> 00:06:49,18
因為封包一直進來

120
00:06:49,18 --> 00:06:52,8
所以有時候封包比較快有時候比較慢一點點沒有關係

121
00:06:52,8 --> 00:06:54,91
因為我有三秒鐘的這個buffer的意思

122
00:06:54,91 --> 00:06:57,91
也就是說 因為我一開始就先等三秒鐘

123
00:06:57,91 --> 00:07:01,95
那你三秒鐘以後封包只要在三秒鐘之內

124
00:07:01,95 --> 00:07:05,88
那個差異其實是 你如果到快一點慢一點都沒關係

125
00:07:05,88 --> 00:07:07,88
因為我有buffer 就是緩衝嘛

126
00:07:07,88 --> 00:07:10,68
那這樣我的播放呢就會更流暢一點

127
00:07:10,68 --> 00:07:12,27
這所謂的jitter的概念

128
00:07:12,28 --> 00:07:16,1
好我們說這個delay乘上bandwidth

129
00:07:16,1 --> 00:07:21,85
就是說可以把兩端這個中間那個pipe把它塞滿的資料量

130
00:07:21,85 --> 00:07:24,75
那我們說 如果這個sender本身

131
00:07:24,75 --> 00:07:27,51
他要讓這個所謂的pipe

132
00:07:27,51 --> 00:07:30,48
讓他full 就是要把它塞滿的話

133
00:07:30,48 --> 00:07:35,75
那delay乘上bandwidth就是那個資料量

134
00:07:35,75 --> 00:07:40,31
那為什麼要把它塞滿呢 因為我們等下會介紹

135
00:07:40,31 --> 00:07:42,45
就是為了提高整個網路的效能

136
00:07:42,45 --> 00:07:43,98
網路的效能就是說

137
00:07:43,98 --> 00:07:47,21
一般我們的通訊都是這樣 就是說我送一個資料給你

138
00:07:47,21 --> 00:07:52,11
那你通常要回我一個 我們叫做所謂的response

139
00:07:52,11 --> 00:07:55,8
我們會希望收到對方的一個回應

140
00:07:55,8 --> 00:07:57,58
啊這個回應呢要花多少時間

141
00:07:57,58 --> 00:08:00,38
那這就是另外一個one way latency

142
00:08:00,38 --> 00:08:05,1
因為我送給你要時間 你回應我也要時間啊

143
00:08:05,1 --> 00:08:07,18
我們說這個來回的時間

144
00:08:07,18 --> 00:08:10,5
一般我們叫做round-trip time  RTT

145
00:08:10,5 --> 00:08:13,1
就是一個來回時間 我把資料送給你

146
00:08:13,1 --> 00:08:16,34
你要回我一個譬如說 我有一個ACK啊

147
00:08:16,35 --> 00:08:18,55
我才知道你有沒有收到嘛

148
00:08:18,55 --> 00:08:22,75
所以我們通常資料會有來回這樣的一個動作

149
00:08:22,75 --> 00:08:26,5
也就是說我們sender本身如果要

150
00:08:26,5 --> 00:08:29,38
最有效的使用這個網路的話

151
00:08:29,38 --> 00:08:32,85
我們就是希望說 我們盡量把這個pipe

152
00:08:32,85 --> 00:08:35,38
盡量把它塞滿 盡量把它塞

153
00:08:35,38 --> 00:08:38,10
因為你塞得越多代表你可以送的越多嘛

154
00:08:38,10 --> 00:08:39,25
換句話就是說

155
00:08:39,25 --> 00:08:43,30
如果你只送一點點東西 就要等對方的回應

156
00:08:43,30 --> 00:08:46,88
那等對方就是你的資料要到對方

157
00:08:46,88 --> 00:08:49,70
然後再等回來 啊這個時間很長啊

158
00:08:49,71 --> 00:08:52,25
可是你送的資料很短 很少

159
00:08:52,25 --> 00:08:54,91
你這個效能相對來講就不好

160
00:08:54,91 --> 00:08:57,51
因為你花了這麼長的時間

161
00:08:57,51 --> 00:09:01,71
只送那麼一點點資料 我們講throughput就不好

162
00:09:01,71 --> 00:09:04,18
那我說我這個來回的時間

163
00:09:04,18 --> 00:09:08,85
我可以送很多資料 代表你的throughput就很好

164
00:09:08,85 --> 00:09:13,11
因為你充分的利用這個所謂網路的頻寬 所以我們希望說

165
00:09:13,11 --> 00:09:18,1
以網路的所謂的效能的角度來看 我們希望sender呢

166
00:09:18,1 --> 00:09:24,40
我們說 在停下來等對方回應

167
00:09:24,41 --> 00:09:28,11
因為我們這個通訊呢 通常就是你送一個東西

168
00:09:28,11 --> 00:09:34,58
對方要回應你 在你停下來等回應的之前

169
00:09:34,58 --> 00:09:38,38
你應該要送這麼多的資料量

170
00:09:38,38 --> 00:09:41,65
就等於是說把那個pipe 能夠把它塞滿

171
00:09:41,65 --> 00:09:43,21
因為他是他的上限

172
00:09:43,21 --> 00:09:46,55
把它塞滿之後呢 你再等一下對方的回應

173
00:09:46,55 --> 00:09:50,55
那這樣的話我們說 你的throughput會更好

174
00:09:50,55 --> 00:09:53,27
那我們再來就來介紹 什麼叫做throughput

175
00:09:53,28 --> 00:09:56,95
那throughput簡單的定義就是這樣子 也就是說

176
00:09:56,95 --> 00:09:59,41
我們先講什麼叫做一個RTT

177
00:09:59,41 --> 00:10:02,18
RTT就是一個round-trip time 就是這樣子

178
00:10:02,18 --> 00:10:07,5
就是那我把資料送給對方 對方再回來的這個時間

179
00:10:07,5 --> 00:10:10,18
就是來回的時間啦 就一般叫做RTT

180
00:10:10,18 --> 00:10:14,68
那來回的時間通常都是你在等 對方的回應啊

181
00:10:14,68 --> 00:10:15,91
也就是說我們看

182
00:10:15,91 --> 00:10:19,48
在這個時間點我開始送資料 那我把資料送到這邊

183
00:10:19,48 --> 00:10:23,71
我送這麼多資料 然後我就開始等對方的回應再回來

184
00:10:23,71 --> 00:10:27,8
所以說你從開始送資料在這個地方

185
00:10:27,8 --> 00:10:30,51
然後你一定要等到對方這個回應

186
00:10:30,51 --> 00:10:33,61
你才能夠處理下一個事情嘛

187
00:10:33,61 --> 00:10:37,78
也就是說這麼長的時間 我們叫做transfer time

188
00:10:37,78 --> 00:10:40,38
在這麼長的時間之內 我們來看

189
00:10:40,38 --> 00:10:41,65
那你送了多少資料

190
00:10:41,65 --> 00:10:44,91
也就是說我們的throughput就是這樣定義嘛

191
00:10:44,91 --> 00:10:48,68
就是說在這個transfer time

192
00:10:48,68 --> 00:10:53,68
在這個時間內 我們到底送了多少個size

193
00:10:53,68 --> 00:10:57,21
transfer size 就是說在這個時間之內

194
00:10:57,21 --> 00:10:59,11
你送了多少資料量

195
00:10:59,11 --> 00:11:02,40
你送的資料量越多 你的throughput就越高嘛

196
00:11:02,41 --> 00:11:05,55
然後我們就是說 那你送的資料量越少

197
00:11:05,55 --> 00:11:07,55
你的throughput就越少

198
00:11:07,55 --> 00:11:11,45
那我們就是說 如果我們要讓這個throughput高

199
00:11:11,45 --> 00:11:13,80
我們就是說 那我們就希望說

200
00:11:13,81 --> 00:11:17,18
在你停下來 停下來就是指這裡

201
00:11:17,18 --> 00:11:19,81
你停下來因為你停到這邊 送到這邊就停了嘛

202
00:11:19,81 --> 00:11:22,48
停了為什麼？ 因為你要等對方的回應嘛

203
00:11:22,48 --> 00:11:24,88
在停下來 這個中間

204
00:11:24,88 --> 00:11:29,98
你要能夠送越多越好 就是送越多越好 再來停

205
00:11:29,98 --> 00:11:32,78
因為你這個時間之內送的量越多

206
00:11:32,78 --> 00:11:37,40
就是說你這個 你的這個整個這個所謂的分母

207
00:11:37,41 --> 00:11:40,71
transfer size就會越大的意思

208
00:11:40,71 --> 00:11:43,18
所以整個我們講他的整個throughput呢

209
00:11:43,18 --> 00:11:44,25
他的定義就是

210
00:11:44,25 --> 00:11:49,5
在這個transfer時間 在這個時間之內

211
00:11:49,5 --> 00:11:52,88
你送了多少的資料量 那我們當然希望說

212
00:11:52,88 --> 00:11:55,58
在一個時間之內 你能夠送的資料越多

213
00:11:55,58 --> 00:11:57,61
那你的throughput就越好

214
00:11:57,61 --> 00:12:03,18
也就是我們前面講的 你在停下來等對方的回應之前

215
00:12:03,18 --> 00:12:06,18
盡可能送越多的資料越好

216
00:12:06,18 --> 00:12:08,61
那你可以送到最多的資料是什麼

217
00:12:08,61 --> 00:12:11,31
最多就是delay乘上bandwidth

218
00:12:11,31 --> 00:12:13,21
delay乘上bandwidth就是說

219
00:12:13,21 --> 00:12:16,88
你們這個兩端之間 你能夠乘載的量

220
00:12:16,88 --> 00:12:20,17
最多最多就那麼多 把它塞滿 然後再等ACK

221
00:12:20,18 --> 00:12:22,5
那這樣你的throughput就很好

222
00:12:22,5 --> 00:12:24,40
如果說你只是送一點點資料

223
00:12:24,41 --> 00:12:27,1
然後他就開始跑 那已經停下來了

224
00:12:27,1 --> 00:12:30,50
你不能送了 停下來等他 送到對方 再回來

225
00:12:30,51 --> 00:12:33,1
這個時間很長 你的資料量很小

226
00:12:33,1 --> 00:12:35,1
throughput就很差的意思

227
00:12:35,1 --> 00:12:37,40
所以throughput角度來看 就變成說

228
00:12:37,41 --> 00:12:43,48
你盡可能在 停下來等對方的回應之前 盡量送到

229
00:12:43,48 --> 00:12:45,91
送的量盡量能夠達到

230
00:12:45,91 --> 00:12:48,15
所謂的delay乘上bandwidth的資料量

231
00:12:48,15 --> 00:12:50,68
對我們的throughput是最好的

232
00:12:50,68 --> 00:12:53,8
好最後呢 我們就做一個summary

233
00:12:53,8 --> 00:12:56,68
就是說在這個單元裡面呢

234
00:12:56,68 --> 00:12:59,74
我們介紹了所謂的網路的

235
00:12:59,75 --> 00:13:02,48
所謂的layer的這個structure

236
00:13:02,48 --> 00:13:07,8
就是說我們網路呢 按照這個所謂的OSI的標準

237
00:13:07,8 --> 00:13:11,8
我們把網路分成很多層 分成七層

238
00:13:11,8 --> 00:13:14,31
所謂的physical layer啦 data link layer啊

239
00:13:14,31 --> 00:13:17,21
然後network layer transport layer

240
00:13:17,21 --> 00:13:19,48
還有這邊 session layer  presentation layer

241
00:13:19,48 --> 00:13:20,98
application layer 分成七層

242
00:13:20,98 --> 00:13:26,11
我們講層層負責 然後每一層都用下一層的服務

243
00:13:26,11 --> 00:13:28,78
來提供上一層服務

244
00:13:28,78 --> 00:13:31,58
就是每一層本身都利用下一層所提供的服務

245
00:13:31,58 --> 00:13:35,45
然後經過自己的方法 加工啦加值啦

246
00:13:35,45 --> 00:13:38,45
提供另外一個服務給上一層

247
00:13:38,45 --> 00:13:42,38
那我們介紹physical layer本身最重要的就是說

248
00:13:42,38 --> 00:13:45,25
怎麼樣把訊號 把資料啦

249
00:13:45,25 --> 00:13:50,64
在這個實體的媒介上面做傳輸 包含coding

250
00:13:50,65 --> 00:13:53,48
coding是physical layer很重要的一部分

251
00:13:53,48 --> 00:13:55,5
那data link layer就是說

252
00:13:55,5 --> 00:13:56,71
那我怎麼把這個一個frame

253
00:13:56,71 --> 00:14:00,58
往前走一段 送給下一個

254
00:14:00,58 --> 00:14:05,8
不管是 交換機或下一個router或下一個host

255
00:14:05,8 --> 00:14:08,15
就是往前走一段 network layer談的是說

256
00:14:08,15 --> 00:14:10,85
那我怎麼把他跨過整個Internet

257
00:14:10,85 --> 00:14:12,81
送到最後的目的地去

258
00:14:12,81 --> 00:14:16,98
中間牽涉到routing 路徑的選擇 所以有很多router

259
00:14:16,98 --> 00:14:19,68
那router之間 他為了要常常溝通

260
00:14:19,68 --> 00:14:22,18
所以他要有所謂的routing protocol

261
00:14:22,18 --> 00:14:24,68
那routing protocol交換情報

262
00:14:24,68 --> 00:14:28,11
交換的結果就是要產生routing table

263
00:14:28,11 --> 00:14:30,70
阿那個router就是收封包

264
00:14:30,71 --> 00:14:33,88
査routing table 査到之後就把他轉出去

265
00:14:33,88 --> 00:14:37,40
那transport layer是這裡面最關鍵的

266
00:14:37,41 --> 00:14:42,68
就是說他提供了 所謂的可靠或不可靠的傳輸

267
00:14:42,68 --> 00:14:45,28
有TCP有這個UDP的服務

268
00:14:45,28 --> 00:14:48,25
然後我們在這一章裡面呢 我們也介紹了說

269
00:14:48,25 --> 00:14:52,55
我們怎麼去衡量一個網路 到底效能好不好呢

270
00:14:52,55 --> 00:14:55,58
我們說有兩個最重要的所謂的指標

271
00:14:55,58 --> 00:14:57,91
一個所謂的頻寬bandwidth

272
00:14:57,91 --> 00:15:02,25
頻寬牽涉到是說你的資料要花久的時間把它送完

273
00:15:02,25 --> 00:15:04,25
把他送到這個網路上面去

274
00:15:04,25 --> 00:15:07,64
那delay就牽涉到說 你的距離有多長

275
00:15:07,65 --> 00:15:10,91
你的訊號要花多久的時間送到對方去

276
00:15:10,91 --> 00:15:14,21
所以bandwidth跟delay都有它特殊的意義

277
00:15:14,21 --> 00:15:17,48
阿然後最重要就是說 bandwidth乘上delay

278
00:15:17,48 --> 00:15:22,98
這兩個乘起來代表是說 通訊的兩端你可以

279
00:15:22,98 --> 00:15:29,50
或者說你需要花多少的資料塞進去中間的pipe 把他塞滿

280
00:15:29,51 --> 00:15:35,21
要最多多少個這個bits 資料量 就是兩個乘起來

281
00:15:35,21 --> 00:15:36,21
阿這兩個乘起來

282
00:15:36,21 --> 00:15:41,5
其實也是代表說我們這個網路的通訊 兩端的通訊

283
00:15:41,5 --> 00:15:44,40
你最後的throughput的上限是什麼

284
00:15:44,41 --> 00:15:46,55
因為跟這個是有關係的

285
00:15:46,55 --> 00:15:48,94
好這就是我們這一章跟各位介紹

286
00:15:48,95 --> 00:15:50,95
整個網路最基本的架構

287
00:15:50,95 --> 00:15:52,95


