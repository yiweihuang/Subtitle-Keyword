1
00:00:09,1 --> 00:00:12,45
好 那接下來我們就進到所謂的第四層

2
00:00:12,45 --> 00:00:14,97
那第四層我們叫所謂的transport layer

3
00:00:14,98 --> 00:00:20,35
所謂的傳輸層 那第四層本身談的是 有點是點對點

4
00:00:20,35 --> 00:00:23,75
所以我們說 他是提供不同主機

5
00:00:24,85 --> 00:00:28,55
他的process就相當於我們的應用程式啦

6
00:00:28,55 --> 00:00:30,81
他們之間的資料傳送

7
00:00:30,81 --> 00:00:35,18
所以他談的是不同主機之間  就是跨網路了啦

8
00:00:35,18 --> 00:00:39,31
所以我們像這個例子裡面 我們左邊這邊有一個主機

9
00:00:39,31 --> 00:00:45,38
然後右邊這邊有一個主機 那我上面呢 都有用了所謂的TCP

10
00:00:45,38 --> 00:00:50,57
那我們希望來讓這個主機上面的process

11
00:00:50,58 --> 00:00:52,75
我們可以這樣的溝通的意思啦

12
00:00:52,75 --> 00:00:53,95
那我們注意到

13
00:00:53,95 --> 00:00:57,45
這個溝通本身中間當然經過這個所謂的Internet

14
00:00:57,45 --> 00:01:03,78
那我們注意到說 我經過Internet我就必須經過像IP嘛 第三層

15
00:01:03,78 --> 00:01:08,31
那我們也提到說 這個第三層的服務呢是不可靠的啊

16
00:01:08,31 --> 00:01:14,45
不可靠就是說我們交給這個網路 他等下可能會繞路

17
00:01:14,45 --> 00:01:19,11
剛剛提到他會routing嘛 那有時候會通有時候不會通

18
00:01:19,11 --> 00:01:21,85
雖然網路阻塞他會繞路 網路斷線他會繞路

19
00:01:21,85 --> 00:01:23,61
但是呢我們也提到說

20
00:01:23,61 --> 00:01:26,11
這個router還是有可能把我們的封包丟掉

21
00:01:26,11 --> 00:01:29,74
或者說中間被干擾 或者被竄改

22
00:01:29,75 --> 00:01:32,95
反正封包可能因為錯誤而被丟棄

23
00:01:32,95 --> 00:01:34,81
那丟棄呢網路就不管你

24
00:01:34,81 --> 00:01:38,18
因為網路本身我們講 第三層是不可靠的服務

25
00:01:38,18 --> 00:01:41,51
那我們說那第四層呢 第四層就必須可靠囉

26
00:01:41,51 --> 00:01:47,21
所以我們說 第四層裡面的服務還是有兩種

27
00:01:47,21 --> 00:01:49,88
一種叫所謂的reliable的service

28
00:01:49,88 --> 00:01:52,65
就是你這個傳輸呢必須很可靠

29
00:01:52,65 --> 00:01:58,15
那這個最經典就是TCP TCP就是transmission control protocol

30
00:01:58,15 --> 00:02:03,21
就是如果你是透過TCP的話 他會提供非常可靠的服務

31
00:02:03,21 --> 00:02:08,14
什麼叫做可靠服務就是說 我們如果把一些資料交給TCP

32
00:02:08,14 --> 00:02:12,95
從另外一端跑出來 他就會相同

33
00:02:12,95 --> 00:02:19,55
雖然他在送的過程當中 可能這邊斷線 這邊被丟棄

34
00:02:19,55 --> 00:02:26,51
都沒有關係 他會 TCP跟TCP之間他們會想辦法 剛剛有提到

35
00:02:26,51 --> 00:02:31,28
就是說我們可以把這個資料把它編號啊 然後送給對方的時候

36
00:02:31,28 --> 00:02:33,65
要求對方一定要告訴我你有沒有收到啊

37
00:02:33,65 --> 00:02:36,58
如果你沒有收到我就告訴你 我就重送啊

38
00:02:36,58 --> 00:02:41,55
就是他們會 讓TCP之間 我們的目的就是讓TCP之間

39
00:02:41,55 --> 00:02:45,11
交給我之後 我會這樣子來來回回來來回回

40
00:02:45,11 --> 00:02:47,55
目的就是要讓他出去 怎麼進來怎麼出去

41
00:02:47,55 --> 00:02:52,8
他提供非常可靠的服務 這叫TCP

42
00:02:52,91 --> 00:02:57,31
但是呢第四層當然也可以有一些 不一定要這麼可靠

43
00:02:57,31 --> 00:03:00,38
因為我們說 到底你要不要用可靠的傳輸

44
00:03:00,38 --> 00:03:04,55
那是要看你要做什麼事 譬如說我剛剛講你要傳檔案

45
00:03:04,55 --> 00:03:06,95
檔案一定要非常可靠 當案內容不能錯

46
00:03:06,95 --> 00:03:10,91
那說我是要看一個youtube 看一個video

47
00:03:10,91 --> 00:03:13,55
那如果你錯一點點資料 我還是可以看啊

48
00:03:13,55 --> 00:03:17,98
所以如果你要的這個服務本身呢 不需要可靠的

49
00:03:17,98 --> 00:03:20,41
我們叫做unreliable的service

50
00:03:20,41 --> 00:03:25,61
他也可以 那我們有一個protocol在第四層裡面 叫做UDP

51
00:03:25,61 --> 00:03:27,88
叫做user datagram的protocol

52
00:03:27,88 --> 00:03:33,37
所以TCP提供可靠的服務 UDP呢就提供不可靠的服務

53
00:03:33,38 --> 00:03:35,81
就看我們的應用的需求啦

54
00:03:35,81 --> 00:03:38,75
所以主要說 所謂的transport layer

55
00:03:38,75 --> 00:03:44,75
在提供主機之間 不同的主機的process

56
00:03:44,75 --> 00:03:48,81
就像我這個主機上面的process 跟這個主機的process

57
00:03:48,81 --> 00:03:53,77
那我們要溝通 那我就透過所謂的transport layer 第四層

58
00:03:53,78 --> 00:03:58,48
那第四層呢 他一般只有在host才有

59
00:03:58,48 --> 00:04:04,11
中間的router 我們剛也介紹過 router一般都是layer3

60
00:04:04,11 --> 00:04:09,1
就是說router本身 因為他router的動作很規律嘛

61
00:04:09,1 --> 00:04:13,11
就是說封包進來 我就看他的destination的IP

62
00:04:13,11 --> 00:04:15,48
然後就査一個routing table

63
00:04:15,48 --> 00:04:18,67
査完之後就知道這個封包該往哪裡去

64
00:04:18,67 --> 00:04:24,25
就把他丟出去 封包進來 査表 轉送 進來 査表 轉送

65
00:04:24,25 --> 00:04:28,34
這個過程當中 我們都沒有看到TCP嘛

66
00:04:28,35 --> 00:04:33,51
所以router本身他不需要transport layer的這個protocol

67
00:04:33,51 --> 00:04:35,70
 所以一般的router本身

68
00:04:35,71 --> 00:04:39,35
是沒有implement這個TCP啦 或者UDP

69
00:04:39,35 --> 00:04:43,21
那不管是我們講說TCP或者UDP

70
00:04:43,21 --> 00:04:46,71
都是transport layer的這個服務

71
00:04:46,71 --> 00:04:52,15
所以transport layer強調的就是 我們講host對host

72
00:04:52,15 --> 00:04:56,98
就主機對主機 中間透過網路來傳輸

73
00:04:56,98 --> 00:04:59,75
阿這個網路可以小到說 一條線

74
00:04:59,75 --> 00:05:03,18
一條線也可以把兩台主機接起來 一條線嘛

75
00:05:03,18 --> 00:05:06,87
或者一個區域網路 譬如說一個ethernet 或者一個wifi

76
00:05:06,88 --> 00:05:10,88
或者整個校園網路 或者整個Internet

77
00:05:10,88 --> 00:05:17,65
他可以小到一段連結 大到整個Internet都可以

78
00:05:17,65 --> 00:05:20,15
反正就是主機跟主機的溝通

79
00:05:20,15 --> 00:05:24,34
那都可以透過這個TCP或者UDP 叫transport layer

80
00:05:24,35 --> 00:05:28,38
來這個 來溝通啦 所以transport layer本身

81
00:05:28,38 --> 00:05:32,95
就是 我們再整理一下 transport layer就是提供

82
00:05:32,95 --> 00:05:35,51
我們講不同主機之間的process

83
00:05:35,51 --> 00:05:37,87
他們之間的資料傳輸

84
00:05:37,88 --> 00:05:42,11
那可以是可靠傳輸 或者不可靠的傳輸

85
00:05:42,11 --> 00:05:45,98
這個端賴我們的應用是什麼應用

86
00:05:45,98 --> 00:05:47,98
所以這是transport layer的這個特色

87
00:05:48,38 --> 00:05:52,35
我們再來看 那什麼叫做session layer 再往上一點

88
00:05:52,35 --> 00:05:54,95
一般的session layer就是說 有時候

89
00:05:54,95 --> 00:06:00,68
我們兩個process在溝通的過程當中 可能會

90
00:06:00,68 --> 00:06:03,41
我們講會產生不同的transport的stream

91
00:06:03,41 --> 00:06:07,68
不同就是說 譬如說我可能會建很多TCP連線

92
00:06:07,68 --> 00:06:10,70
譬如說我們有時候那種 我們講 p2p

93
00:06:10,71 --> 00:06:17,25
p2p一個peer可能就同時跟幾十個peer我們互相溝通嘛

94
00:06:17,25 --> 00:06:19,18
然後我可能就建很多連線啊

95
00:06:19,18 --> 00:06:23,68
那這麼多連線 我可以把它變成一個統稱呢

96
00:06:23,68 --> 00:06:27,80
一般我們就叫做一個session 像我 我也有一個session

97
00:06:27,81 --> 00:06:30,75
那我下面很多連線 所以session本身就相當於說

98
00:06:30,75 --> 00:06:35,25
我們把不同的transport的stream

99
00:06:35,25 --> 00:06:37,54
我們講把它tie together

100
00:06:37,55 --> 00:06:42,38
把它整理在一起 就給他叫做一個所謂的session

101
00:06:42,38 --> 00:06:45,78
也可以叫做所謂的session的一個名稱啦

102
00:06:45,78 --> 00:06:47,90
看你怎麼給這個session取一個名稱

103
00:06:47,91 --> 00:06:50,78
所以session layer本身比較相當於說 好

104
00:06:50,78 --> 00:06:55,8
我把這個transport layer的很多這種stream

105
00:06:55,8 --> 00:06:57,15
把它彙整在一起

106
00:06:57,15 --> 00:06:58,78
這所謂的session layer

107
00:06:58,78 --> 00:07:01,51
那再上一層叫做presentation layer

108
00:07:01,51 --> 00:07:06,70
presentation就是說 所謂的我怎麼呈現我的資料的格式

109
00:07:06,71 --> 00:07:09,48
所以presentation layer強調的是說

110
00:07:09,48 --> 00:07:15,45
我們講format of data 就是兩邊交換的時候

111
00:07:15,45 --> 00:07:17,45
我的這個資料要用什麼格式

112
00:07:17,45 --> 00:07:19,81
譬如說我們講 中文 可能用big5

113
00:07:19,81 --> 00:07:23,55
big5也是一種格式 那英文我什麼格式

114
00:07:23,55 --> 00:07:28,71
就我們可能資料的這個呈現的方法 或者呈現的方式呢

115
00:07:28,71 --> 00:07:32,81
幫他訂一個標準 那這個presentation

116
00:07:32,81 --> 00:07:34,71
這個presentation這個字嘛

117
00:07:34,71 --> 00:07:38,35
就相當於說我的資料怎麼做present

118
00:07:38,35 --> 00:07:41,1
怎麼做這個呈現出來的這個呈現層

119
00:07:41,1 --> 00:07:45,30
好那在最上層就是application layer 就是應用層了

120
00:07:45,31 --> 00:07:47,25
所以我們分成這個七層裡面

121
00:07:47,25 --> 00:07:50,8
最上面這一層就是application layer

122
00:07:50,8 --> 00:07:53,80
就是我們用的 使用的各種軟體啊 各種應用

123
00:07:53,81 --> 00:07:57,41
像ftp啦 email啦 domain name service啦

124
00:07:57,41 --> 00:08:01,48
HTTP 我們的browser 像我們的facebook啦

125
00:08:01,48 --> 00:08:03,61
這些通通都是application

126
00:08:03,61 --> 00:08:06,5
所以我們從這樣的架構看起來就是說

127
00:08:06,5 --> 00:08:10,51
從transport layer以上

128
00:08:10,51 --> 00:08:12,94
譬如說transport layer session layer

129
00:08:12,95 --> 00:08:14,68
presentation layer跟application layer

130
00:08:14,68 --> 00:08:20,38
這四層呢 只有在host才有

131
00:08:20,38 --> 00:08:27,51
那router呢 只到IP layer 第三層 router只到第三層

132
00:08:27,51 --> 00:08:31,91
那switch呢 跟access point呢 他是到第二層

133
00:08:31,91 --> 00:08:34,68
所以我們在網路上面就是說

134
00:08:34,68 --> 00:08:38,68
有些是layer2的設備 有些是layer3的設備

135
00:08:38,68 --> 00:08:44,20
那host呢就七層通通要有 而且我們說

136
00:08:44,20 --> 00:08:48,98
TCP或者transport layer跟上面的這個

137
00:08:48,98 --> 00:08:51,78
不管是session layer presentation 或者application layer

138
00:08:51,78 --> 00:08:56,48
就transport layer以上的 只有在host才會implement

139
00:08:56,48 --> 00:09:00,15
那這個就是我們所謂的七層的架構

140
00:09:00,15 --> 00:09:02,21
我們把網路的功能分成七層

141
00:09:02,21 --> 00:09:05,60
然後每一層每一層 就是各自負責自己的工作

142
00:09:05,61 --> 00:09:08,61
然後每一層跟每一層之間 他要溝通的時候呢

143
00:09:08,61 --> 00:09:10,61
他們必須加上自己的header

144
00:09:10,61 --> 00:09:14,8
然後才可以跟對方溝通嘛

145
00:09:14,8 --> 00:09:17,55
所以我們說 因為每一層都要加上自己的header

146
00:09:17,55 --> 00:09:22,21
所以這個封包從application layer往下送的時候呢

147
00:09:22,21 --> 00:09:25,88
他就會加header 再加header 再加header

148
00:09:25,88 --> 00:09:29,68
一層一層加 所以往下送封包就會變大

149
00:09:29,68 --> 00:09:31,5
我們叫做encapsulation

150
00:09:31,5 --> 00:09:35,58
那你往上送的時候呢 就拆掉拆掉拆掉拆掉

151
00:09:35,58 --> 00:09:37,31
這個叫decapsulation

152
00:09:37,31 --> 00:09:41,21
所以這就是我們所謂的 network的model裡面

153
00:09:41,21 --> 00:09:44,98
所謂的seven layer model的概念

154
00:09:44,98 --> 00:09:47,94
好我們說這個整個Internet的架構

155
00:09:47,95 --> 00:09:49,45
我們叫Internet的architecture呢

156
00:09:49,45 --> 00:09:53,70
事實上 他在制定的時候 分成好幾層的這種概念嘛

157
00:09:53,71 --> 00:09:57,95
那這到底是誰來訂呢 那每一層不是都有很多protocol嗎

158
00:09:57,95 --> 00:10:02,28
像我們network layer有IP 那transport layer有TCP UDP

159
00:10:02,28 --> 00:10:04,45
那application layer就一大堆

160
00:10:04,45 --> 00:10:07,11
我們這個protocol呢有非常非常多

161
00:10:07,11 --> 00:10:10,35
那這個protocol本身因為牽涉到他們之間要溝通

162
00:10:10,35 --> 00:10:13,94
溝通的格式啦 欄位啦

163
00:10:13,95 --> 00:10:16,98
欄位裡面的01代表什麼意思啦

164
00:10:16,98 --> 00:10:21,35
這個所謂的標準 那這個標準是誰來制定呢

165
00:10:21,35 --> 00:10:25,31
我們說 這個Internet上面的protocol的標準呢

166
00:10:25,31 --> 00:10:28,1
是由IETF來制定

167
00:10:28,1 --> 00:10:32,1
他是我們叫做IETF這個組織啦 國際組織呢

168
00:10:32,1 --> 00:10:36,40
來幫我們制定Internet相關的protocol的這個架構

169
00:10:36,41 --> 00:10:42,18
那在Internet的架構裡面呢 主要他有三個很重要的特色

170
00:10:42,18 --> 00:10:46,25
第一個就是說 我們這個layer的觀念

171
00:10:46,25 --> 00:10:51,71
並不是一個非常嚴格的做法

172
00:10:51,71 --> 00:10:54,75
就是說 我們雖然說一層一層一層嘛

173
00:10:54,75 --> 00:10:58,78
某一層他是利用下一層的服務

174
00:10:58,78 --> 00:11:04,15
然後加上自己的這些功課 或者自己的設計 自己的做法

175
00:11:04,15 --> 00:11:08,5
提供給上一層 我們講最典型的就是TCP

176
00:11:08,5 --> 00:11:10,61
TCP提供可靠服務啊

177
00:11:10,61 --> 00:11:13,8
可是呢他下面是IP啊 IP是不可靠啊

178
00:11:13,8 --> 00:11:16,91
所以TCP變成說 他怎麼在不可靠的環境之下

179
00:11:16,91 --> 00:11:19,98
或者不可靠的服務之下 提供可靠的服務

180
00:11:19,98 --> 00:11:22,50
所以我們說TCP就很厲害啊

181
00:11:22,51 --> 00:11:24,55
他會把資料編號啊

182
00:11:24,55 --> 00:11:28,27
然後送出去的時候還要對方回答說有沒有收到

183
00:11:28,28 --> 00:11:32,28
沒收到要重送啊 這個詳細的我們後面會來解釋啦

184
00:11:32,28 --> 00:11:38,35
也就是說 一層一層的這種架構呢 是整個Internet的架構

185
00:11:38,35 --> 00:11:45,81
不過在使用上 並不一定說某一層一定要用下一層

186
00:11:45,81 --> 00:11:49,41
也就是說他可以跳過一層或跳過兩層

187
00:11:49,41 --> 00:11:55,1
直接用更下層的意思啦 所以我們說這種層層的觀念

188
00:11:55,1 --> 00:11:59,35
並沒有這麼嚴格 所以我們說application本身

189
00:11:59,35 --> 00:12:02,84
我們說他可以去bypass

190
00:12:02,85 --> 00:12:08,5
我們講bypass某一些你覺得不需要的這個服務啦

191
00:12:08,5 --> 00:12:10,58
譬如說我們假設這邊有application嘛

192
00:12:10,58 --> 00:12:13,40
那照理講一般application是透過TCP呀

193
00:12:13,41 --> 00:12:17,78
或者透過所謂的我們講TCP或UDP嘛 來做傳輸

194
00:12:17,78 --> 00:12:18,88
因為application

195
00:12:18,88 --> 00:12:21,60
我們通常雖然說我們還有所謂的session layer

196
00:12:21,61 --> 00:12:23,35
還有presentation layer

197
00:12:23,35 --> 00:12:28,68
不過這兩個layer因為一般我們都工作都不大啦

198
00:12:28,68 --> 00:12:30,38
因為只是譬如說資料的呈現

199
00:12:30,38 --> 00:12:32,18
這種都是直接就把它放到

200
00:12:32,18 --> 00:12:35,85
直接把它整合到應用層裡面去做就可以了

201
00:12:35,85 --> 00:12:38,5
所以有時候為了簡單來講

202
00:12:38,5 --> 00:12:41,51
我們就把session layer跟presentation layer跟application layer

203
00:12:41,51 --> 00:12:44,15
直接就和在一起 就沒有分得那麼細

204
00:12:44,15 --> 00:12:49,8
所以一般的這個application通常就會base on TCP或UDP嘛

205
00:12:49,8 --> 00:12:51,68
這是我們知道 那這裡所謂的說

206
00:12:51,68 --> 00:12:53,74
 這個layer的觀念

207
00:12:53,75 --> 00:12:57,25
不一定這麼strict 不一定這麼嚴謹

208
00:12:57,25 --> 00:12:58,78
就是說我們的application

209
00:12:58,78 --> 00:13:05,88
他其實也可以 我們說他直接呼叫這個IP的意思

210
00:13:05,88 --> 00:13:08,1
就我不要TCP我也不要UDP

211
00:13:08,1 --> 00:13:11,38
我直接呼叫IP 這可不可以？這也可以

212
00:13:11,38 --> 00:13:14,15
那甚至說 那我連IP我都不想要

213
00:13:14,15 --> 00:13:18,1
我直接呼叫這個所謂的下面的MAC layer

214
00:13:18,1 --> 00:13:21,50
可不可以？那也可以啦 就是這也沒有那麼嚴格

215
00:13:21,51 --> 00:13:24,75
不過就是說 你如果要透過Internet到對方

216
00:13:24,75 --> 00:13:27,25
那你一定透過IP 因為你沒有IP的話

217
00:13:27,25 --> 00:13:28,88
你是送不到對方去的

218
00:13:28,88 --> 00:13:32,45
但如果說我們這個兩個電腦就直接連在一起啊

219
00:13:32,45 --> 00:13:34,58
我電腦直接連在一起

220
00:13:34,58 --> 00:13:37,75
那我送他就收到了 那我當然就不需要IP啦

221
00:13:37,75 --> 00:13:40,85
我們講IP是讓我們做routing嘛 做選擇

222
00:13:40,85 --> 00:13:43,35
那我們兩個電腦就直接連在一起了

223
00:13:43,35 --> 00:13:46,21
那你再給IP 這都浪費啊

224
00:13:46,21 --> 00:13:50,45
因為我根本不用選擇路徑 我就一條路 而且直接連 像這樣

225
00:13:50,45 --> 00:13:53,21
阿兩個電腦如果用一條線把它連起來

226
00:13:53,21 --> 00:13:56,38
他這個因為 你說他可不可靠？

227
00:13:56,38 --> 00:14:00,35
他也很可靠啊 兩條線直接 一條線把兩個電腦連接起來

228
00:14:00,35 --> 00:14:03,28
他會不會阻塞 阿這條線就我專用的線

229
00:14:03,28 --> 00:14:05,55
怎麼會阻塞 對不對

230
00:14:05,55 --> 00:14:07,64
我就一條線把兩個電腦接起來

231
00:14:07,65 --> 00:14:10,91
這個線就相當於是我專用的線路

232
00:14:10,91 --> 00:14:14,78
他也不會阻塞 我為什麼還要TCP

233
00:14:14,78 --> 00:14:22,88
就是說TCP跟IP都是為了要經過網路來處理

234
00:14:22,88 --> 00:14:26,28
他為了處理網路上可能發生的各種狀況

235
00:14:26,28 --> 00:14:28,48
阻塞啦斷線啦 封包會掉啊

236
00:14:28,48 --> 00:14:31,98
也就是說 如果我們的網路呢

237
00:14:31,98 --> 00:14:33,58
或者說 我們是直接相連的

238
00:14:33,58 --> 00:14:37,5
這個線路非常的穩定 我甚至用光纖連起來

239
00:14:37,5 --> 00:14:41,5
兩台電腦拉一條光纖 我電磁波干擾都不會有

240
00:14:41,5 --> 00:14:44,15
所以我這個線路 光纖是非常可靠的

241
00:14:44,15 --> 00:14:47,8
那我就不要IP我就不要TCP啊

242
00:14:47,8 --> 00:14:49,8
可不可以 可以嘛

243
00:14:49,8 --> 00:14:51,81
就是說我們可以 就是說application呢

244
00:14:51,81 --> 00:14:57,8
直接架在IP上面 或者直接架在sub-network

245
00:14:57,8 --> 00:14:59,88
就像MAC layer上面 這是可以的意思啦

246
00:14:59,88 --> 00:15:03,78
那第二個就是說 那整個Internet的結構呢

247
00:15:03,78 --> 00:15:06,71
他就相當於一個我們所謂的沙漏

248
00:15:06,71 --> 00:15:11,81
所謂的 一個所謂的hour-glass的這種shape

249
00:15:11,81 --> 00:15:15,58
相當於一個沙漏的這樣的這個形狀

250
00:15:15,58 --> 00:15:18,31
那什麼叫做沙漏的形狀 我們看這個架構

251
00:15:18,31 --> 00:15:20,88
我們這裡下面有很多網路

252
00:15:20,88 --> 00:15:26,94
譬如說 這是ethernet 這是wifi 這是ATM

253
00:15:26,95 --> 00:15:28,15
反正網路很多種

254
00:15:28,15 --> 00:15:31,25
就是真正的下面的這個區域網路呢

255
00:15:31,25 --> 00:15:35,88
型態很多 那我們上面呢有TCP 我有UDP

256
00:15:35,88 --> 00:15:39,48
那我的應用層 我們有FTP檔案傳輸

257
00:15:39,48 --> 00:15:43,11
我有HTTP做這個browser 瀏覽器的

258
00:15:43,11 --> 00:15:46,21
domain name service去問你的domain name

259
00:15:46,21 --> 00:15:49,31
就是www ….把它換成IP

260
00:15:49,31 --> 00:15:51,74
SNMP很多人說是網管

261
00:15:51,75 --> 00:15:54,81
我可以來管理這個網路設備等等

262
00:15:54,81 --> 00:15:58,45
好 那我們注意到 application非常多

263
00:15:58,45 --> 00:16:00,55
這個地方非常多 只是沒有全部畫出來

264
00:16:00,55 --> 00:16:03,31
事實上還有...幾百種

265
00:16:03,31 --> 00:16:05,27
那transport layer多不多？

266
00:16:05,28 --> 00:16:07,41
transport layer當然也有一些

267
00:16:07,41 --> 00:16:11,28
不過最代表就是TCP跟UDP 大概就兩個啦

268
00:16:11,28 --> 00:16:15,75
那下面這個呢 這很多 網路很多種

269
00:16:15,75 --> 00:16:17,88
我們剛剛講 有線網路無線網路啦

270
00:16:17,88 --> 00:16:20,64
光纖啦 各式各樣的網路標準也很多

271
00:16:20,65 --> 00:16:23,11
所以網路也很多 我們特別注意到

272
00:16:23,11 --> 00:16:31,11
這個地方 中間這一層 IP只有一個

273
00:16:31,11 --> 00:16:33,84
標準當然現在因為以前也是有兩三個

274
00:16:33,85 --> 00:16:37,38
有IP 有IPX 不同的公司他們

275
00:16:37,38 --> 00:16:39,61
大公司他們會推出他們的protocol

276
00:16:39,61 --> 00:16:43,18
不過經過這個時代 這個融合

277
00:16:43,18 --> 00:16:47,35
淘汰的淘汰 優勝劣敗嘛 最後剩下就是IP了

278
00:16:47,35 --> 00:16:50,38
所以你會發現說 這個整個Internet的結構裡面

279
00:16:50,38 --> 00:16:53,28
上面application是一堆啦

280
00:16:53,28 --> 00:16:55,85
下面的網路呢也很多種

281
00:16:55,85 --> 00:16:59,25
可是中間這個ip呢只有一個

282
00:16:59,25 --> 00:17:03,25
所以他整個架構呢 我們說他就像什麼呢

283
00:17:03,25 --> 00:17:05,78
他就像這個沙漏

284
00:17:06,65 --> 00:17:09,51
你看 他的形狀就像這樣子 一個沙漏

285
00:17:09,50 --> 00:17:13,60
沙漏就是說 中間很細 中間非常的細

286
00:17:13,60 --> 00:17:16,11
所以我們說這個整個focal point

287
00:17:16,11 --> 00:17:20,55
最關鍵的這個點呢 就是在這個IP

288
00:17:20,55 --> 00:17:24,45
相當於IP才是我們最關鍵的地方 在這裏

289
00:17:24,45 --> 00:17:28,38
只有一個IP 上面很大很多 下面很多

290
00:17:28,38 --> 00:17:30,95
但是IP才是最關鍵的

291
00:17:30,95 --> 00:17:35,5
因為我們要跨過整個Internet 都要靠這個ip

292
00:17:35,5 --> 00:17:38,45
所以ip是整個Internet裡面最核心的啦

293
00:17:38,45 --> 00:17:40,95
但是因為這種結構本身呢

294
00:17:40,95 --> 00:17:44,98
他這個protocol呢又不是固定死的

295
00:17:44,98 --> 00:17:50,21
就我們會因為某種原因 或者因為某種需求

296
00:17:50,21 --> 00:17:55,1
我們可能會產生叫做new protocol 像應用

297
00:17:55,1 --> 00:17:59,11
很多應用就一直跑出來 不同的需求 應用會跑出來

298
00:17:59,11 --> 00:18:04,24
或者將來說不定有一天 說不定有IP的另外一版

299
00:18:04,25 --> 00:18:07,41
譬如說現在是IPv4嘛

300
00:18:07,41 --> 00:18:09,98
以後可能會有IPv6啊 第六版等等

301
00:18:09,98 --> 00:18:13,4
就是說 我們如果要加上一個新protocol

302
00:18:13,5 --> 00:18:16,28
新的protocol可不可以加到這裡面來？

303
00:18:16,28 --> 00:18:18,98
這是可以的 因為一個結構呢

304
00:18:18,98 --> 00:18:21,11
一定要有所謂的成長性

305
00:18:21,11 --> 00:18:24,34
就哪一天 說不定我們有需要的時候呢

306
00:18:24,35 --> 00:18:29,71
我們會在這裡譬如說加上一個protocol 譬如說我們講

307
00:18:29,71 --> 00:18:32,74
我們如果有一個新的protocol可能加在這裡

308
00:18:32,75 --> 00:18:33,95
然後他要用UDP

309
00:18:33,95 --> 00:18:38,25
或者我加一個新的他用TCP 我們可以加protocol

310
00:18:38,25 --> 00:18:40,21
也就是我們如果要加protocol的時候呢

311
00:18:40,21 --> 00:18:44,38
為了我們將來可以加一個protocol

312
00:18:44,38 --> 00:18:48,21
進到這個所謂的沙漏型的這個結構裡面呢

313
00:18:48,21 --> 00:18:50,55
那一個protocol本身我們需要什麼

314
00:18:50,55 --> 00:18:53,21
我們說第一個 需要protocol spec

315
00:18:53,21 --> 00:18:56,18
spec就是說它的規格 因為我們說

316
00:18:56,18 --> 00:18:59,68
任何一個protocol本身 他都必須有一個標準的規格

317
00:18:59,68 --> 00:19:00,98
我溝通的時候呢

318
00:19:00,98 --> 00:19:05,24
到底這個格式要用什麼格式 長什麼樣子

319
00:19:05,25 --> 00:19:07,48
互動的過程 那個流程是什麼

320
00:19:07,48 --> 00:19:10,75
所以呢 我們要加一個protocol本身

321
00:19:10,75 --> 00:19:12,95
第一個我們要有一個spec 規格

322
00:19:12,95 --> 00:19:15,68
第二個就是說那我至少要有一個implementation

323
00:19:15,68 --> 00:19:19,35
這個有規格 他不會跑啊 一定要把軟體寫出來啊

324
00:19:19,35 --> 00:19:22,91
所以我們要加一個protocol進到這個架構裡面的時候

325
00:19:22,91 --> 00:19:26,7
第一個我們要有一個規格 第二個你要把它實作出來

326
00:19:26,8 --> 00:19:32,65
那按照這個規格 把這個protocol實作出來 至少要一個啦

327
00:19:32,65 --> 00:19:36,15
當然我們說 這個protocol一定是

328
00:19:36,15 --> 00:19:39,38
兩個對等嘛 如果你只做一個

329
00:19:39,38 --> 00:19:43,48
這個有時候不夠完美嘛 所以如果有兩個以上是最好啦

330
00:19:43,48 --> 00:19:48,11
把它implement出來 不同的implementation 那這樣的話

331
00:19:48,11 --> 00:19:52,28
我們是可以把新的protocol加進去

332
00:19:52,28 --> 00:19:54,31
所以我們再講一下就是說

333
00:19:54,31 --> 00:19:57,58
整個Internet的架構就是說 我們是有分層的

334
00:19:57,58 --> 00:20:02,41
但是這個層層的關係呢 不一定要這麼嚴格

335
00:20:02,41 --> 00:20:03,95
我們可以跳過一些層

336
00:20:03,95 --> 00:20:08,75
直接跟下下或者下層直接溝通 直接用也可以

337
00:20:08,75 --> 00:20:11,21
然後我們的這個整個Internet的架構呢

338
00:20:11,21 --> 00:20:12,98
他就像一個沙漏一樣

339
00:20:12,98 --> 00:20:16,48
中間最細的就是我們的IP

340
00:20:16,48 --> 00:20:19,1
那我們這個Internet的架構呢

341
00:20:19,1 --> 00:20:22,45
他也可以允許我們加新的protocol

342
00:20:22,45 --> 00:20:24,78
那你在加新的protocol的時候呢

343
00:20:24,78 --> 00:20:28,31
就是說你可以 第一個你要有一個spec

344
00:20:28,31 --> 00:20:30,48
第二個 根據這個spec

345
00:20:30,48 --> 00:20:33,38
我們至少要有一個implementation 把它實作出來

346
00:20:33,38 --> 00:20:35,85
這樣我才有辦法把這個protocol

347
00:20:35,85 --> 00:20:38,18
加到這個Internet的架構底下來

348
00:20:38,18 --> 00:20:40,18


