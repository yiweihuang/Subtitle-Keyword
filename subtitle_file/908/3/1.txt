1
00:00:09,028 --> 00:00:12,018
好 我們說這個802.11呢

2
00:00:12,018 --> 00:00:15,091
他的這個標準的這個速度是2Mbps

3
00:00:15,091 --> 00:00:19,008
可是後來慢慢的演進我們就來看一下有哪一些

4
00:00:19,008 --> 00:00:20,088
新的這個標準出來

5
00:00:20,088 --> 00:00:27,008
我們首先看一下 在802.11b加進來的時候呢

6
00:00:27,008 --> 00:00:29,031
我們看一下 802.11b

7
00:00:30,048 --> 00:00:37,075
那他用不同的direct sequence的技術呢 他提供到11Mbps

8
00:00:37,075 --> 00:00:42,048
就是說從原來802.11 2Mbps的速度呢

9
00:00:42,048 --> 00:00:46,061
現在進展到802.11b這個新的標準

10
00:00:46,061 --> 00:00:51,021
那他的速度呢可以到11Mbps 那後來呢

11
00:00:51,021 --> 00:00:55,011
又引進了這個所謂的802.11a

12
00:00:55,011 --> 00:01:00,031
那他可以用OFDM的技術 那這個技術呢

13
00:01:00,031 --> 00:01:05,005
可以讓速度呢 增加到54Mbps

14
00:01:05,005 --> 00:01:11,008
但他的頻道呢 已經把它提升到5GHz這個頻道

15
00:01:11,008 --> 00:01:15,001
那後來呢又有802.11g引進

16
00:01:15,001 --> 00:01:18,091
那802.11g跟802.11b是互相compatible

17
00:01:18,091 --> 00:01:23,081
他一樣用2.4Ghz的頻道 但是他用OFDM的技術

18
00:01:23,081 --> 00:01:27,005
deliver 54Mbps

19
00:01:27,005 --> 00:01:30,025
那最後呢 最近的這個標準是說

20
00:01:30,025 --> 00:01:35,071
進到這個802.11n 他用的技術叫做MIMO

21
00:01:35,071 --> 00:01:42,038
這是準備變成說用多天線 多通道多天線的技術呢

22
00:01:42,038 --> 00:01:48,041
然後可以讓我們的速度呢 可以提升到108這邊

23
00:01:48,041 --> 00:01:52,015
108的Mbps 所以我們可以看得到

24
00:01:52,015 --> 00:01:55,031
這個無線網路本身 從2Mbps開始

25
00:01:55,031 --> 00:02:00,028
然後很快速地有11Mbps 有54Mbps 有100Mbps

26
00:02:00,028 --> 00:02:03,048
這種無線網路推出來 事實上最新的技術

27
00:02:03,048 --> 00:02:07,025
已經可以做到Gb的wireless net

28
00:02:07,025 --> 00:02:10,061
只是還沒有完全普及到市場上面來

29
00:02:10,061 --> 00:02:11,085
就是他用無線通訊

30
00:02:11,085 --> 00:02:15,045
可是呢他的速度可以到Gb這種的速度

31
00:02:15,045 --> 00:02:18,055
那只是在實驗室這些都已經做出來

32
00:02:18,055 --> 00:02:22,058
那少量的商品也有 但是還沒有大量的到市場上面來

33
00:02:22,058 --> 00:02:26,008
那接下來我們來介紹說 在無線通訊裡面

34
00:02:26,008 --> 00:02:29,048
有兩個非常重要的這個特性啦

35
00:02:29,048 --> 00:02:34,068
第一個我們叫hidden node 或者簡稱叫hidden terminal的問題

36
00:02:34,068 --> 00:02:37,005
什麼叫hidden node呢 就是說

37
00:02:37,005 --> 00:02:41,065
我們假設我們這個圖上面 顯示的就是我們說假設呢

38
00:02:41,065 --> 00:02:47,021
每一個station他傳出去的這個範圍呢

39
00:02:47,021 --> 00:02:49,015
都是一個 我們講一個圓形啦

40
00:02:49,015 --> 00:02:54,068
就像這個a 他的範圍就相當於這個就是a傳輸的這個有效的範圍

41
00:02:54,068 --> 00:02:58,055
那這個是c 傳輸的有效範圍

42
00:02:58,055 --> 00:03:01,011
也就是說在這個範圍之內

43
00:03:01,011 --> 00:03:04,028
你都可以聽得到這個訊號的意思

44
00:03:04,028 --> 00:03:07,095
那這個範圍之外 因為訊號就太弱了嘛 就聽不到

45
00:03:07,095 --> 00:03:10,065
所以一般每一個station 或者一個基地台

46
00:03:10,065 --> 00:03:13,048
他所涵蓋的範圍的意思啦

47
00:03:13,048 --> 00:03:16,085
那我們介紹什麼叫做hidden terminal的問題

48
00:03:16,085 --> 00:03:18,078
我們用這個例子 就是說我們假設呢

49
00:03:18,078 --> 00:03:23,065
我們有四個這個無線這個node 叫做ABCD

50
00:03:24,061 --> 00:03:28,005
那我們這個ABCD呢剛好是這樣的擺法

51
00:03:28,005 --> 00:03:33,091
就是說 每一個node呢 他都可以聽到左邊跟右邊

52
00:03:33,091 --> 00:03:38,038
的這個所謂的訊號 那太遠了就聽不到

53
00:03:38,038 --> 00:03:40,001
像這個例子就是說 我們假設呢

54
00:03:40,001 --> 00:03:45,038
C他就可以送給B B跟D都聽得到C嘛

55
00:03:45,038 --> 00:03:47,045
就是說每一個node送出去呢

56
00:03:47,045 --> 00:03:52,048
剛好可以cover他的左邊跟右邊的相鄰的這個node

57
00:03:52,048 --> 00:03:56,028
那這樣的一個環境之下 我們來看看說

58
00:03:56,028 --> 00:04:00,021
我們什麼叫做 什麼叫做hidden node的問題

59
00:04:00,021 --> 00:04:03,041
好 我們來再看一次 就是說

60
00:04:03,041 --> 00:04:06,038
像這個例子就是說 對B來講的話

61
00:04:06,038 --> 00:04:09,088
B來講本身 他可以跟A

62
00:04:09,088 --> 00:04:14,098
因為他們可以互相溝通嘛 也可以跟C互相溝通

63
00:04:14,098 --> 00:04:18,035
但是A跟C呢是不行的

64
00:04:18,035 --> 00:04:24,055
就是A跟C是互相在對方的涵蓋範圍之外

65
00:04:24,055 --> 00:04:28,018
所以我們可以看 A送出去的這個範圍呢

66
00:04:28,018 --> 00:04:32,011
沒有辦法涵蓋到C 那C送出去的這個範圍呢

67
00:04:32,011 --> 00:04:37,008
也沒有辦法涵蓋到A 事實上A跟C 注意到

68
00:04:37,008 --> 00:04:41,031
就是A在這個地方 跟C

69
00:04:42,021 --> 00:04:44,021
他們所傳輸的這個範圍呢

70
00:04:44,021 --> 00:04:48,028
都沒有涵蓋對方 所以我們說他們呢

71
00:04:48,028 --> 00:04:52,045
是叫做hidden node 互相隱藏的意思

72
00:04:52,045 --> 00:04:57,041
就是A的訊號到不了C C的訊號到不了A

73
00:04:57,041 --> 00:05:02,005
就互相聽不到對方 這個叫做hidden node

74
00:05:02,005 --> 00:05:04,005
就是互相聽不到對方

75
00:05:04,005 --> 00:05:08,021
那hidden node到底有什麼樣的問題呢

76
00:05:08,021 --> 00:05:11,035
就是說 我們剛剛看那個例子就是說

77
00:05:11,035 --> 00:05:16,081
假設A跟C呢 他們都想

78
00:05:16,081 --> 00:05:21,008
我們講 A跟C 他都想要跟B溝通

79
00:05:21,008 --> 00:05:25,001
也就是說他們都送一個封包給B

80
00:05:25,001 --> 00:05:28,008
就是A跟C都送一個封包給B

81
00:05:28,008 --> 00:05:33,038
那因為A跟C呢並不知道對方的存在

82
00:05:33,038 --> 00:05:36,075
我們講A跟C不知道對方的存在就是因為

83
00:05:36,075 --> 00:05:40,098
A的訊號C收不到 C的訊號A也收不到

84
00:05:40,098 --> 00:05:44,005
所以他並不知道對方的存在

85
00:05:44,005 --> 00:05:48,075
所以他們兩個都同時送給A的時候 送給B的時候呢

86
00:05:48,075 --> 00:05:52,031
這個封包反而會在B呢collision

87
00:05:52,031 --> 00:05:55,065
所以這個所謂的hidden node的問題

88
00:05:55,065 --> 00:06:00,098
就是說 A跟C他們互相稱為hidden node

89
00:06:00,098 --> 00:06:05,085
因為互相聽不到對方的訊號 叫做hidden node

90
00:06:05,085 --> 00:06:09,005
就是A聽不到C C也聽不到A

91
00:06:09,005 --> 00:06:13,001
可是呢當A跟C同時傳送給中間的B

92
00:06:13,001 --> 00:06:14,081
他會造成collision

93
00:06:14,081 --> 00:06:17,021
這個叫做hidden node的problem 我們來看一下

94
00:06:17,021 --> 00:06:18,091
就是說剛剛那個例子

95
00:06:18,091 --> 00:06:21,058
我們 什麼叫做hidden node的problem

96
00:06:21,058 --> 00:06:23,058
就是 就是說假設

97
00:06:25,041 --> 00:06:31,008
我們說 下面這句話 雙方雖然聽不到對方的訊號

98
00:06:31,008 --> 00:06:33,055
就是A跟C啦 我們這個例子裡面

99
00:06:33,055 --> 00:06:35,048
A跟C都聽不到對方

100
00:06:35,048 --> 00:06:37,081
因為都在對方的涵蓋範圍之外

101
00:06:38,068 --> 00:06:47,075
但是如果他們同時傳送給相同的對象 會造成collision

102
00:06:47,075 --> 00:06:52,048
就是以這個例子 A送給B C送給B

103
00:06:52,048 --> 00:06:56,005
注意到 B在A的涵蓋範圍之內

104
00:06:56,005 --> 00:06:59,011
B也在C的涵蓋範圍之內

105
00:06:59,011 --> 00:07:04,008
但是AC呢 互相在對方的涵蓋範圍之外

106
00:07:04,008 --> 00:07:07,048
就是AC互相聽不到對方的訊號

107
00:07:07,048 --> 00:07:09,018
但是如果AC送給B

108
00:07:09,018 --> 00:07:13,005
這個會封包會在B的地方造成collision

109
00:07:13,005 --> 00:07:14,031
我們看一個動畫

110
00:07:14,031 --> 00:07:20,048
就是說當A跟C 他們同時傳送

111
00:07:20,048 --> 00:07:23,071
其實A跟C他們彼此聽不到對方 但是呢

112
00:07:23,071 --> 00:07:25,098
他們同時傳送的時候呢

113
00:07:25,098 --> 00:07:29,005
這個封包到了假設同時送給B

114
00:07:29,005 --> 00:07:33,045
在B會造成collision 這是因為說對任何一個工作站

115
00:07:33,045 --> 00:07:38,081
像B來講的話 它接收呢 就是一個頻道來接收

116
00:07:38,081 --> 00:07:43,031
所以如果A送給他 C也送給他

117
00:07:43,031 --> 00:07:46,045
同時這兩個封包進到這個B的時候呢

118
00:07:46,045 --> 00:07:47,091
他就造成collision了

119
00:07:47,091 --> 00:07:51,025
就是A送給B跟 C送給B的

120
00:07:51,025 --> 00:07:54,088
他同時到的時候呢 他會造成衝撞

121
00:07:54,088 --> 00:07:56,068
這個衝撞呢 這個collision呢

122
00:07:56,068 --> 00:08:00,035
就是這個封包會無效 啊但是呢

123
00:08:00,035 --> 00:08:04,068
A聽不到C C也聽不到A

124
00:08:04,068 --> 00:08:07,085
所以我們注意到 這個現象發生的時候

125
00:08:07,085 --> 00:08:10,028
有一個特別的地方就是說 A送出去

126
00:08:10,028 --> 00:08:15,001
其實B收到的是collision的 可是注意一下

127
00:08:15,001 --> 00:08:17,098
A不知道 就是A送給B

128
00:08:17,098 --> 00:08:20,001
但是A不知道有發生collision啊

129
00:08:20,001 --> 00:08:22,025
因為collision是在B的地方發生collision

130
00:08:22,025 --> 00:08:24,088
而且A因為聽不到C的訊號嘛

131
00:08:24,088 --> 00:08:26,015
所以A送出去的時候

132
00:08:26,015 --> 00:08:27,088
他並不知道C也在送啊

133
00:08:27,088 --> 00:08:30,085
因為C的訊號呢到不了A

134
00:08:30,085 --> 00:08:35,051
所以A送的時候他不知道C也在送 同樣的

135
00:08:35,051 --> 00:08:39,078
C在送的時候呢 他也不知道A正在送 送給B啦

136
00:08:39,078 --> 00:08:41,061
所以彼此都不知道

137
00:08:41,061 --> 00:08:43,098
這個封包呢其實發生了collision

138
00:08:43,098 --> 00:08:46,055
就是說 A把封包丟出去

139
00:08:46,055 --> 00:08:48,058
結果發生collision 但是A不知道

140
00:08:48,058 --> 00:08:51,021
好 那C把封包丟出去

141
00:08:51,021 --> 00:08:53,061
其實也發生collision 可是C也不知道

142
00:08:53,061 --> 00:08:55,025
那 那這怎麼辦

143
00:08:55,025 --> 00:08:56,078
就是我把一個封包丟出去

144
00:08:56,078 --> 00:08:59,015
結果發生collision了 但是我不知道

145
00:08:59,015 --> 00:09:03,008
那我到底要不要算這個封包成功還是算失敗

146
00:09:03,008 --> 00:09:07,068
我們說 在ethernet裡面 我封包丟出去

147
00:09:07,068 --> 00:09:11,071
我們說他還要叫做collision detection啊 對不對

148
00:09:11,071 --> 00:09:13,095
我們在ethernet裡面 CSMA/CD

149
00:09:13,095 --> 00:09:18,011
我們把一個封包丟出去呢 一邊丟還要一邊聽

150
00:09:18,011 --> 00:09:23,028
我們說要聽多久 要聽一個叫做collision window的時間

151
00:09:23,028 --> 00:09:27,035
目的就是要聽聽看 這個封包有沒有發生collision

152
00:09:27,035 --> 00:09:32,081
如果發生collision 我們會把它送一個jam 把他停掉

153
00:09:32,081 --> 00:09:38,015
這是因為 在ethernet裡面 他是有線的網路

154
00:09:38,015 --> 00:09:43,031
他有能力偵測collision 因為collision的訊號一定會回來

155
00:09:43,031 --> 00:09:47,098
那我們注意到 現在這個hidden node的問題

156
00:09:47,098 --> 00:09:51,091
使得說 我們根本沒有辦法偵測collision

157
00:09:51,091 --> 00:09:54,068
像這個例子 A跟C

158
00:09:54,068 --> 00:09:57,071
他們都把封包成功的送出去了

159
00:09:57,071 --> 00:10:01,021
在B的地方發生collision 可是A跟C都不知道

160
00:10:01,021 --> 00:10:04,085
也就是說 在802.11這個wifi裡面

161
00:10:04,085 --> 00:10:08,015
跟ethernet的有線跟無線

162
00:10:08,015 --> 00:10:12,098
最大的差別之一 就是在無線網路裡面

163
00:10:12,098 --> 00:10:16,038
我們沒有辦法偵測collision

164
00:10:16,038 --> 00:10:22,018
就是802.11沒有support collision detection的方法

165
00:10:22,018 --> 00:10:26,018
就我們封包丟出去呢 到底成功失敗 我們都不知道

166
00:10:26,018 --> 00:10:30,005
那這個是很詭異的環境啊 就是你有collision你也不知道

167
00:10:30,005 --> 00:10:32,085
那我怎麼知道這個封包到底是對還是錯

168
00:10:32,085 --> 00:10:37,018
那我們又希望把封包成功丟出去 可是我成功丟出去

169
00:10:37,018 --> 00:10:41,061
對方發生collision我又不知道 這個很麻煩

170
00:10:41,061 --> 00:10:45,021
所以我們要在這種特殊的環境之下

171
00:10:45,021 --> 00:10:48,065
我們會設計新的方法 來知道說

172
00:10:48,065 --> 00:10:53,001
讓我的封包丟出去呢 到底對方有沒有成功收到

173
00:10:53,001 --> 00:10:57,001
就是 發生collision 但是我們不知道

174
00:10:57,001 --> 00:10:59,015
就是因為有hidden terminal的問題

175
00:10:59,015 --> 00:11:03,095
使得說 在無線網路之下 即使發生了collision

176
00:11:03,095 --> 00:11:06,031
傳送的人也不知道

177
00:11:06,031 --> 00:11:11,015
所以802.11就沒有collision detection的機制

178
00:11:11,015 --> 00:11:14,061
那沒有關係 雖然沒有辦法偵測collision

179
00:11:14,061 --> 00:11:17,055
我們就用另外的方法來解決說

180
00:11:17,055 --> 00:11:20,038
那我怎麼知道這個封包到底送對了沒有

181
00:11:20,038 --> 00:11:24,098
這是第一個問題 叫做hidden node的problem

182
00:11:24,098 --> 00:11:27,085
那802.11這個無線網路呢

183
00:11:27,085 --> 00:11:29,041
還有另外一個也很有趣的問題

184
00:11:29,041 --> 00:11:32,018
我們叫做exposed node problem

185
00:11:32,018 --> 00:11:35,035
剛剛提到的hidden node 就是說我有一個隱藏的

186
00:11:35,035 --> 00:11:39,011
我聽不到對方 可是對方可能會干擾我的傳輸

187
00:11:39,011 --> 00:11:41,068
啊另外一個就是說 好 exposed就是說

188
00:11:41,068 --> 00:11:46,081
那我們假設剛剛的那個例子裡面 我們說 假設

189
00:11:46,081 --> 00:11:53,025
我們說假設呢B呢要送給A 我們注意到

190
00:11:53,025 --> 00:11:56,065
剛剛那個例子是說B是在A跟C中間

191
00:11:56,065 --> 00:12:00,028
B要送給A其實C是聽得到的 就是說

192
00:12:00,028 --> 00:12:05,078
因為A跟C都在B的覆蓋範圍之內嘛

193
00:12:05,078 --> 00:12:10,018
所以B送給A的時候 其實C 我們講C是知道的

194
00:12:10,018 --> 00:12:13,081
C是知道的 他知道這個communication的

195
00:12:13,081 --> 00:12:18,028
那我們一般會誤認為說 那B送給A

196
00:12:18,028 --> 00:12:22,095
可是我C又聽得到 那我C是不是就不能送了

197
00:12:22,095 --> 00:12:26,015
我們叫所謂的exposed的node就是說

198
00:12:26,015 --> 00:12:30,078
B跟C他們是聽得到對方的訊號

199
00:12:30,078 --> 00:12:35,015
聽得到對方的訊號 是不是這兩個就不能同時送

200
00:12:35,015 --> 00:12:37,095
一般我們會有一種誤解就是說

201
00:12:37,095 --> 00:12:41,088
B跟C互相聽得到對方的訊號

202
00:12:41,088 --> 00:12:46,031
所以如果他們兩個同時送 這個封包就一定collision

203
00:12:46,031 --> 00:12:50,048
同時送就一定collision 這句話對嗎？

204
00:12:50,048 --> 00:12:53,058
我們說這是一個誤解 事實上不是這樣子啦

205
00:12:53,058 --> 00:12:57,011
那這個叫做所謂的exposed node problem

206
00:12:57,011 --> 00:12:59,098
他的整個意思就是這樣子 就是說

207
00:12:59,098 --> 00:13:05,091
我們簡單的看一下 雙方雖然聽的對方的訊號

208
00:13:05,091 --> 00:13:07,058
像這個例子裡面

209
00:13:07,058 --> 00:13:12,001
就B跟C他們都在互相的涵蓋範圍之內

210
00:13:12,001 --> 00:13:15,028
就B會聽得到C的 C也會聽得到B的

211
00:13:15,028 --> 00:13:19,005
雙方雖然聽得到對方的訊號

212
00:13:19,005 --> 00:13:25,018
但是他們可以同時送給不同的對象

213
00:13:25,018 --> 00:13:29,095
沒有發生collision 也就是說 我們看下面的動畫

214
00:13:29,095 --> 00:13:37,028
也就是說假設B送給A 然後C送給D

215
00:13:37,028 --> 00:13:39,045
所以我們注意到這個動畫裡面

216
00:13:39,045 --> 00:13:42,048
B跟C就是這個圈圈是同時在擴散

217
00:13:42,048 --> 00:13:46,015
就B丟給A C丟給D

218
00:13:46,015 --> 00:13:52,095
雖然B跟C他們的訊號 好像互相會攪在一起

219
00:13:52,095 --> 00:13:57,088
但是B送給A會成功 C送給D也會成功

220
00:13:57,088 --> 00:14:02,071
這是沒有collision的 所以這個叫做exposed node就是說

221
00:14:02,071 --> 00:14:08,081
雖然B跟C可以互相聽到對方的訊號 可是呢

222
00:14:08,081 --> 00:14:11,081
B送給A C送給D

223
00:14:11,081 --> 00:14:15,085
這個同時送出去呢 這個是會成功的

224
00:14:15,085 --> 00:14:18,015
我們一般會有一個誤解說

225
00:14:18,015 --> 00:14:22,045
假設B跟C可以互相聽得到對方的訊號

226
00:14:22,045 --> 00:14:26,085
所以BC同時送就會發生collision

227
00:14:26,085 --> 00:14:30,005
就會發生collision 這個就是不對的

228
00:14:30,005 --> 00:14:32,085
就是因為我們在通訊上面呢

229
00:14:32,085 --> 00:14:35,095
因為我們剛剛提到像我們有展頻的技術嘛

230
00:14:35,095 --> 00:14:41,001
就是B跟C 當他同時送的時候 雖然有的訊號會疊在一起

231
00:14:41,001 --> 00:14:44,088
可是因為我們用展頻的技術 可以讓他錯開來

232
00:14:44,088 --> 00:14:49,008
即使有一部分訊號懷掉 我還是可以把它補教回來

233
00:14:49,008 --> 00:14:54,091
使得說 B跟C雖然在互相可以聽得到對方

234
00:14:54,091 --> 00:15:02,041
但是B跟C讓他送給不同的對象的時候 他是可以同時傳送

235
00:15:02,041 --> 00:15:04,021
而且沒有collision

236
00:15:04,021 --> 00:15:09,028
所以我們後面在講這個802.11的protocol裡面呢

237
00:15:09,028 --> 00:15:12,058
這兩個就是說 我們剛剛講hidden node的問題

238
00:15:12,058 --> 00:15:15,018
跟exposed node的問題

239
00:15:15,018 --> 00:15:17,088
因為這是兩個非常重要的特性

240
00:15:17,088 --> 00:15:20,051
在無線傳輸的時候呢很重要的特性

241
00:15:20,051 --> 00:15:24,008
那我們要把這兩個特性呢 好好的利用他

242
00:15:24,008 --> 00:15:27,081
來設計我們這個802.11的protocol

243
00:15:27,081 --> 00:15:31,045
就是說我們叫做 CSMA/CA

244
00:15:31,045 --> 00:15:35,048
也就是說 我們在802.11的標準裡面呢

245
00:15:35,048 --> 00:15:38,025
我們怎麼處理這兩個問題呢

246
00:15:38,025 --> 00:15:40,028
就剛剛提到的這兩個問題

247
00:15:40,028 --> 00:15:43,061
就是說我們有hidden node的問題

248
00:15:43,061 --> 00:15:47,028
那我們有所謂的exposed node的問題

249
00:15:47,028 --> 00:15:53,001
我們的做法呢 就是針對802.11呢設計一個演算法

250
00:15:53,001 --> 00:15:55,081
就叫carrier sense multiple access

251
00:15:55,081 --> 00:15:58,048
with collision avoidance

252
00:15:58,048 --> 00:16:03,018
我們叫做CSMA/CA collision avoidance

253
00:16:03,018 --> 00:16:08,011
就是我們盡量想設計一個方法呢來避免發生collision

254
00:16:08,011 --> 00:16:11,008
為什麼我們不叫做collision detection

255
00:16:11,008 --> 00:16:14,058
我們因為 我們根本做不到

256
00:16:14,058 --> 00:16:18,025
也就是說在無線網路802.11這種環境之下

257
00:16:18,025 --> 00:16:22,055
無線網路的環境之下 我們做不到collision detection

258
00:16:22,055 --> 00:16:26,088
collision我們沒有辦法偵測 那我們就迂迴一下嘛

259
00:16:26,088 --> 00:16:29,075
我既然不能偵測collision 那我至少設計一個方法

260
00:16:29,075 --> 00:16:33,028
盡量來避免collision 那但是我們還是強調

261
00:16:33,028 --> 00:16:36,095
雖然我們這個方法叫做collision avoidance

262
00:16:36,095 --> 00:16:41,088
避免collision 但是呢這個避免呢是沒有辦法完全避免的

263
00:16:41,088 --> 00:16:45,008
就是他還是有可能會發生collision

264
00:16:45,008 --> 00:16:47,008


