1
00:00:08,055 --> 00:00:13,035
好 接下來我們就來介紹CSMA/CA這個protocol

2
00:00:13,035 --> 00:00:18,095
我們說 這個CSMA/CA的protocol呢 在什麼時候用到呢

3
00:00:18,095 --> 00:00:23,058
我們說 在一個super frame裡面 我們講

4
00:00:23,058 --> 00:00:27,095
一個super frame裡面 前面是所謂的非競爭式的嘛

5
00:00:27,095 --> 00:00:32,045
那這個CSMA/CA主要用在在競爭式的這一塊

6
00:00:32,045 --> 00:00:34,011
就是我們在做contention的時候

7
00:00:34,011 --> 00:00:39,045
就是說在contention period of super frame

8
00:00:39,045 --> 00:00:45,035
如果說 我們有用PCF的時候 就是在競爭式的那一塊

9
00:00:45,035 --> 00:00:47,008
如果本來就沒有PCF的話

10
00:00:47,008 --> 00:00:49,048
那就是在競爭式的這個週期裡面

11
00:00:49,048 --> 00:00:52,065
就會使用這個CSMA/CA的protocol

12
00:00:52,065 --> 00:00:56,035
我們接下來就要來介紹 這個protocol到底怎麼運作呢

13
00:00:56,035 --> 00:00:58,038
我們說 首先

14
00:00:58,038 --> 00:01:02,058
第一個station呢如果他有一個封包要傳送的話

15
00:01:02,058 --> 00:01:09,071
他要去偵測看說現在到底這個我的medium呢 是不是free

16
00:01:09,071 --> 00:01:12,058
我們剛剛提到 我去看的時候呢

17
00:01:12,058 --> 00:01:14,088
有兩個狀況 一個就是free

18
00:01:14,088 --> 00:01:17,008
一個就是busy

19
00:01:17,008 --> 00:01:20,085
那我們即使看到說這個channel是free的

20
00:01:20,085 --> 00:01:23,095
就是是空的 你也不能馬上送

21
00:01:23,095 --> 00:01:27,098
因為如果是空的你就馬上送 就有可能跟人家發生collision

22
00:01:27,098 --> 00:01:32,058
而且你可能會把人家正在等待的時間把它中斷掉

23
00:01:32,058 --> 00:01:35,088
譬如說我們剛剛提到 我送一個封包

24
00:01:35,088 --> 00:01:39,075
一定會等一個ACK  啊這個封包跟ACK中間

25
00:01:39,075 --> 00:01:44,008
我們有定義了一個short的inter frame space嘛

26
00:01:44,008 --> 00:01:48,088
SIFS在這個中間 也就是說 一個封包送完

27
00:01:48,088 --> 00:01:55,055
他要等一個ACK 所以這個時間空檔 是為了讓封包來回嘛

28
00:01:55,055 --> 00:02:00,081
這個中間不可以被人家搶走 也不能被人家干擾啊

29
00:02:00,081 --> 00:02:03,051
你看看 如果送一個封包要等一個ACK

30
00:02:03,051 --> 00:02:07,035
那在這個中間 假設你跑進來要送

31
00:02:07,035 --> 00:02:11,091
結果人家在等這個ACK的時間中間 你跑進來聽

32
00:02:11,091 --> 00:02:13,065
欸 是idle 你就把他送出去

33
00:02:13,065 --> 00:02:15,081
那不就跟人家撞在一起了嘛

34
00:02:15,081 --> 00:02:20,078
也就是說 他又跟一般的這個CSMA/CD不一樣

35
00:02:20,078 --> 00:02:24,058
CSMA/CD 我們說在ethernet裡面 我們來聽聽看

36
00:02:24,058 --> 00:02:27,018
如果你是busy 你當然就等

37
00:02:27,018 --> 00:02:29,081
如果你是idle 就送出去囉

38
00:02:29,081 --> 00:02:32,081
注意到 在CSMA/CD裡面

39
00:02:32,081 --> 00:02:36,065
我們來聽 如果這個是所謂的idle的話

40
00:02:36,065 --> 00:02:40,041
你一定立刻送 但是在802.11裡面不可以

41
00:02:40,041 --> 00:02:44,038
就是我們即使說 聽到這個channel呢是idle

42
00:02:44,038 --> 00:02:48,081
但注意到 這個idle可能是因為他介於我們講

43
00:02:48,081 --> 00:02:52,045
封包跟ACK中間的時間點 這個東西你絕對不能送

44
00:02:52,045 --> 00:02:56,051
你一送就跟人家 干擾到別人正常的這個所謂的來回

45
00:02:56,051 --> 00:03:02,031
好 所以我們說 如果呢你聽到這個medium是free

46
00:03:02,031 --> 00:03:06,011
那你還必須聽一段時間才算數

47
00:03:06,011 --> 00:03:09,065
我們說那你就必須至少要聽一段時間呢

48
00:03:09,065 --> 00:03:15,008
要大於等於一個DIFS的時間 這個很特別

49
00:03:15,008 --> 00:03:19,025
就是說我們即使去聽 我們用physical的這種

50
00:03:19,025 --> 00:03:21,071
所謂的carrier sense去聽這個channel

51
00:03:21,071 --> 00:03:24,075
如果他現在是idle 你也不能送喔

52
00:03:24,075 --> 00:03:28,021
你必須等到這個idle的時間夠長

53
00:03:28,021 --> 00:03:32,001
長到我們叫DIFS的時間

54
00:03:32,001 --> 00:03:36,035
如果你可以聽到這麼長的時間 你原來聽是free

55
00:03:36,035 --> 00:03:38,065
是free的 繼續聽

56
00:03:38,065 --> 00:03:41,051
可以聽到那麼長的時間通通都是free

57
00:03:41,051 --> 00:03:44,068
好 這個時候你就可以送 這是第一個條件

58
00:03:44,068 --> 00:03:46,038
就是說你聽到他是free

59
00:03:46,038 --> 00:03:49,061
但是呢你必須再繼續聽一個DIFS的時間

60
00:03:49,061 --> 00:03:53,018
通通都是free 都沒有人送 你才可以送

61
00:03:53,018 --> 00:03:54,091
這是第一個 那第二個就是說

62
00:03:54,091 --> 00:03:59,028
那你來聽如果是busy啊 如果你現在聽到是busy

63
00:03:59,028 --> 00:04:04,018
代表是說 誒那可能別人現在正在送

64
00:04:04,018 --> 00:04:07,081
那別人正在送的時候呢 你當然就不能送

65
00:04:07,081 --> 00:04:12,041
那你等下等到他結束之後 你還是要繼續聽到一個

66
00:04:12,041 --> 00:04:14,075
一樣 聽到一個DIFS的時間

67
00:04:14,075 --> 00:04:20,085
而且聽完之後 還要再加上一個random back-off time

68
00:04:20,085 --> 00:04:24,018
這樣才行 所以這兩個是很不一樣

69
00:04:24,018 --> 00:04:30,081
第一個是說如果你聽到的是free 你就等一個DIFS的時間

70
00:04:30,081 --> 00:04:34,038
如果你聽到的是busy 就把它聽完

71
00:04:34,038 --> 00:04:37,058
然後呢你必須要等一個DIFS的時間

72
00:04:37,058 --> 00:04:41,071
然後再加上 一個random back-off的時間

73
00:04:41,071 --> 00:04:44,041
所以這是非常不一樣的地方

74
00:04:44,041 --> 00:04:46,015
我們等下用例子來解釋

75
00:04:46,015 --> 00:04:48,075
我們來看一下 在這個例子裡面

76
00:04:48,075 --> 00:04:51,091
我們特別注意到我們的時間點 我們說

77
00:04:51,091 --> 00:04:55,095
假設呢 一開始呢我們就在這個時間進來

78
00:04:56,095 --> 00:05:00,045
就這個紅色的箭頭 我們開始呢來聽

79
00:05:00,045 --> 00:05:06,005
那這個時候我們發現說 誒 這個是剛剛提到的free

80
00:05:06,005 --> 00:05:08,061
因為現在沒有人在送嘛 沒有訊號

81
00:05:08,061 --> 00:05:12,065
那如果你聽到的是free的話 好 那你就必須繼續聽喔

82
00:05:12,065 --> 00:05:16,018
必須聽到一個DIFS的時間

83
00:05:16,018 --> 00:05:18,088
就是我們要聽到這麼長的時間

84
00:05:18,088 --> 00:05:21,085
必須要至少要聽這麼長的時間

85
00:05:21,085 --> 00:05:24,095
然後你就可以開始送封包 特別注意到

86
00:05:24,095 --> 00:05:25,085


87
00:05:25,085 --> 00:05:28,028
就是說你來聽 如果是free

88
00:05:28,028 --> 00:05:33,048
你必須繼續聽一個DIFS的時間

89
00:05:33,048 --> 00:05:37,055
阿這中間都不能有人送 如果有人送 你就退出去

90
00:05:37,055 --> 00:05:41,031
因為你就代表說你的priority不夠

91
00:05:41,031 --> 00:05:43,038
就是你的優先權比人家低啦

92
00:05:43,038 --> 00:05:46,021
你就不能送 假設這個時候呢

93
00:05:46,021 --> 00:05:50,075
我們也可以等到一個DIFS時間都沒有人送

94
00:05:50,075 --> 00:05:52,085
我們就送出一個這個封包

95
00:05:52,085 --> 00:05:55,028
那我們正在送這個封包的過程當中

96
00:05:55,028 --> 00:05:57,038
因為你已經在送這個封包了嘛

97
00:05:57,038 --> 00:06:01,005
那可能有別的node在你送封包的過程當中

98
00:06:01,005 --> 00:06:03,048
他又想要送 所以我們下面這邊

99
00:06:03,048 --> 00:06:08,008
譬如說這裡呢 有一個兩個三個

100
00:06:08,008 --> 00:06:11,048
就我們有三個其他的這個node呢

101
00:06:11,048 --> 00:06:14,071
在一個封包傳送的過程當中

102
00:06:14,071 --> 00:06:17,051
他們想要送 所以對他們來講

103
00:06:17,051 --> 00:06:20,005
他們來聽呢 就是busy

104
00:06:20,005 --> 00:06:23,028
就對這三個來講 他們來聽的時候呢

105
00:06:23,028 --> 00:06:26,068
因為有封包正在送 所以對他們來說

106
00:06:26,068 --> 00:06:30,021
他們看到的是busy的 那注意到

107
00:06:30,021 --> 00:06:32,001
我們剛剛提到 有兩個狀況

108
00:06:32,001 --> 00:06:37,005
一個是如果你來聽是free 你就等一個這麼長的時間

109
00:06:37,005 --> 00:06:40,021
等這麼長的時間你就可以送 等得到的話

110
00:06:40,021 --> 00:06:43,005
如果你是busy呢 你就必須 一樣

111
00:06:43,005 --> 00:06:46,091
讓 繼續聽 把這個busy的聽完

112
00:06:46,091 --> 00:06:50,008
聽完之後呢一樣要等一個DIFS的時間

113
00:06:50,008 --> 00:06:54,015
但是呢 等到一個DIFS的時間之後呢

114
00:06:54,015 --> 00:06:56,055
注意到這個地方

115
00:06:56,055 --> 00:07:00,025
你還必須加上一個random back-off

116
00:07:00,025 --> 00:07:02,025
所以這三個station呢

117
00:07:02,025 --> 00:07:05,091
他們就各自去算一個back-off的時間

118
00:07:05,091 --> 00:07:10,045
各自去算 因為我們說 這三個封包要送的時候

119
00:07:10,045 --> 00:07:13,098
這三個他們的狀況都不一樣啊 有人可能是第一次送

120
00:07:13,098 --> 00:07:16,098
有的人可能是第二次送 重送

121
00:07:16,098 --> 00:07:18,061
有的人可能是第三次重送啦

122
00:07:18,061 --> 00:07:21,011
所以他們去算那個random back-off的時間

123
00:07:21,011 --> 00:07:22,085
可能就各算得不一樣

124
00:07:22,085 --> 00:07:26,025
沒關係反正自己算出一個back-off 這個時間嘛

125
00:07:26,025 --> 00:07:30,031
然後在時間到了之後呢 你才能開始送

126
00:07:30,031 --> 00:07:32,035
就是大家算出一個back-off time

127
00:07:32,035 --> 00:07:36,028
所以說不定有人會在比較早的時間傳輸啦

128
00:07:36,028 --> 00:07:40,011
那有的呢就會 譬如有人在這裡送 有人在這裡送

129
00:07:40,011 --> 00:07:42,071
算出來的時間 算出不同的時間

130
00:07:42,071 --> 00:07:45,011
那最短的時間他就先送了

131
00:07:45,011 --> 00:07:48,028
那先送的 那你這個其他的代表是說

132
00:07:48,028 --> 00:07:50,005
你本來有一個random back-off time啊

133
00:07:50,005 --> 00:07:52,008
我們剛剛特別強調

134
00:07:52,008 --> 00:07:54,028
你算出來的random back-off time

135
00:07:54,028 --> 00:07:56,038
代表說你必須等那麼多的時間

136
00:07:56,038 --> 00:07:59,095
那中間如果有人送了 就代表有人比你更早送

137
00:07:59,095 --> 00:08:06,008
那你的這個back-off time 這個時間就要暫停

138
00:08:06,008 --> 00:08:08,075
等到他送完之後 等下再繼續嘛

139
00:08:08,075 --> 00:08:11,015
我們等下會有一個例子 來解釋說

140
00:08:11,015 --> 00:08:13,095
到底這個random back-off time呢

141
00:08:13,095 --> 00:08:19,001
怎麼樣算出來 然後怎麼樣把他所謂的倒數計時

142
00:08:19,001 --> 00:08:21,008
讓他變成0 好那我們說

143
00:08:21,008 --> 00:08:24,025
在這個random back-off time的過程當中

144
00:08:24,025 --> 00:08:28,065
這個就叫做所謂的contention window 因為這段期間呢

145
00:08:28,065 --> 00:08:32,098
是大家在競爭啦 那我們剛也特別強調說

146
00:08:32,098 --> 00:08:39,041
如果說我們在 要送封包的時候呢

147
00:08:39,041 --> 00:08:42,065
聽到說這個channel是busy

148
00:08:42,065 --> 00:08:45,068
busy要把他送完 讓他送完

149
00:08:45,068 --> 00:08:48,085
送完之後我們說我們一定還要再等一個時間喔

150
00:08:48,085 --> 00:08:52,068
等到一個DIFS 為什麼要等 因為我們剛有提到說

151
00:08:52,068 --> 00:08:56,038
那萬一我們看到這個所謂的 這個busy封包呢

152
00:08:56,038 --> 00:08:58,035
他是一個正常的data

153
00:08:58,035 --> 00:09:01,035
那我們說啊 那你送data一定回ACK啊

154
00:09:01,035 --> 00:09:03,008
好 ACK在哪裡出現

155
00:09:03,008 --> 00:09:05,068
我們看 注意到 ACK會在這裡出來

156
00:09:05,068 --> 00:09:10,038
這裡 ACK會在這裡出來 也就是說紅色的這一塊

157
00:09:10,038 --> 00:09:15,005
也就是如果前面這個是一個data 他後面就會帶這個ACK

158
00:09:15,005 --> 00:09:19,078
那我們說 data跟ACK呢 他中間的時間間隔只有short

159
00:09:19,078 --> 00:09:25,028
就是SIFS 如果說這個時候真的是一個data後面帶一個ACK

160
00:09:25,028 --> 00:09:30,058
那你就等不到這個所謂的 我們講一個DIFS時間

161
00:09:30,058 --> 00:09:35,001
本來要等那麼長的時間嘛 可是你在等這個時間過程當中

162
00:09:35,001 --> 00:09:37,095
你就發現 欸怎麼有一個封包已經在這個時間點跑出來了

163
00:09:37,095 --> 00:09:39,075
因為他是一個ACK

164
00:09:39,075 --> 00:09:42,075
啊ACK本來就比我們的優先還更快更高啊

165
00:09:42,075 --> 00:09:45,048
他一定先送的 那這個時候代表說

166
00:09:45,048 --> 00:09:47,098
誒 你就要等這個ACK送完

167
00:09:47,098 --> 00:09:51,045
等ACK送完 就相當於你剛剛 你在等這個嘛

168
00:09:51,045 --> 00:09:55,018
你必須讓這個ACK送完 然後送完之後

169
00:09:55,018 --> 00:09:58,048
然後你再來一樣 再等一個DIFS

170
00:09:58,048 --> 00:10:01,065
試著再想辦法等下一個DIFS

171
00:10:01,065 --> 00:10:04,048
好那你等到之後呢 再random back-off

172
00:10:04,048 --> 00:10:06,001
一樣  再random back-off一次

173
00:10:06,001 --> 00:10:07,088
也就是說 我們希望

174
00:10:07,088 --> 00:10:11,031
如果你看到的這個channel是busy的話

175
00:10:11,031 --> 00:10:13,008
讓這個busy結束之後呢

176
00:10:13,008 --> 00:10:19,018
你必須等到一個DIFS才能進到這個所謂的back-off

177
00:10:19,018 --> 00:10:24,005
如果你沒有等到一個DIFS的時間 就有封包出來了

178
00:10:24,005 --> 00:10:27,098
代表他的priority比你高 等他送完之後

179
00:10:27,098 --> 00:10:31,041
一樣 你再進入到這個DIFS的時間

180
00:10:31,041 --> 00:10:34,095
好 那如果說我們可以等到這個時間

181
00:10:34,095 --> 00:10:37,058
就等到最後面這個back-off time

182
00:10:37,058 --> 00:10:40,035
假設 我們的back-off time比較長 是這麼長

183
00:10:40,035 --> 00:10:42,011
然後中間呢也都沒有人送

184
00:10:42,011 --> 00:10:45,088
我們知道這中間如果有其他node先送了

185
00:10:45,088 --> 00:10:48,055
代表他的back-off time比你短 那他就先送

186
00:10:48,055 --> 00:10:50,091
送了之後你就不能送了 你要等下一次的時間

187
00:10:50,091 --> 00:10:53,048
好 如果可以等到這麼長的時間都沒有人送

188
00:10:53,048 --> 00:10:55,071
那這個才是你的封包

189
00:10:55,071 --> 00:11:00,051
你的封包真的要送的話 是稍微比較複雜一點點

190
00:11:00,051 --> 00:11:03,025
所以我們再整個review一次 就是說

191
00:11:03,025 --> 00:11:06,098
假設呢 這個是你 你在這個地方進來

192
00:11:06,098 --> 00:11:11,088
然後你在這個地方聽到結束了 然後等一個時間

193
00:11:11,088 --> 00:11:14,095
產生一個random back-off的時間

194
00:11:14,095 --> 00:11:16,098
這個時間是這麼長的時間

195
00:11:16,098 --> 00:11:19,025
都沒有人跟你干擾 都是free的

196
00:11:19,025 --> 00:11:21,091
這個時候你才可以送這個data

197
00:11:21,091 --> 00:11:25,005
所以這個data是他的 是他的

198
00:11:25,005 --> 00:11:30,071
所以從他要進來送 聽到是busy 然後把這個busy呢

199
00:11:30,071 --> 00:11:36,071
把它聽完 等一個DIFS的時間 等這個時間結束之後

200
00:11:36,071 --> 00:11:40,055
他就會產生一個random back-off 這個back-off呢一樣

201
00:11:40,055 --> 00:11:44,028
要退 退退退退到這個時間點 中間都沒有人送喔

202
00:11:44,028 --> 00:11:48,041
這個時候你才可以送你的data 那中間只要出現

203
00:11:48,041 --> 00:11:51,005
在這個地方有出現 在這個地方有出現

204
00:11:51,005 --> 00:11:56,011
或在這個中間任何時間都有出現別人的封包 那你就失敗

205
00:11:56,011 --> 00:11:59,038
你就失敗 所以這個方法也非常簡單

206
00:11:59,038 --> 00:12:00,091
好 那我們接下來就來看說

207
00:12:00,091 --> 00:12:02,088
那我們到底怎麼back-off呢 怎麼退後

208
00:12:02,088 --> 00:12:05,085
這個退後的時間 退後的這個方式呢

209
00:12:05,085 --> 00:12:07,031
到底怎麼來計算呢

210
00:12:07,031 --> 00:12:10,071
我們說 首先 我們需要算一個back-off time

211
00:12:10,071 --> 00:12:12,031
我們先選一個back-off time

212
00:12:12,031 --> 00:12:14,098
那這個back-off time的algorithm我們之前有介紹過

213
00:12:14,098 --> 00:12:17,065
就是我先根據 會根據我們

214
00:12:17,065 --> 00:12:22,085
你這個封包本身已經是第一次送還是呢 第一次重送

215
00:12:22,085 --> 00:12:24,071
還是第二重送還是第三次重送

216
00:12:24,071 --> 00:12:26,075
就那個contention window的值

217
00:12:26,075 --> 00:12:31,035
跟你這個封包是第一次送還是第幾次重送呢有關係

218
00:12:31,035 --> 00:12:33,088
好 那先有一個這個CW值

219
00:12:33,088 --> 00:12:36,035
然後乘上一個random number 然後乘上一個slow time

220
00:12:36,035 --> 00:12:40,091
就是說我們先把一個back-off time呢 先把它算出來

221
00:12:40,091 --> 00:12:43,078
算出來之後呢 就開始所謂的count down嘛

222
00:12:43,078 --> 00:12:45,058
我們就開始要把它倒數計時

223
00:12:45,058 --> 00:12:48,098
在這個back-off time的時間變成0的時候

224
00:12:48,098 --> 00:12:53,051
如果可以變成0的話 你就可以才可以送下一個封包

225
00:12:53,051 --> 00:12:59,008
可是你在做倒數計時的時候 因為中間可能有人比你更早送

226
00:12:59,008 --> 00:13:04,021
就是說這個時候呢 你在倒數計時的時間內呢

227
00:13:04,021 --> 00:13:08,005
這個channel必須是free  就是這個必須淨空

228
00:13:08,005 --> 00:13:13,021
淨空的情況之下你才可倒數計時 那如果中間已經有人送了

229
00:13:13,021 --> 00:13:17,075
代表說你在倒數計時的過程當中 有人送封包了

230
00:13:17,075 --> 00:13:20,058
代表這個channel呢 已經變busy了

231
00:13:20,058 --> 00:13:24,058
那你有人在送的時候呢 你的倒數計時這個動作呢

232
00:13:24,058 --> 00:13:29,068
我們說 就要被暫停啦 我們叫做所謂的frozen

233
00:13:29,068 --> 00:13:33,005
就是說在倒數計時的過程當中

234
00:13:33,005 --> 00:13:36,048
如果這個medium呢已經變成busy

235
00:13:36,048 --> 00:13:39,041
就是有人在送了 好 那這個時候呢

236
00:13:39,041 --> 00:13:42,031
你就必須暫時倒數計時

237
00:13:42,031 --> 00:13:45,015
那什麼時候才可以再倒數計時呢

238
00:13:45,015 --> 00:13:48,065
就是說 如果下次呢有看到

239
00:13:48,065 --> 00:13:51,098
看到這個因為有人在送他總會送完

240
00:13:51,098 --> 00:13:55,038
送完之後呢 你又必須等 等什麼呢

241
00:13:55,038 --> 00:14:01,075
等這個free的時間呢 大過DIFS的時候呢

242
00:14:01,075 --> 00:14:06,028
你才可以再 再啟動這個倒數計時

243
00:14:06,028 --> 00:14:09,075
簡單那麼講 譬如說 我們本來倒數這個

244
00:14:09,075 --> 00:14:11,021
假設我們的back-off time是這麼長

245
00:14:11,021 --> 00:14:12,078
我們本來要等那麼長的時間

246
00:14:12,078 --> 00:14:17,001
這麼長的時間都是要等的 在中間呢有人送一個封包

247
00:14:17,001 --> 00:14:20,088
那我們說有送封包就要回封包 因為送封包回ACK

248
00:14:20,088 --> 00:14:25,088
送封包回ACK 那送封包回ACK 中間會有一個短短的時間

249
00:14:25,088 --> 00:14:29,061
封包跟ACK中間有一個short的這個時間

250
00:14:29,061 --> 00:14:34,011
阿這個short的時間呢 都還算是busy

251
00:14:34,011 --> 00:14:36,011
這個時候都不能夠啟動倒數計時

252
00:14:36,011 --> 00:14:39,085
就是說你倒數計時要重新再開始的話

253
00:14:39,085 --> 00:14:43,005
一定要聽到一個這個busy呢

254
00:14:43,005 --> 00:14:48,061
這個busy的時間呢是大於一個DIFS呢 才可以再倒數計時

255
00:14:48,061 --> 00:14:52,028
那就這樣子就是說 你先算一個back-off time

256
00:14:52,028 --> 00:14:54,078
然後你就開始倒數計時 算到0

257
00:14:54,078 --> 00:14:59,075
可是倒數計時的過程當中 如果發生busy 你就必須暫停

258
00:14:59,075 --> 00:15:01,071
然後如果發生busy呢

259
00:15:01,071 --> 00:15:04,091
這個busy呢要到什麼時候才叫做不busy呢

260
00:15:04,091 --> 00:15:09,035
就是你要看到這個channel呢是空下來

261
00:15:09,035 --> 00:15:15,001
而且空的時間要大於一個DIFS才開始算數

262
00:15:15,001 --> 00:15:17,058
才可以開始倒數計時 我們等下會有例子

263
00:15:17,058 --> 00:15:22,051
好 那 等到這個你的back-off time呢到0的時候

264
00:15:22,051 --> 00:15:28,068
就是倒數計時到0的時候呢 你就可以開始送這個封包了啦

265
00:15:28,068 --> 00:15:31,038
最後最後這樣才可以開始送 好

266
00:15:31,038 --> 00:15:34,098
那我們說這個最後的目的就是希望能夠達到

267
00:15:34,098 --> 00:15:38,038
所謂的first come first service的目的

268
00:15:38,038 --> 00:15:42,071
就是希望盡量以公平的角度來看 盡量以公平的角度呢

269
00:15:42,071 --> 00:15:47,035
讓所想要送的封包呢 大家算出一個back-off time

270
00:15:47,035 --> 00:15:50,071
然後輪流輪流 最後呢大家可以按照順序呢

271
00:15:50,071 --> 00:15:52,058
把這個封包丟出去

272
00:15:52,058 --> 00:15:53,091
好我們看一個例子

273
00:15:53,091 --> 00:15:56,075
在這個例子裡面呢 我們假設

274
00:15:58,001 --> 00:16:03,028
我們假設說 一開始我們有ABCDE

275
00:16:03,028 --> 00:16:05,051
有五個工作站在這個地方

276
00:16:05,051 --> 00:16:09,015
這個五個工作站呢 他們現在呢要送封包

277
00:16:09,015 --> 00:16:13,008
然後我們說 一開始呢A正在送一個封包

278
00:16:13,008 --> 00:16:17,015
A 在最上面 然後在A送封包的過程當中

279
00:16:17,015 --> 00:16:22,068
這個BCD 這三個station呢就在不同的時間點說

280
00:16:22,068 --> 00:16:25,058
欸 我想要送 所以這三個station呢

281
00:16:25,058 --> 00:16:29,051
想要來送呢 他們就會去發現這是busy嘛

282
00:16:29,051 --> 00:16:33,045
所以他們到這個時間點 他們繼續把他聽 聽完

283
00:16:33,045 --> 00:16:36,011
聽到這個時間點 這個時間點

284
00:16:36,011 --> 00:16:40,021
這個時間點到的時候 我們說 你聽到他busy啦

285
00:16:40,021 --> 00:16:44,058
busy要等到他idle 而且idle之後呢 你要等一個

286
00:16:44,058 --> 00:16:47,035
注意到 等一個DIFS的時間喔

287
00:16:47,035 --> 00:16:51,001
假設他現在也等到一個DIFS的時間

288
00:16:51,001 --> 00:16:54,055
而且等到一個DIFS的時間之後

289
00:16:54,055 --> 00:16:56,055
還要產生一個所謂的random back-off

290
00:16:56,055 --> 00:17:03,065
那我們假設 這個BCD他的random back-off呢分別是19µs

291
00:17:03,065 --> 00:17:07,095
一個是10 一個是15 這三個

292
00:17:07,095 --> 00:17:11,055
好 然後他們就在這個時間點

293
00:17:11,055 --> 00:17:17,055
我們講在這個時間點 就因為都等到一個DIFS的空擋啦

294
00:17:17,055 --> 00:17:19,088
然後就開始做所謂的倒數計時

295
00:17:19,088 --> 00:17:23,068
因為一個是10 一個是15 一個是19

296
00:17:23,068 --> 00:17:28,048
所以在這個C 他在等待這個時間之後呢

297
00:17:28,048 --> 00:17:31,028
因為他的時間已經算是

298
00:17:31,028 --> 00:17:34,098
我們講他的back-off time已經倒數到0了啦

299
00:17:34,098 --> 00:17:38,071
所以C呢 就封包就送出去了

300
00:17:38,071 --> 00:17:44,095
好 那對於B跟D來講  B他本來是要等19µs啦

301
00:17:44,095 --> 00:17:50,068
然後D本來要等的是15µs  可是他等到第10的時候呢

302
00:17:50,068 --> 00:17:54,041
就發現 誒封包已經跑出來了 那也就是說這個時候呢

303
00:17:54,041 --> 00:17:58,055
他們就倒數計時就暫停 好 暫停了

304
00:17:58,055 --> 00:18:02,035
那暫停就發現說 誒剛剛從19嘛

305
00:18:02,035 --> 00:18:04,088
那已經剛剛跑了10了

306
00:18:04,088 --> 00:18:08,045
所以等於說B本身就還有剩下9嘛

307
00:18:08,045 --> 00:18:12,091
然後這個D本身就剩下5的意思是這樣

308
00:18:12,091 --> 00:18:18,001
好 那 這個倒數計時就暫停啦 啊什麼時候再開始

309
00:18:18,001 --> 00:18:21,058
我們說 一樣 他就必須繼續把這個封包把它聽完

310
00:18:21,058 --> 00:18:26,055
聽完之後呢 注意到 再等一個DIFS

311
00:18:26,055 --> 00:18:32,035
一定要等到一個DIFS之後呢 然後呢才要開始再倒數計時

312
00:18:32,035 --> 00:18:35,008
不過我們這裡呢 有特別強調說

313
00:18:35,008 --> 00:18:37,071
我們這例子裡面 我們在這個時間點

314
00:18:37,071 --> 00:18:43,068
這個地方 又有一個E呢 在這個地方 想要送

315
00:18:43,068 --> 00:18:47,065
所以這個E呢 在這個時間點跑進來想要送 也發現說

316
00:18:47,065 --> 00:18:51,065
誒這個也是busy啊 所以他一樣 一樣

317
00:18:51,065 --> 00:18:55,045
他比較慢來 但是呢他也參與了這個競爭

318
00:18:55,045 --> 00:18:59,091
好 他在這個等到這個前一個封包送完之後

319
00:18:59,091 --> 00:19:02,038
那他也產生一個random back-off time

320
00:19:02,038 --> 00:19:06,001
假設他的back-off time是7 好 所以就變成

321
00:19:06,001 --> 00:19:09,075
誒這個時候呢 還是有三個工作站在競爭

322
00:19:09,075 --> 00:19:12,058
一個是A 他 誒對不起 一個是B

323
00:19:12,058 --> 00:19:16,015
B還剩下9µs   倒數計時剩下9µs

324
00:19:16,015 --> 00:19:20,085
然後D呢 他倒數計時剩下5µs

325
00:19:20,085 --> 00:19:25,081
然後E呢是新加進來的 那他的時間是7µs

326
00:19:25,081 --> 00:19:28,075
那這樣就開始 三個就同時開始倒數計時了

327
00:19:28,075 --> 00:19:34,001
那我們知道這樣的結果應該是這個5它會先倒數計時完畢嘛

328
00:19:34,001 --> 00:19:37,098
那5計時完倒數計時完畢之後他就送一個封包

329
00:19:37,098 --> 00:19:41,001
那一樣的 誒 那這樣的話等於說

330
00:19:41,001 --> 00:19:47,025
這個9呢就現在變成4了 因為 因為本來9µs

331
00:19:47,025 --> 00:19:50,061
那這個倒數計時呢 5 所以就剩下4

332
00:19:50,061 --> 00:19:52,081
那這個7呢 就剩下2

333
00:19:52,081 --> 00:19:55,088
因為他們都扣掉這個5µs   就剩下2

334
00:19:55,088 --> 00:19:59,055
一樣 好 那接下來他們繼續觀察這個封包

335
00:19:59,055 --> 00:20:03,011
這個封包結束之後呢 再等一個DIFS的時間

336
00:20:03,011 --> 00:20:08,028
然後這兩個再倒數計時 這個2的比較短嘛

337
00:20:08,028 --> 00:20:11,041
所以他先倒數計時結束 然後他送封包

338
00:20:11,041 --> 00:20:14,031
那對這個B來講的話

339
00:20:14,031 --> 00:20:18,051
他又在這個時間點 又聽到有人開始送封包

340
00:20:18,051 --> 00:20:20,098
他又不能送了所以他又繼續把它聽完

341
00:20:20,098 --> 00:20:26,035
然後再等一個DIFS 然後呢再把剩下2µs

342
00:20:26,035 --> 00:20:29,088
把他倒數計時完 然後才開始送他的封包

343
00:20:29,088 --> 00:20:33,021
所以你從這個例子就可以知道說

344
00:20:33,021 --> 00:20:37,008
第一個當我們要送封包的時候呢

345
00:20:37,008 --> 00:20:40,068
是這樣 我們要送封包的話 我們會來聽聽看

346
00:20:40,068 --> 00:20:46,048
現在是busy還是idle 我們以B來當例子來看的話

347
00:20:46,048 --> 00:20:50,058
就是我來聽 然後發現是busy 所以我就把它聽完

348
00:20:50,058 --> 00:20:54,038
然後等待一個DIFS的時間

349
00:20:54,038 --> 00:20:56,091
我就產生一個random back-off time

350
00:20:56,091 --> 00:21:00,001
結果產生的是19  所以我就開始倒數計時

351
00:21:00,001 --> 00:21:03,095
可是倒數計時的過程當中 這邊有人先送了

352
00:21:03,095 --> 00:21:09,061
所以我就繼續把它聽完 然後呢再等待一個DIFS的時間

353
00:21:09,061 --> 00:21:12,085
繼續倒數計時 那倒數計時到這個時間點

354
00:21:12,085 --> 00:21:15,025
又有一個封包送出來 他又暫停

355
00:21:15,025 --> 00:21:19,091
然後再等一個DIFS的時間 然後再繼續聽倒數計時

356
00:21:19,091 --> 00:21:23,031
這邊又有一個封包跑出來 他倒數計時又暫停

357
00:21:23,031 --> 00:21:27,081
然後再等一個DIFS的時間 回到這裡來

358
00:21:27,081 --> 00:21:30,095
然後開始倒數計時 這邊才結束 封包才出來

359
00:21:30,095 --> 00:21:34,038
你可以看得出來 就是說每一個station呢

360
00:21:34,038 --> 00:21:36,031
他都是這樣子

361
00:21:36,031 --> 00:21:39,001
他產生一個random back-off time的時候呢

362
00:21:39,001 --> 00:21:41,088
就開始倒數計時 可是倒數計時的過程當中

363
00:21:41,088 --> 00:21:45,021
只要channel變成busy 倒數計時就暫停

364
00:21:45,021 --> 00:21:48,061
一直要等到這個channel呢

365
00:21:48,061 --> 00:21:54,028
一直要有出現idle的時間超過一個DIFS

366
00:21:54,028 --> 00:21:57,071
就是這個時間點 倒數計時都是在這個地方

367
00:21:57,071 --> 00:22:00,058
超過這個 超過這個 超過這個

368
00:22:00,058 --> 00:22:04,065
這個時間 才能再重新啟動倒數計時

369
00:22:04,065 --> 00:22:10,045
那最後倒數計時到0的話 這個地方 這樣才可以傳送封包

370
00:22:10,045 --> 00:22:12,038
這個例子就告訴我們說

371
00:22:12,038 --> 00:22:16,025
我們在發生所謂的random back-off

372
00:22:16,025 --> 00:22:17,085
產生random back-off time的時候

373
00:22:17,085 --> 00:22:21,008
到底怎麼樣讓他倒數計時到0

374
00:22:21,008 --> 00:22:23,065
那他才可以把封包送出去

375
00:22:23,065 --> 00:22:25,065


