1
00:00:08,055 --> 00:00:10,021
好 我們剛剛這個bridge本身

2
00:00:10,021 --> 00:00:12,091
等於說這個spanning tree的維護呢

3
00:00:12,091 --> 00:00:16,065
假設bridge壞掉的話 剛剛有這個例子可以給各位作參考

4
00:00:16,065 --> 00:00:23,005
那在這個過程呢 我們這邊有一段這個文字的說明

5
00:00:23,005 --> 00:00:25,021
就是剛剛提到 假設bridge 6壞掉

6
00:00:25,021 --> 00:00:28,025
然後他整個尋找的過程 這邊

7
00:00:28,025 --> 00:00:32,081
就給各位參考 我們就不一一的再唸一遍

8
00:00:32,081 --> 00:00:35,091
這個他的步驟這邊都有解釋

9
00:00:35,091 --> 00:00:41,001
那最後呢 就是 整個最後的架構圖就像這樣的

10
00:00:41,001 --> 00:00:43,045
這個圖 就是說 假設bridge6

11
00:00:43,045 --> 00:00:50,001
它發生的問題呢 經過這個所謂的代理權的這個爭奪

12
00:00:50,001 --> 00:00:53,081
最後就底定了一個新的spanning tree 就是這樣子

13
00:00:53,081 --> 00:00:57,098
接下來我們再來看 另外一個例子

14
00:00:57,098 --> 00:01:02,005
這個例子呢 我們假設是LAN壞掉

15
00:01:02,005 --> 00:01:04,041
我們第一個例子呢假設是bridge壞掉

16
00:01:04,041 --> 00:01:07,005
那接下來我們假設LAN壞掉

17
00:01:07,005 --> 00:01:10,028
譬如說那個LAN整個 整個這個線路斷掉

18
00:01:10,028 --> 00:01:12,065
這個問題也會比較更嚴重一點

19
00:01:12,065 --> 00:01:16,051
我們假設呢 下面這個LAN

20
00:01:16,051 --> 00:01:19,021
整個LAN3呢整個壞掉了

21
00:01:19,021 --> 00:01:22,038
這個LAN一壞掉的時候 你就發現到說

22
00:01:22,038 --> 00:01:27,095
哇 這個我們這個spanning tree的這個BPDU就更嚴重了

23
00:01:27,095 --> 00:01:30,098
因為下面這個地方整個crash了

24
00:01:30,098 --> 00:01:33,041
所以下面通通收不到BPDU了

25
00:01:33,041 --> 00:01:37,021
變成說 一下子呢 有好幾個bridge呢都收不到BPDU

26
00:01:37,021 --> 00:01:44,011
現在這個BPDU呢 等於只能走上面這一條路而已

27
00:01:44,011 --> 00:01:46,048
只有上面這一條路 下面這邊

28
00:01:46,048 --> 00:01:49,098
BPDU 這邊等於說 根本就下不去

29
00:01:49,098 --> 00:01:53,035
因為整條路都已經 整個LAN都已經斷掉了

30
00:01:53,035 --> 00:01:56,068
那結果會怎麼樣呢 我們就來看一下

31
00:01:56,068 --> 00:01:59,055
因為下面這個地方整個都斷掉了

32
00:01:59,055 --> 00:02:03,091
所以每一個port 跟這個LAN相連的port

33
00:02:03,091 --> 00:02:08,015
都變成block 因為他整個LAN都已經收不到任何資料了

34
00:02:08,015 --> 00:02:14,055
所以 這個LAN bridge3跟bridge4

35
00:02:14,055 --> 00:02:17,075
我們注意到 原來bridge3跟bridge4

36
00:02:17,075 --> 00:02:21,061
他是走下面的 等於說bridge3 bridge4

37
00:02:21,061 --> 00:02:25,095
他原來要連到這個root bridge呢 都是走下面這裡

38
00:02:25,095 --> 00:02:29,091
都是走下面這裡 可現在這個LAN壞掉了

39
00:02:29,091 --> 00:02:32,058
所以整個斷掉了所以我們接下來看

40
00:02:32,058 --> 00:02:35,045
他就會被block 然後就會走上面

41
00:02:35,045 --> 00:02:39,015
變成說他的路徑呢就會變更成說

42
00:02:39,015 --> 00:02:45,015
好這個時候 針對這個bridge3跟bridge4

43
00:02:45,015 --> 00:02:49,065
他的root呢他就會走這邊 走這邊 走這邊

44
00:02:49,065 --> 00:02:52,055
等於說 他那個spanning tree的port

45
00:02:52,055 --> 00:02:55,001
root port呢 本來在下面的

46
00:02:55,001 --> 00:02:56,025
現在全部換到上面去了

47
00:02:56,025 --> 00:02:58,071
那換到上面去的話 他至少

48
00:02:58,071 --> 00:03:01,035
他又跟這個整個tree連起來

49
00:03:01,035 --> 00:03:03,091
連起來代表是說 他要送封包的話

50
00:03:03,091 --> 00:03:06,068
至少這個樹呢都還在

51
00:03:06,068 --> 00:03:09,001
上面這隻呢 都還活著

52
00:03:09,001 --> 00:03:11,035
至少他還 bridge3跟bridge4

53
00:03:11,035 --> 00:03:12,098
還都可以連起來

54
00:03:12,098 --> 00:03:15,058
好 問題是在 我們看最下面

55
00:03:15,058 --> 00:03:17,078
這個bridge5跟bridge8

56
00:03:17,078 --> 00:03:23,028
他因為整個LAN3 這個地方都已經壞掉了

57
00:03:23,028 --> 00:03:27,048
所以brigde5跟bridge8他根本就是失聯了

58
00:03:27,048 --> 00:03:31,098
等於說他也找不到一個port可以到那個root去了

59
00:03:31,098 --> 00:03:35,028
那怎麼辦 因為這個LAN3的壞掉呢

60
00:03:35,028 --> 00:03:38,051
我們看 他一個很嚴重的問題就是說

61
00:03:38,051 --> 00:03:41,091
他把這個整個網路呢 切成兩半了

62
00:03:41,091 --> 00:03:48,018
上面一半跟下面一半 那重點是說 這兩半呢

63
00:03:48,018 --> 00:03:53,041
已經不連接在一起了 不連接在一起的話

64
00:03:53,041 --> 00:03:55,081
那怎麼辦呢 上面地方

65
00:03:55,081 --> 00:03:59,018
就上面這一半我還可以因為port的改變

66
00:03:59,018 --> 00:04:01,041
我剛剛講 bridge3跟bridge4

67
00:04:01,041 --> 00:04:03,051
他的root port改到上面去

68
00:04:03,051 --> 00:04:06,095
那我至少接到那個上面的剩下的那個tree

69
00:04:06,095 --> 00:04:09,095
我還可以跟大家通 可是下面這個地方

70
00:04:09,095 --> 00:04:13,051
他根本就跟那個root 已經斷掉了

71
00:04:13,051 --> 00:04:15,095
那個root根本連不上了 那怎麼辦

72
00:04:15,095 --> 00:04:21,041
沒有關係 如果說我們跟原來的root已經失聯了

73
00:04:21,041 --> 00:04:24,095
就根本也連不上了 那我們就找一個新的root

74
00:04:24,095 --> 00:04:31,041
所以5跟8呢 他們就會形成另外一個網路

75
00:04:31,041 --> 00:04:32,081
另外一個spanning tree

76
00:04:32,081 --> 00:04:35,045
只是這個spanning tree呢 只有他們兩個而已

77
00:04:35,045 --> 00:04:36,008
因為沒辦法

78
00:04:36,008 --> 00:04:39,035
現在已經跟那個原來的root bridge已經整個斷掉了

79
00:04:39,035 --> 00:04:41,065
所以我們剛剛提到 剛看一下

80
00:04:41,065 --> 00:04:44,065
這個bridge5呢 他會送一個封包過來

81
00:04:44,065 --> 00:04:48,091
跟他說 那我認為我現在就是root

82
00:04:48,091 --> 00:04:51,028
因為他收不到任何BPDU了

83
00:04:51,028 --> 00:04:54,005
等於說他收不到任何這個bridge

84
00:04:54,005 --> 00:04:56,011
root bridge送來的BPDU

85
00:04:56,011 --> 00:05:02,031
所以他就回到最開始的時候 最開始的時候

86
00:05:02,031 --> 00:05:06,025
就是每一個bridge呢 都認為自己就是root

87
00:05:06,025 --> 00:05:09,001
所以這個bridge5呢 他就開始說

88
00:05:09,001 --> 00:05:12,028
他可能會變成新的root

89
00:05:12,028 --> 00:05:15,065
所以他就送一個BPDU給這個bridge8

90
00:05:15,065 --> 00:05:18,058
那bridge8一看到這個BPDU 當然

91
00:05:18,058 --> 00:05:21,078
因為bridge8他id比較大 所以他就

92
00:05:21,078 --> 00:05:25,031
也就同意了 說bridge5那你來當root好了

93
00:05:25,031 --> 00:05:28,051
因為我id比你大嘛 所以最後呢

94
00:05:28,051 --> 00:05:30,055
我們注意到 最後呢

95
00:05:30,055 --> 00:05:36,005
這個bridge5呢 因為他已經跟原來這個bridge

96
00:05:36,005 --> 00:05:40,045
已經沒有辦法連接了 所以他就成為新的root bridg

97
00:05:40,045 --> 00:05:43,005
然後結果呢就變成說

98
00:05:43,005 --> 00:05:49,038
因為這個LAN的故障 我們把網路呢 變成隔了兩半了

99
00:05:49,038 --> 00:05:52,018
每一半就是一個spanning tree

100
00:05:52,018 --> 00:05:53,091
獨立的spanning tree

101
00:05:53,091 --> 00:05:56,078
所以剛剛因為這個LAN3的壞掉

102
00:05:56,078 --> 00:06:00,091
使得下面這一半呢 他們就啟動了一個叫做

103
00:06:00,091 --> 00:06:04,031
spanning tree重建的這個過程

104
00:06:04,031 --> 00:06:09,058
所以找到新的root bridge 找到新的spanning tree

105
00:06:09,058 --> 00:06:13,051
所以最後就變成說 你看我變成兩個root

106
00:06:13,051 --> 00:06:17,088
兩個root bridge 然後兩個spanning tree

107
00:06:17,088 --> 00:06:19,091
只是互相不連接

108
00:06:19,091 --> 00:06:22,088
然後呢 每一個root bridge

109
00:06:22,088 --> 00:06:26,021
就像這個送的這個藍色的封包一樣

110
00:06:26,021 --> 00:06:30,085
他們就各自維護他的這個spanning tree

111
00:06:30,085 --> 00:06:34,055
他們就各自送這個hello BPDU 就是各自去送

112
00:06:34,055 --> 00:06:38,058
只是很可惜的 因為你這個LAN3故障

113
00:06:38,058 --> 00:06:42,031
使得說你雖然有兩個spanning tree

114
00:06:42,031 --> 00:06:44,035
但是這個spanning tree是沒有連結的

115
00:06:44,035 --> 00:06:48,055
這是一個例子 就是說如果說 LAN壞掉的話

116
00:06:48,055 --> 00:06:52,061
他的問題會稍為嚴重一點 那底下這幾個

117
00:06:52,061 --> 00:06:55,008
這個段落的說明 都是指

118
00:06:55,008 --> 00:06:56,048
剛剛講 假設LAN壞掉

119
00:06:56,048 --> 00:06:59,001
然後我們這個hello BPDU

120
00:06:59,001 --> 00:07:01,061
就進不到這個LAN裡面所相連的

121
00:07:01,061 --> 00:07:04,008
然後我們的port就會開始變更

122
00:07:04,008 --> 00:07:06,018
才可以連到舊的spanning tree的

123
00:07:06,018 --> 00:07:07,048
趕快連到舊的spanning tree

124
00:07:07,048 --> 00:07:10,051
那連不到的 都連不到的

125
00:07:10,051 --> 00:07:14,015
就只好自己重新再去建一個新的spanning tree

126
00:07:14,015 --> 00:07:18,038
所以 就不管是bridge壞掉 還是LAN壞掉

127
00:07:18,038 --> 00:07:22,068
反正可以活的 可以連的就趕快去連

128
00:07:22,068 --> 00:07:26,078
那如果不能連的 就自己重新再建一個spanning tree

129
00:07:26,078 --> 00:07:29,025
所以這個最後的結果 這個過程

130
00:07:29,025 --> 00:07:32,085
我們可以參考一下 就剛剛介紹的這個流程

131
00:07:32,085 --> 00:07:36,085
就是這個文字的說明 我們看最後面 就變成說

132
00:07:36,085 --> 00:07:42,088
好 這個LAN3呢 事實上呢他已經 已經crash掉了

133
00:07:42,088 --> 00:07:46,048
所以這一塊 這一塊 等於說已經不見了

134
00:07:46,048 --> 00:07:48,068
所以我們就變成這個spanning tree

135
00:07:48,098 --> 00:07:49,091
就變成長的這個樣子

136
00:07:49,091 --> 00:07:52,075
這是一個spanning tree 這是一個spanning tree

137
00:07:52,075 --> 00:07:55,098
變成有兩個spanning tree 然後各自跑各自的

138
00:07:55,098 --> 00:08:01,071
這是沒有辦法 因為LAN已經壞掉了

139
00:08:01,071 --> 00:08:06,041
而且這個LAN壞掉使得這個網路呢實際已經被隔開成兩塊

140
00:08:06,041 --> 00:08:09,075
所以兩塊呢 可以各自去找他的spanning tree

141
00:08:09,075 --> 00:08:12,031
但是沒有連在一起 所以這樣的設計

142
00:08:12,031 --> 00:08:14,055
其實還是不太理想 就是說

143
00:08:14,055 --> 00:08:17,028
我們有bridge壞掉 有LAN壞掉

144
00:08:17,028 --> 00:08:19,045
我們都不希望說某一個LAN壞掉

145
00:08:19,045 --> 00:08:21,088
讓我們的網路被實際隔離開來

146
00:08:21,088 --> 00:08:26,058
所以如果說這個要做改進的話 我們其實只要譬如說

147
00:08:26,058 --> 00:08:30,038
這邊再接一個port 譬如說在接到這邊來

148
00:08:30,038 --> 00:08:32,058
假設把它實際連起來

149
00:08:32,058 --> 00:08:37,018
那我們其實又可以增加這個網路的這個所謂的可靠度

150
00:08:37,018 --> 00:08:40,035
就是說我們把網路連成loop 就是希望說可以

151
00:08:40,035 --> 00:08:44,038
在網路發生問題的時候 他可以至少可以存活

152
00:08:44,038 --> 00:08:50,048
這是我們講這個有關spanning tree maintain的第二個例子

153
00:08:50,048 --> 00:08:52,098
就是當有一個LAN壞掉的時候

154
00:08:52,098 --> 00:08:56,028
我們怎麼再把這個spanning tree呢做一個更好的維護

155
00:08:56,028 --> 00:08:57,085
所以最後

156
00:08:57,085 --> 00:09:01,028
我們針對這個所謂的spanning tree的algorithm

157
00:09:01,028 --> 00:09:03,038
做一個所謂的summary 做一個總結

158
00:09:03,038 --> 00:09:07,001
我們說 一個bridge呢他是一個

159
00:09:07,001 --> 00:09:10,031
layer2的設備 這個bridge本身是layer2

160
00:09:10,031 --> 00:09:14,021
就他所處理的封包呢 只看他的MAC address

161
00:09:14,021 --> 00:09:18,011
這是第二層 source MAC address來做address learning

162
00:09:18,011 --> 00:09:21,051
然後destination的MAC address呢做forwarding

163
00:09:21,051 --> 00:09:25,071
或者做filtering 那用bridge所連起來的這個網路

164
00:09:25,071 --> 00:09:28,071
我們叫做bridge LAN 簡稱叫做B LAN

165
00:09:28,071 --> 00:09:32,001
那整個B LAN呢 我們說他

166
00:09:32,001 --> 00:09:34,031
形成一個叫做 one logical LAN

167
00:09:34,031 --> 00:09:38,015
就是說 這個B LAN上面的任何兩個station

168
00:09:38,015 --> 00:09:43,088
他們要溝通的時候 就把對方看成跟你在同一個LAN上

169
00:09:43,088 --> 00:09:47,075
直接把對方的MAC address呢 放到這個封包裡面

170
00:09:47,075 --> 00:09:52,098
我們講他雖然 用bridge 把很多的LAN連接起來

171
00:09:52,098 --> 00:09:57,061
可是對任何一個station來講 他整個 這個大的網路

172
00:09:57,061 --> 00:10:00,061
把它當成一個logical LAN來看待就可以了

173
00:10:00,061 --> 00:10:04,005
好 那bridge本身呢 有三個最重要的功能

174
00:10:04,005 --> 00:10:06,088
第一個他要做forwarding 封包轉送

175
00:10:06,088 --> 00:10:08,095
第二個 要做所謂的filtering

176
00:10:08,095 --> 00:10:14,018
封包可能要過濾 那他為了做封包轉送跟過濾更有效率的話

177
00:10:14,018 --> 00:10:20,015
他必須知道 網路上面的哪些station到底在什麼地方

178
00:10:20,015 --> 00:10:21,091
所以他會做address learning

179
00:10:21,091 --> 00:10:25,021
那我們說 為了讓網路呢這個更可靠

180
00:10:25,021 --> 00:10:29,045
所以我們會把他接成 有所謂的loop 迴路

181
00:10:29,045 --> 00:10:32,001
可是迴路呢 會造成兩個問題

182
00:10:32,001 --> 00:10:34,015
第一個 因為你有多條路徑嘛

183
00:10:34,015 --> 00:10:38,021
所以一個封包可能會被重複接收 這是不應該的

184
00:10:38,021 --> 00:10:43,011
第二個迴路本身 會造成所謂的address learning的錯誤

185
00:10:43,011 --> 00:10:44,058
這個也是不應該的

186
00:10:44,058 --> 00:10:47,005
所以為了提高網路的可靠度

187
00:10:47,005 --> 00:10:49,015
我們會把他接成迴路

188
00:10:49,015 --> 00:10:52,098
可是我們希望他在運作的時候呢 不要有迴路

189
00:10:52,098 --> 00:10:56,041
所以我們說bridge裡面呢run了一個algorithm

190
00:10:56,041 --> 00:10:58,011
就叫做spanning tree algorithm

191
00:10:58,011 --> 00:10:59,051
所以一開機的時候呢

192
00:10:59,051 --> 00:11:02,031
這個bridge他們就會互相開始交換封包

193
00:11:02,031 --> 00:11:06,091
開始交換 然後找到最小id的bridge

194
00:11:06,091 --> 00:11:08,008
我們叫做root bridge

195
00:11:08,008 --> 00:11:11,071
然後每一個bridge開始找到跟他的最短的路徑

196
00:11:11,071 --> 00:11:14,091
所以每一個bridge呢會找他的所謂的R port

197
00:11:14,091 --> 00:11:17,038
那每一個LAN呢會找他的D port

198
00:11:17,038 --> 00:11:19,071
所以說 每一個bridge

199
00:11:19,071 --> 00:11:22,055
他到這個root bridge最短的路徑

200
00:11:22,055 --> 00:11:24,048
就會在這個spanning tree上

201
00:11:24,048 --> 00:11:27,081
每一個LAN到這個root bridge最短的路徑

202
00:11:27,081 --> 00:11:31,058
也會被涵蓋在這個spanning tree上面

203
00:11:31,058 --> 00:11:33,015
所以spanning tree本身就涵蓋

204
00:11:33,015 --> 00:11:36,048
每一個bridge呢 到他最短的路徑

205
00:11:36,048 --> 00:11:39,085
也涵蓋了每一個LAN到他最短的路徑

206
00:11:39,085 --> 00:11:42,031
而且 這個spanning tree

207
00:11:42,031 --> 00:11:45,038
他是predictable 他是可以算出來的

208
00:11:45,038 --> 00:11:47,098
或著說他是叫做deterministic

209
00:11:47,098 --> 00:11:51,095
他是可以決定性的 所以你只要給我網路的結構

210
00:11:51,095 --> 00:11:54,081
給我一些相關的像transmission cost

211
00:11:54,081 --> 00:11:56,048
連接的方式怎麼連

212
00:11:56,048 --> 00:12:01,095
那id是多少 每一個port這個所謂的transmission cost是多少

213
00:12:01,095 --> 00:12:03,098
這些參數都有的話

214
00:12:03,098 --> 00:12:06,075
我就可以算出這些spanning tree長什麼樣子

215
00:12:06,075 --> 00:12:11,038
好 那 給我這樣的一個結構呢

216
00:12:11,038 --> 00:12:13,035
我們是可以用人工

217
00:12:13,035 --> 00:12:16,035
就可以算出它的spanning tree應該是什麼樣子

218
00:12:16,035 --> 00:12:17,038
他是可預測

219
00:12:17,038 --> 00:12:18,075
那最後就是說

220
00:12:18,075 --> 00:12:21,055
這個spanning tree在運作的時候呢

221
00:12:21,055 --> 00:12:23,098
為了提高他的可靠度

222
00:12:23,098 --> 00:12:25,081
我們spanning tree會有一個叫做

223
00:12:25,081 --> 00:12:27,078
spanning tree maintenance的機制

224
00:12:27,078 --> 00:12:29,028
就 這個root本身

225
00:12:29,028 --> 00:12:33,005
他會不定時的就送這個所謂的BPDU送出去

226
00:12:33,005 --> 00:12:38,021
然後讓 這個所有的bridge呢都定時都會收到這個BPDU

227
00:12:38,021 --> 00:12:41,001
那萬一有bridge壞掉 或者有LAN壞掉

228
00:12:41,001 --> 00:12:43,091
那這個BPDU收不到 他就會time out

229
00:12:43,091 --> 00:12:46,061
time out之後就會開始來做補救的動作

230
00:12:46,061 --> 00:12:50,048
把原來可能暫時被block的這個link呢

231
00:12:50,048 --> 00:12:54,038
我把他叫起來 所以就是不管是bridge壞掉啦

232
00:12:54,038 --> 00:12:58,061
或者LAN壞掉 我們都基本上都可以讓這個tree

233
00:12:58,061 --> 00:13:02,045
可以做一個改變 然後可以再把他救活

234
00:13:02,045 --> 00:13:04,071
但是有唯一的例外 就是說

235
00:13:04,071 --> 00:13:08,091
這個網路斷掉的太嚴重 或者說這個壞掉的這個

236
00:13:08,091 --> 00:13:11,075
不管是bridge 或者是LAN 太多的時候

237
00:13:11,075 --> 00:13:13,035
可能會讓他隔離

238
00:13:13,035 --> 00:13:16,045
就是實際連接已經斷掉的時候他就會隔離

239
00:13:16,045 --> 00:13:20,008
隔離的結果就是說 隔離成三部分 我就會有三個tree

240
00:13:20,008 --> 00:13:22,065
隔離成四部分我就會有四個tree

241
00:13:22,065 --> 00:13:24,035
然後各自還是可以存活

242
00:13:24,035 --> 00:13:28,021
各自還是可以存活 但是彼此沒有辦法相連

243
00:13:28,021 --> 00:13:31,048
那這是沒辦法啦 因為如果說壞掉的這個

244
00:13:31,048 --> 00:13:34,011
這個bridge啦 或者壞掉的LAN

245
00:13:34,011 --> 00:13:37,091
如果壞得太嚴重的話 本來這個網路就沒有辦法再連結

246
00:13:37,091 --> 00:13:41,001
但是只要網路還是可以連結在一起

247
00:13:41,001 --> 00:13:44,005
我的spanning tree呢就可以換成

248
00:13:44,005 --> 00:13:46,085
或者是變更成這個新的spanning tree

249
00:13:46,085 --> 00:13:48,015
然後繼續的運作

250
00:13:48,015 --> 00:13:50,058
好 那以上就是我們介紹這個

251
00:13:50,058 --> 00:13:53,015
所謂的bridge 跟spanning tree

252
00:13:53,015 --> 00:13:55,038
這個整個運作的原理

253
00:13:55,038 --> 00:13:57,038


