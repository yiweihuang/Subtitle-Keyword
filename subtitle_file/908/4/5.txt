1
00:00:09,001 --> 00:00:14,025
好 那接下來我們就來介紹所謂的spanning的algorithm

2
00:00:14,025 --> 00:00:19,028
那我們來看一下這個 先介紹一些bridge本身基本的資料

3
00:00:19,028 --> 00:00:24,081
我們說 每一個bridge呢 他都會有一個所謂的id

4
00:00:24,081 --> 00:00:27,055
就是每一個bridge本身 因為要知道說

5
00:00:27,055 --> 00:00:29,048
他們到底是哪一個bridge嘛

6
00:00:29,048 --> 00:00:32,045
所以我們每一個bridge呢 都會給他一個id

7
00:00:32,045 --> 00:00:35,018
這個id的長度呢 是8個byte

8
00:00:35,018 --> 00:00:40,045
其中很重要的就是說 最左邊的兩個byte

9
00:00:40,045 --> 00:00:42,008
我們叫做所謂的programmable

10
00:00:42,008 --> 00:00:45,015
就這個兩個byte呢 是我們可以用程式呢

11
00:00:45,015 --> 00:00:48,085
去設定他的值 然後右邊的六個byte呢

12
00:00:48,085 --> 00:00:51,005
就是一般他的MAC address

13
00:00:51,005 --> 00:00:53,075
就是網卡的位置 就是那個bridge的網卡的位置

14
00:00:53,075 --> 00:00:56,011
那這個8個byte的值呢

15
00:00:56,011 --> 00:00:59,055
我們講如果要看他所謂的大小的話

16
00:00:59,055 --> 00:01:04,031
因為最左邊 一般我們叫做most significant byte

17
00:01:04,031 --> 00:01:06,055
他是最重要是在最左邊這個值

18
00:01:06,055 --> 00:01:10,005
所以我們如果在左邊這兩個byte設的值不一樣

19
00:01:10,005 --> 00:01:13,048
就決定了這個bridge id的大小

20
00:01:13,048 --> 00:01:16,045
那bridge id大小有什麼關係呢

21
00:01:16,045 --> 00:01:20,025
因為我們剛剛有提到 在這個spanning tree裡面呢

22
00:01:20,025 --> 00:01:23,041
有一個最重要的角色 就是那個root

23
00:01:23,041 --> 00:01:27,035
那個root本身 他要維持這個tree的運作

24
00:01:27,035 --> 00:01:31,048
但是這個root 我們要找id最小的

25
00:01:31,048 --> 00:01:35,041
所以這個bridge的id 是很重要的參數之一

26
00:01:35,041 --> 00:01:36,095
因為我們要找最小的

27
00:01:36,095 --> 00:01:38,078
所以有那個比大小的問題

28
00:01:38,078 --> 00:01:44,051
那第二個就是說 因為bridge之間

29
00:01:44,051 --> 00:01:48,088
我們剛有提到說 他們要互相的交換一些所謂的封包

30
00:01:48,088 --> 00:01:52,045
在找這個spanning tree的過程當中

31
00:01:52,045 --> 00:01:55,021
他們要互相的交流 一些封包

32
00:01:55,021 --> 00:01:57,081
那這個封包到底要送給誰

33
00:01:57,081 --> 00:01:59,058
送給哪一個bridge呢

34
00:01:59,058 --> 00:02:03,018
我們不知道網路上面到底有多少個bridge呀

35
00:02:03,018 --> 00:02:06,048
而且比較遠的那個bridge 我也不知道他的id呀

36
00:02:06,048 --> 00:02:08,018
我只知道自己的id

37
00:02:08,018 --> 00:02:11,091
就任何一個bridge呢 通常他會知道自己的id

38
00:02:11,091 --> 00:02:14,085
他可能不知道別的bridge的id

39
00:02:14,085 --> 00:02:17,048
譬如說他們的MAC address 我都不知道啊

40
00:02:17,048 --> 00:02:20,041
所以我把這個封包要丟給bridge的時候呢

41
00:02:20,041 --> 00:02:23,028
我沒辦法指定是要給哪一個bridge

42
00:02:23,028 --> 00:02:27,051
但是我會說 這個封包呢 是要給所有的bridge

43
00:02:27,051 --> 00:02:29,045
既然是所有的bridge呢

44
00:02:29,045 --> 00:02:33,018
這就是我們一個傳統的叫做multicast

45
00:02:33,018 --> 00:02:37,091
所以我們會有一個叫做group的這種MAC address

46
00:02:37,091 --> 00:02:41,041
for all bridges 也就是這種封包

47
00:02:41,041 --> 00:02:45,058
如果他上面的destination的MAC是寫成這樣的話

48
00:02:45,058 --> 00:02:47,041
我們說 那就是說

49
00:02:47,041 --> 00:02:50,058
所有的bridge看到這樣的封包

50
00:02:50,058 --> 00:02:53,041
通通都要收起來 也就是這種封包呢

51
00:02:53,041 --> 00:02:56,031
是給不是特定的某一個bridge

52
00:02:56,031 --> 00:02:59,051
是給所有網路上面的bridge

53
00:02:59,051 --> 00:03:01,098
通通要收起來 收起來處理的意思

54
00:03:01,098 --> 00:03:06,075
那我們說 一個bridge本身可能會有很多個port

55
00:03:06,075 --> 00:03:09,088
一般所謂的接口 就是那個網路的那個接口

56
00:03:10,041 --> 00:03:13,065
那每一個接口呢 也會有一個id

57
00:03:13,065 --> 00:03:16,075
這個id我們就可以設定 剛剛我們前面有講

58
00:03:16,075 --> 00:03:20,061
像bridge X for Y 他有port1 port2 port3

59
00:03:20,061 --> 00:03:23,055
就基本上每一個port呢也會有一個id

60
00:03:23,055 --> 00:03:25,091
所以我們先瞭解一下

61
00:03:25,091 --> 00:03:28,085
說 每一個bridge呢會有一個id

62
00:03:28,085 --> 00:03:32,025
那每一個bridge的每一個port 也會有一個id

63
00:03:32,025 --> 00:03:36,021
就是這個是我們將來用來辨識或者區隔之用

64
00:03:36,021 --> 00:03:38,095
好 那底下呢 我們就開始來介紹

65
00:03:38,095 --> 00:03:42,018
非常非常重要 所謂的spanning tree的algorithm

66
00:03:42,018 --> 00:03:46,035
首先我們要對一些名詞做一些定義啦

67
00:03:46,035 --> 00:03:49,028
我們先一個一個來看 好 首先我們第一個看

68
00:03:49,028 --> 00:03:52,075
所謂 剛有提到 什麼叫做root bridge

69
00:03:52,075 --> 00:03:54,098
root bridge呢 在這個地方

70
00:03:54,098 --> 00:03:57,078
就是說 我們會有很多bridge

71
00:03:57,078 --> 00:04:01,041
那 每一個bride呢 也有一個id

72
00:04:01,041 --> 00:04:05,098
我們要挑id最小的那個bridge呢

73
00:04:05,098 --> 00:04:07,071
他就是所謂的root bridge

74
00:04:07,071 --> 00:04:12,018
那在網路上面 我怎麼知道我的id是不是最小呢

75
00:04:12,018 --> 00:04:15,021
因為網路上面一連下來 可能有數個

76
00:04:15,021 --> 00:04:18,088
或者數十個bridge散在各個地方

77
00:04:18,088 --> 00:04:22,011
那你只知道你的id 你怎麼知道別人的id

78
00:04:22,011 --> 00:04:25,031
那我現在要在裡面挑一個最小的 我要怎麼挑

79
00:04:25,031 --> 00:04:28,001
如果我們是一個centralize algorithm

80
00:04:28,001 --> 00:04:30,081
如果你是一個集中式演算法 你一看就知道哪一個是最小

81
00:04:30,081 --> 00:04:32,048
你就要做 我們講sorting

82
00:04:32,048 --> 00:04:34,018
排序就知道誰是最小

83
00:04:34,018 --> 00:04:37,081
可是我們現在網路是一個分散式的網路啊

84
00:04:37,081 --> 00:04:39,085
我也不知道網路上面有多少個bridge

85
00:04:39,085 --> 00:04:41,051
我也不知道他們的id

86
00:04:41,051 --> 00:04:44,005
那我怎麼知道我是最小 還是你是最小

87
00:04:44,005 --> 00:04:47,068
所以這個就要靠什麼 要靠我們等下會介紹的

88
00:04:47,068 --> 00:04:50,018
我會送封包給你 你會送封包給我

89
00:04:50,018 --> 00:04:52,018
我送給你的封包有帶我的id

90
00:04:52,018 --> 00:04:54,018
你送給我的封包帶你的id

91
00:04:54,018 --> 00:04:57,061
我們送封包一交換 我就知道誰大誰小

92
00:04:57,061 --> 00:05:00,051
變成說我們會有一個非常非常精彩的

93
00:05:00,051 --> 00:05:03,051
在網路上面怎麼用分散式的方法

94
00:05:03,051 --> 00:05:07,078
找到 網路上面到底哪一個bridge的id是最小的

95
00:05:07,078 --> 00:05:11,021
那這個最小的這個id的bridge呢

96
00:05:11,021 --> 00:05:15,011
他就會扮演這個所謂的root bridge的角色

97
00:05:15,011 --> 00:05:17,011
這是第一個 什麼叫root bridge

98
00:05:17,011 --> 00:05:20,075
好 那第二個我們來看一下 什麼叫做path cost

99
00:05:20,075 --> 00:05:23,071
或者所謂的transmission cost

100
00:05:23,071 --> 00:05:26,098
這個意思就是說 針對每一個bridge

101
00:05:26,098 --> 00:05:29,085
他有很多port嘛 很多接口

102
00:05:29,085 --> 00:05:34,008
針對每一個port 你從這個port的一個封包出去

103
00:05:34,008 --> 00:05:36,088
他的cost是多少

104
00:05:36,088 --> 00:05:40,011
就傳送一個封包 從特定的某一個port

105
00:05:40,011 --> 00:05:43,048
送一個封包出去 那所需要花的成本

106
00:05:43,048 --> 00:05:45,095
這個成本當然是比較抽象的定義啦

107
00:05:45,095 --> 00:05:49,098
那簡單的講就是說 我們知道網路上面不同的port

108
00:05:49,098 --> 00:05:51,038
他的速度不一樣

109
00:05:51,038 --> 00:05:57,001
譬如說有10Mbps 有100Mbps 甚至有Gb 甚至10G

110
00:05:57,001 --> 00:05:59,068
這個速度呢 有時候差得非常非常高

111
00:05:59,068 --> 00:06:03,065
那速度決定什麼 速度決定你傳送的時間

112
00:06:03,065 --> 00:06:08,061
也就是速度越慢 我們就認為說 你傳輸的這個cost就越高

113
00:06:08,061 --> 00:06:10,001
因為時間越久的意思

114
00:06:10,001 --> 00:06:13,098
那我希望當然讓網路這個將來在傳送的封包的時候呢

115
00:06:13,098 --> 00:06:15,035
可以盡量快一點

116
00:06:15,035 --> 00:06:18,008
我們希望走快一點的高速公路啦

117
00:06:18,008 --> 00:06:20,045
希望時間短一點 速度快一點

118
00:06:20,045 --> 00:06:23,031
所以我們認爲說 網路的速度越慢

119
00:06:23,031 --> 00:06:26,051
通常就代表他的成本越高的意思啦

120
00:06:26,051 --> 00:06:29,058
就是說 所謂的path cost

121
00:06:29,058 --> 00:06:31,035
或者叫transmission cost

122
00:06:31,035 --> 00:06:35,091
就是讓我們在這個port丟一個封包出去呢到底要花多少錢

123
00:06:35,091 --> 00:06:37,075
我們以這個例子來看

124
00:06:37,075 --> 00:06:39,005
我們這上面呢 注意到

125
00:06:39,005 --> 00:06:43,088
我們每一個port呢 都有把這個cost呢寫在上面

126
00:06:43,088 --> 00:06:48,075
譬如說 像這個地方

127
00:06:48,075 --> 00:06:51,031
我們說他的transmission cost等於5

128
00:06:51,031 --> 00:06:55,025
這個5是我們把它 有點把它數值化啦

129
00:06:55,025 --> 00:06:57,001
那真正的這個cost多少

130
00:06:57,001 --> 00:06:59,028
要跟他的頻寬跟他的速度有關係

131
00:06:59,028 --> 00:07:01,045
我們這裡是簡化 假設是5 也就是說

132
00:07:01,045 --> 00:07:05,038
我如果從這個bridge3把一個封包丟到這個網路上面去

133
00:07:05,038 --> 00:07:07,048
那我的cost就是5的意思

134
00:07:07,048 --> 00:07:11,058
那相對的就是說 那我如果把一個封包從這個port丟進去呢

135
00:07:11,058 --> 00:07:14,078
那我的cost就是 在這邊寫就是10嘛

136
00:07:14,078 --> 00:07:18,088
譬如說那我如果把一個封包從這個地方丟到這個網路上面去

137
00:07:18,088 --> 00:07:21,088
那我的cost就是上面寫5

138
00:07:21,088 --> 00:07:26,065
那我如果從這個地方 把一個封包丟到這個網路上面來

139
00:07:26,065 --> 00:07:31,018
我進去這個port 這個port上面寫的是cost=5

140
00:07:31,018 --> 00:07:33,018
這就是所謂的transmission cost

141
00:07:33,018 --> 00:07:37,091
就是我們從一個port把一個封包丟下去

142
00:07:37,091 --> 00:07:39,075
到底要花多少成本

143
00:07:39,075 --> 00:07:42,075
那這個是每一個port的一個參數啦

144
00:07:42,075 --> 00:07:46,038
那我們叫參數 像這上面我們都有給這個例子嘛

145
00:07:46,038 --> 00:07:48,071
那接下來我們就來看說

146
00:07:48,071 --> 00:07:51,065
第三個 就什麼叫做root port

147
00:07:51,065 --> 00:07:53,061
那root port的定義就是說

148
00:07:53,061 --> 00:08:01,011
針對每一個bridge呢 到底我們剛提到

149
00:08:01,011 --> 00:08:04,005
每一個bridge呢都有很多個port

150
00:08:04,005 --> 00:08:07,078
那從這個port呢 會有一條路到那個root

151
00:08:07,078 --> 00:08:09,071
我們剛剛一開始講

152
00:08:09,071 --> 00:08:11,011
我們這個整個演算法裡面

153
00:08:11,011 --> 00:08:14,018
第一件事情 就是要先找這個root bridge

154
00:08:14,018 --> 00:08:17,095
先把那個root找出來 就是很多bridge嘛

155
00:08:17,095 --> 00:08:21,011
那個id最小的那個bridge呢先把它找出來

156
00:08:21,011 --> 00:08:23,071
這個root 然後每一個bridge呢

157
00:08:23,071 --> 00:08:25,008
我們就開始找說

158
00:08:25,008 --> 00:08:28,048
這個bridge呢到這個root呢 他可能會有這條路

159
00:08:28,048 --> 00:08:31,068
因為有迴路嘛 可能有這條路 可能有這條路

160
00:08:31,068 --> 00:08:34,038
有很多條路徑可以到這個root啊

161
00:08:34,038 --> 00:08:40,038
那到底是哪一條路呢 這個路徑的cost最小

162
00:08:40,038 --> 00:08:43,078
那因為這個bridge本身譬如說我有三個port

163
00:08:43,078 --> 00:08:47,045
一個port走這個路 一個port走這個路 一個port走這個路

164
00:08:47,045 --> 00:08:49,025
那都到這個root

165
00:08:49,025 --> 00:08:53,028
這三條路的cost可能不一樣 那哪一個最小？

166
00:08:53,028 --> 00:08:58,085
最小的那個就叫做root port

167
00:08:58,085 --> 00:09:00,055
就針對每一個bridge呢

168
00:09:00,055 --> 00:09:03,008
他到底走哪一個port呢

169
00:09:03,008 --> 00:09:07,028
才會有叫做minimum cost path to the root bridge

170
00:09:07,028 --> 00:09:09,001
minimum cost path

171
00:09:09,001 --> 00:09:12,018
就這個path 三條路或四條路呢

172
00:09:12,018 --> 00:09:14,065
哪一條路的這個cost最小

173
00:09:14,065 --> 00:09:18,098
那最小的這個路徑 經由哪一個port

174
00:09:18,098 --> 00:09:21,035
這個就叫做root port

175
00:09:21,035 --> 00:09:25,035
這個從root port 就是到root的哪一個port

176
00:09:25,035 --> 00:09:28,038
他的所謂的path cost是minimum

177
00:09:28,038 --> 00:09:30,095
那我們就這個port就叫做root port

178
00:09:30,095 --> 00:09:33,091
我們一樣看一下剛剛看到的這個例子

179
00:09:33,091 --> 00:09:36,055
在這個例子裡面我們可以看看說

180
00:09:36,055 --> 00:09:40,071
那到底哪一個port的cost最小 我們隨便找一個

181
00:09:40,071 --> 00:09:44,095
譬如說我們看這個bridge 2

182
00:09:44,095 --> 00:09:48,051
那bridge2本身呢 看這裡 這個

183
00:09:48,051 --> 00:09:53,015
那我們發現到說 他到root呢有這條路

184
00:09:53,015 --> 00:09:55,095
這個地方走上面呢是一條路

185
00:09:55,095 --> 00:09:57,095
我們這個地方黃色的這個

186
00:09:57,095 --> 00:10:00,068
就是我們的root 因為他的id最小

187
00:10:00,068 --> 00:10:03,061
我們已經把這個id先想辦法找出來了嘛

188
00:10:03,061 --> 00:10:05,055
那你注意到 這個bridge2呢

189
00:10:05,055 --> 00:10:07,028
走上面呢有一條路

190
00:10:07,028 --> 00:10:09,035
走下面喔 走下面這個地方

191
00:10:09,035 --> 00:10:11,041
這邊還有另外一條路啊

192
00:10:11,041 --> 00:10:15,005
這也是可以到root 所以以這個例子來看的話

193
00:10:15,005 --> 00:10:17,018
我可能會有兩條路

194
00:10:17,018 --> 00:10:21,028
那兩條路 哪一邊的cost比較小呢

195
00:10:21,028 --> 00:10:22,068
我們cost這樣算

196
00:10:22,068 --> 00:10:26,031
剛提到 我從這裡假設我走上面這一條路的話

197
00:10:26,031 --> 00:10:28,088
我第一個呢是經由這個port嘛

198
00:10:28,088 --> 00:10:32,038
上面這條路 這個port 這個port的cost是10嘛

199
00:10:32,038 --> 00:10:34,055
所以我從這邊送下去

200
00:10:34,055 --> 00:10:37,021
那送下去之後呢 這個root就收到了

201
00:10:37,021 --> 00:10:39,038
所以這一條路的cost就是10

202
00:10:39,038 --> 00:10:43,085
因為我只要花 送一次他就到了這個root

203
00:10:43,085 --> 00:10:47,008
所以這個就是10 可是我們看走下面這條路

204
00:10:47,008 --> 00:10:48,055
走下面這條路呢

205
00:10:48,055 --> 00:10:51,001
他第一個要送下來是要經過這個port

206
00:10:51,001 --> 00:10:53,065
這個port的cost呢也是10

207
00:10:53,065 --> 00:10:58,001
那從這個 經由這個port送下去呢就到了第一個LAN

208
00:10:58,001 --> 00:11:01,015
然後它收起來 bridge4把它收起來之後

209
00:11:01,015 --> 00:11:03,068
他還要再送第二次在這裡

210
00:11:04,068 --> 00:11:09,008
送了第二次呢 他才有辦法經由這個LAN3

211
00:11:09,008 --> 00:11:11,085
然後到這個 所謂的root來

212
00:11:11,085 --> 00:11:14,045
那這個cost呢 是5

213
00:11:14,045 --> 00:11:16,068
也就是說如果這個bridge2呢

214
00:11:16,068 --> 00:11:19,071
他要把封包丟到那個root

215
00:11:19,071 --> 00:11:22,088
走下面的路的話 他要送兩次

216
00:11:22,088 --> 00:11:26,065
第一次在這個地方 第二次在這個地方

217
00:11:26,065 --> 00:11:29,065
那送這兩次把他的cost加起來

218
00:11:29,065 --> 00:11:32,048
他就是15嘛 一個10一個5

219
00:11:32,048 --> 00:11:35,035
把這兩個數字加起來就是他的cost 15

220
00:11:35,035 --> 00:11:40,021
那我們就可以知道說 走上面的應該是比較快速啦

221
00:11:40,021 --> 00:11:42,005
因為他的cost只有10嘛

222
00:11:42,005 --> 00:11:44,068
那走下面的呢他的cost是15啊

223
00:11:44,068 --> 00:11:49,015
那我們當然就走上面 那個上面的數字呢

224
00:11:49,015 --> 00:11:55,081
就是我們剛剛前面要定義的 是所謂的root path cost

225
00:11:55,081 --> 00:12:00,048
就等於說就是 這個我們剛剛有定義的這一部分

226
00:12:00,048 --> 00:12:05,018
就所謂的root path cost 在這個地方

227
00:12:05,018 --> 00:12:07,091
也就是說 針對每一個bridge呢

228
00:12:08,081 --> 00:12:12,088
他要到root bridge 他的cost是多少

229
00:12:12,088 --> 00:12:15,081
那以剛剛那個例子來講的話

230
00:12:15,081 --> 00:12:18,085
針對bridge2呢 他的root port呢就是

231
00:12:18,085 --> 00:12:21,015
就是黃色的那個 root port

232
00:12:21,015 --> 00:12:26,008
因為經由這個port 他到root bridge呢 他的cost最小

233
00:12:26,008 --> 00:12:30,075
那我們再來看其他的這個bridge的狀況好了

234
00:12:30,075 --> 00:12:35,021
譬如說 我們看這個bridge3 如果看bridge3來講的話

235
00:12:35,021 --> 00:12:37,011
一樣 如果看bridge3

236
00:12:37,011 --> 00:12:42,031
他這邊有一條路 那這邊也有一條路 到root

237
00:12:42,031 --> 00:12:46,075
那我們簡單算一下 走上面cost大概就是這邊寫的

238
00:12:46,075 --> 00:12:50,061
就是5啦 那走下面的話呢就是要這個加這個嘛

239
00:12:50,061 --> 00:12:52,068
這兩個要加起來 所以還是走上面

240
00:12:52,068 --> 00:12:56,001
那走上面呢 所以呢 對bridge 3來講的話

241
00:12:56,001 --> 00:12:58,041
他的root port 還是這個

242
00:12:58,041 --> 00:13:01,051
我們用一個R就代表他是root port的意思

243
00:13:01,051 --> 00:13:04,005
也就是說針對bridge3來講的話

244
00:13:04,005 --> 00:13:08,008
他的root port呢 就是上面那個port1啦

245
00:13:08,008 --> 00:13:10,055
所以我們再看一個例子 譬如說

246
00:13:10,055 --> 00:13:14,058
我們挑這個bridge 4 我們挑bridge 4來看

247
00:13:14,058 --> 00:13:16,095
以這個bridge 4來講的話

248
00:13:16,095 --> 00:13:20,048
他要到root bridge呢他有好幾條路

249
00:13:20,048 --> 00:13:22,001
我們先看走下面的話

250
00:13:22,001 --> 00:13:25,075
就這一條路 這樣就可以到

251
00:13:25,075 --> 00:13:28,035
那上面呢 還有不同的路喔

252
00:13:28,035 --> 00:13:31,088
他上面可以走外面這一圈 到root

253
00:13:31,088 --> 00:13:35,015
他也可以走這一邊 到root

254
00:13:35,015 --> 00:13:39,031
就是說以bridge 4來講的話 他到root的路徑呢

255
00:13:39,031 --> 00:13:42,035
還比較多一點 我們就來看

256
00:13:42,035 --> 00:13:46,011
那到底哪一個 哪一條路的這個cost是最小

257
00:13:46,011 --> 00:13:49,038
我們先看走下面 走下面的話他只要送一次

258
00:13:49,038 --> 00:13:51,078
就這個 他只要送一次

259
00:13:51,078 --> 00:13:55,068
他就到這個root了 所以他的cost就等於5

260
00:13:55,068 --> 00:13:58,031
那你走上面的話  這個地方要送一次

261
00:13:58,031 --> 00:14:02,041
那不管到哪一個上面的bridge2或bridge3

262
00:14:02,041 --> 00:14:06,028
他總是走右邊的話 他這邊還要再送一次嘛

263
00:14:06,028 --> 00:14:09,061
那你走左邊的話 這邊要再送一次嘛

264
00:14:09,061 --> 00:14:13,015
那不管走左邊走右邊 都要再加一次的意思啦

265
00:14:13,015 --> 00:14:17,001
所以走上面cost會比較高 走下面的cost比較低

266
00:14:17,001 --> 00:14:23,011
所以呢對bridge4來講的話 就是下面這個最重要的

267
00:14:23,011 --> 00:14:25,095
就下面這個地方 這個就是我的root port

268
00:14:25,095 --> 00:14:29,001
root port就是經由這個port

269
00:14:29,001 --> 00:14:33,018
我有一個最短的路徑可以到root bridge

270
00:14:33,018 --> 00:14:38,015
就是我們針對每一個bridge呢都要去找到這個port

271
00:14:38,015 --> 00:14:40,091
所以我們剛剛這個例子我們已經看到了

272
00:14:40,091 --> 00:14:44,028
對bridge2來講的話呢 我的root port在這裡

273
00:14:44,028 --> 00:14:47,021
對bridge3來講 我的root port在這裡

274
00:14:47,021 --> 00:14:49,058
對bridge4來講 我的root port在這裡

275
00:14:49,058 --> 00:14:52,065
對bridge5來講 我的root port在這裡

276
00:14:52,065 --> 00:14:56,015
也就是說 這bridge2 3 4 5

277
00:14:56,015 --> 00:14:58,088
透過這個黃色的這個port呢

278
00:14:58,088 --> 00:15:02,088
他就有一條最短的路可以到所謂的root bridge

279
00:15:02,088 --> 00:15:05,085
這是最重要的觀念 在這個地方

280
00:15:05,085 --> 00:15:07,085
我們回到前面來看 好

281
00:15:07,085 --> 00:15:10,051
剛提到 所謂的root port

282
00:15:10,051 --> 00:15:12,088
就是說 我們一個bridge有很多個port

283
00:15:12,088 --> 00:15:16,025
經由哪一個port會有一個最短的路徑

284
00:15:16,025 --> 00:15:19,021
可以到 可以到那個root bridge

285
00:15:19,021 --> 00:15:21,078
那root path cost就是 好

286
00:15:21,078 --> 00:15:25,045
那這一條路呢 他的cost是多少錢

287
00:15:25,045 --> 00:15:28,051
這一條路 就是經過這個root port

288
00:15:28,051 --> 00:15:33,028
經由root port到root bridge的這一條路呢

289
00:15:33,028 --> 00:15:36,001
他的所謂的叫做root path cost

290
00:15:36,001 --> 00:15:38,098
那剛剛以前面這個例子來講的話

291
00:15:38,098 --> 00:15:41,048
我們就可以簡單的算一下

292
00:15:41,048 --> 00:15:43,088
如果我們要簡單的算一下可以這麼算

293
00:15:43,088 --> 00:15:46,041
譬如說 這條路

294
00:15:46,041 --> 00:15:49,001
對不起我們看一下這個

295
00:15:49,001 --> 00:15:52,035
假如這一條路呢 他的root path cost多少

296
00:15:52,035 --> 00:15:54,068
他只要5 因為他只要送一次就夠了

297
00:15:54,068 --> 00:15:57,001
那這條路呢 多少

298
00:15:57,001 --> 00:16:00,091
他是10 他送一次就送這個10

299
00:16:00,091 --> 00:16:04,045
那這一條路呢 他的cost是5

300
00:16:04,045 --> 00:16:06,081
這個當然這個例子比較簡單啦

301
00:16:06,081 --> 00:16:08,098
就是說我們任何一個bridge呢

302
00:16:08,098 --> 00:16:10,098
到這個root bridge呢

303
00:16:10,098 --> 00:16:14,041
只要最短的路啦 只要送一次就夠了

304
00:16:14,041 --> 00:16:16,031
那當然如果網路比較複雜的話

305
00:16:16,031 --> 00:16:20,041
可能從這個地方 他要這樣送好幾次才送的到的話

306
00:16:20,041 --> 00:16:25,091
就把它累加起來 就把那個所謂的transmission cost

307
00:16:25,091 --> 00:16:28,078
或者所謂的path cost把它累加起來就可以

308
00:16:28,078 --> 00:16:30,075
好 那最後我們來看一下

309
00:16:30,075 --> 00:16:33,045
什麼叫做designated bridge

310
00:16:33,045 --> 00:16:36,038
那所謂的designated bridge呢 就是說

311
00:16:36,038 --> 00:16:43,058
因為每一個 每一個bridge因為他是一個設備

312
00:16:43,058 --> 00:16:47,091
所以bridge本身他既然是設備 他有運算能力

313
00:16:47,091 --> 00:16:51,005
所以他可以算 剛剛提到

314
00:16:51,005 --> 00:16:54,005
我們不管是跟其他的bridge交換啦

315
00:16:54,005 --> 00:16:56,081
或者要算哪一條路最短啦 他可以算

316
00:16:56,081 --> 00:17:00,085
因為他是一個設備 那我們說 那如果是一個LAN呢

317
00:17:00,085 --> 00:17:03,008
一個網路呢 這個網路本身

318
00:17:03,008 --> 00:17:06,075
他就不是一個所謂的有計算能力的設備啦

319
00:17:06,075 --> 00:17:08,095
譬如他就是一個cable 一條線

320
00:17:08,095 --> 00:17:11,075
那這種網路本身他沒有計算能力啊

321
00:17:11,075 --> 00:17:15,068
所以他到底要覺得說 那到底他要走左邊還是走右邊呢

322
00:17:15,068 --> 00:17:19,008
他自己沒有行為能力 譬如說我們看一下這個例子

323
00:17:19,008 --> 00:17:21,055
我們看 以剛剛這個圖的話呢

324
00:17:21,055 --> 00:17:25,055
我們看LAN2 我們如果看LAN2的話

325
00:17:25,055 --> 00:17:28,055
我們可以發現到說 現在碰到一個問題

326
00:17:28,055 --> 00:17:30,028
像這個LAN2來講的話

327
00:17:30,028 --> 00:17:33,001
我們知道 依LAN2來講的話

328
00:17:33,001 --> 00:17:35,065
他現在這個LAN上面呢接了三個bridge

329
00:17:35,065 --> 00:17:37,065
譬如說bridge2 3 4

330
00:17:37,065 --> 00:17:40,015
現在我們這上面都接在LAN2上面

331
00:17:40,015 --> 00:17:43,095
那我們剛剛bridge2 3 4 他自己都有計算能力

332
00:17:43,095 --> 00:17:45,075
他知道說他應該走上面走下面

333
00:17:45,075 --> 00:17:49,065
他們自己會算出來 但是LAN本身沒有計算能力啊

334
00:17:49,065 --> 00:17:54,008
所以他應該要找一個來 我們叫做代理他的bridge

335
00:17:54,008 --> 00:17:56,095
像這個LAN2裡面 我們有三個bridge

336
00:17:56,095 --> 00:18:00,071
這三個bridge呢 我們一定要找一個呢 來代理他

337
00:18:00,071 --> 00:18:04,018
就是234呢要找一個來代理他

338
00:18:04,018 --> 00:18:05,091
那誰可以代理他呢 一樣

339
00:18:05,091 --> 00:18:08,098
我們就說 好那我們從這個LAN角度來看

340
00:18:08,098 --> 00:18:12,021
從這個LAN呢 他一樣要到這個root bridge呢

341
00:18:12,021 --> 00:18:14,055
一樣有幾條路呢 我們從LAN的角度來看

342
00:18:14,055 --> 00:18:16,015
我可以走這條路

343
00:18:16,015 --> 00:18:18,045
一樣 我可以走上面外面這一條路

344
00:18:18,045 --> 00:18:23,081
我可以走這一條路 依 這個LAN的角度來看

345
00:18:23,081 --> 00:18:27,088
因為他接了三個bridge 所以他就有三條路的意思

346
00:18:27,088 --> 00:18:30,058
他可以透過任何一個bridge呢 出去

347
00:18:30,058 --> 00:18:32,078
然後再找一條路呢 到那個root

348
00:18:32,078 --> 00:18:35,078
所以以這個例子來講的話 等於他有三條路

349
00:18:35,078 --> 00:18:38,045
那一樣 那這三個bridge呢

350
00:18:38,045 --> 00:18:41,061
我們要找一個來代理 我們叫做代理

351
00:18:41,061 --> 00:18:44,008
代理的意思就是說 他要代理這個bridge

352
00:18:44,008 --> 00:18:46,055
所以叫做designated bridge

353
00:18:46,055 --> 00:18:48,055
designated bridge就是代理的bridge

354
00:18:48,055 --> 00:18:52,038
因為LAN本身沒有處理封包的能力

355
00:18:52,038 --> 00:18:54,045
他是一個被動的這種設備而已

356
00:18:54,045 --> 00:18:56,085
所以我們必須把每一個LAN

357
00:18:56,085 --> 00:18:59,098
找到一個能夠代理他的

358
00:18:59,098 --> 00:19:01,061
那代理他的意思就是說

359
00:19:01,061 --> 00:19:04,035
最後呢 如果他找到代理之後呢

360
00:19:04,035 --> 00:19:08,028
所有進出這個LAN的封包

361
00:19:08,028 --> 00:19:11,025
必須經由這個代理的bridge來進出

362
00:19:11,025 --> 00:19:13,091
那以這個例子 一樣我們以這個例子來看

363
00:19:13,091 --> 00:19:17,025
那到底誰是這個LAN2的代理呢

364
00:19:17,025 --> 00:19:21,018
我們發現到 這個是bridge3

365
00:19:21,018 --> 00:19:23,018
bridge3呢才是我們的代理

366
00:19:23,018 --> 00:19:25,068
也就是這個LAN2呢他最後進出呢

367
00:19:25,068 --> 00:19:27,021
他要走這一條路

368
00:19:27,021 --> 00:19:29,085
所有封包進出到這個LAN

369
00:19:29,085 --> 00:19:32,068
都要走這個bridge3 就他的代理

370
00:19:32,068 --> 00:19:35,071
因為他走這條路的cost是最小

371
00:19:35,071 --> 00:19:40,025
剛剛提到 如果LAN2呢他走下面這條路的話呢

372
00:19:40,025 --> 00:19:44,018
他的cost是這個5 他要送一個5嘛

373
00:19:44,018 --> 00:19:48,005
他走上面這裡呢cost也是5 走下面這個地方cost是10

374
00:19:48,005 --> 00:19:51,081
這三條路裡面的cost呢有兩個是一樣的

375
00:19:51,081 --> 00:19:54,068
譬如說走下面的話cost是5

376
00:19:54,068 --> 00:19:57,095
走上面這個右邊的話呢 cost也是5

377
00:19:57,095 --> 00:20:00,031
那這個時候我們用id比較小的

378
00:20:00,031 --> 00:20:02,068
一個是3嘛 一個是4

379
00:20:02,068 --> 00:20:06,041
我們用比較小的來做優先取捨的意思

380
00:20:06,041 --> 00:20:10,098
所以這個例子等於說 他的這個cost就是3

381
00:20:10,098 --> 00:20:14,021
那錯過3的話 相當於說

382
00:20:14,021 --> 00:20:18,011
所有 未來 進入這個LAN的封包呢

383
00:20:18,011 --> 00:20:21,021
就一定要從這個3 這個地方進來

384
00:20:21,021 --> 00:20:24,038
這個封包相當於就把它斷線

385
00:20:24,038 --> 00:20:26,065
就把它斷線的意思

386
00:20:26,065 --> 00:20:28,065
所以每一個LAN本身 我們說

387
00:20:28,065 --> 00:20:31,021
他就要找一個叫做designated bridge

388
00:20:31,021 --> 00:20:33,065
就是代理這個LAN的bridge

389
00:20:33,065 --> 00:20:36,091
好那那個port呢 就叫designated port

390
00:20:36,091 --> 00:20:40,095
像剛剛這個例子 他的第一port呢就是這個port

391
00:20:40,095 --> 00:20:46,005
因為這個port本身 才是真正的所謂的封包進出的port

392
00:20:46,005 --> 00:20:51,051
所以以這個例子 這個LAN2的代理的bridge呢就是bridge3

393
00:20:51,051 --> 00:20:55,015
代理的port呢就是bridge3的port2

394
00:20:55,015 --> 00:20:59,005
那這個就是我們這邊先做一個基本的介紹

395
00:20:59,005 --> 00:21:03,008
就是我們先把等下要介紹這個spanning tree的這個方法

396
00:21:03,008 --> 00:21:05,015
那我們先把一些角色呢

397
00:21:05,015 --> 00:21:06,098
這個先做一個介紹

398
00:21:06,098 --> 00:21:08,098


