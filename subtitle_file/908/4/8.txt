1
00:00:09,015 --> 00:00:13,068
好 我們介紹這個spanning tree的這個所謂的演算法

2
00:00:13,068 --> 00:00:15,018
怎麼找到這個spanning tree

3
00:00:15,018 --> 00:00:18,018
那在簡單的review一下就是說

4
00:00:18,018 --> 00:00:23,028
我們三個步驟 第一個我們先找出這個bridge id最小的

5
00:00:23,028 --> 00:00:25,038
所謂的root bridge 那第二個呢

6
00:00:25,038 --> 00:00:29,045
針對每一個bridge呢 我們找出他的哪一個port呢

7
00:00:29,045 --> 00:00:31,075
叫做R port 那針對每一個LAN

8
00:00:31,075 --> 00:00:35,098
找到能夠代理這個LAN的這個bridge 或者這個port

9
00:00:35,098 --> 00:00:37,051
這三個都找出來之後呢

10
00:00:37,051 --> 00:00:39,098
我們講這個spanning tree呢就找出來了

11
00:00:39,098 --> 00:00:42,031
所以我們來看一下 這個spanning tree本身

12
00:00:42,031 --> 00:00:44,048
到底有什麼特色

13
00:00:44,048 --> 00:00:46,038
我們說 第一個

14
00:00:46,038 --> 00:00:50,061
這個802.11這個演算法呢 他找到的spanning tree就是說

15
00:00:50,061 --> 00:00:57,058
針對每一個bridge 他有很多路徑呢可以到這個root

16
00:00:57,058 --> 00:01:01,051
那到這個root bridge呢 最小的那個路徑

17
00:01:01,051 --> 00:01:05,011
cost最小的路徑 就會在這個spanning tree裡面

18
00:01:05,011 --> 00:01:08,025
這是第一個特色 就是說任何一個bridge

19
00:01:08,025 --> 00:01:15,055
他到root bridge的最短路徑就會是spanning tree的一部分

20
00:01:15,055 --> 00:01:17,075
就spanning tree會包含這條路徑

21
00:01:17,075 --> 00:01:20,055
那第二點就是說 針對每一個LAN

22
00:01:20,055 --> 00:01:24,085
一樣 針對每一個LAN 他可能接了很多bridge

23
00:01:24,085 --> 00:01:29,011
那透過哪一個bridge呢 他會有一個最短的路徑

24
00:01:29,011 --> 00:01:32,061
到那個root bridge 那這條路徑呢

25
00:01:32,061 --> 00:01:35,091
也會在spanning tree裡面 我們講

26
00:01:35,091 --> 00:01:37,041
針對一個bridge

27
00:01:37,041 --> 00:01:41,048
他到root的最短的路徑會在spanning tree裡面

28
00:01:41,048 --> 00:01:46,005
針對每一個LAN 他到root bridge最短的路徑呢

29
00:01:46,005 --> 00:01:48,078
也會在這個spanning tree裡面

30
00:01:48,078 --> 00:01:50,045
這是我們找的spanning tree喔

31
00:01:50,045 --> 00:01:52,035
所以 我們要特別強調

32
00:01:52,035 --> 00:01:54,078
我們從找出來的spanning tree呢

33
00:01:54,078 --> 00:01:58,068
他不是一般我們在圖學裡面講的

34
00:01:58,068 --> 00:02:02,028
所謂的minimum cost spanning tree

35
00:02:02,028 --> 00:02:05,051
一般我們講的minimum cost spanning tree就是說

36
00:02:05,051 --> 00:02:09,015
你給我一個graph 那有很多所謂的vertex 很多edge

37
00:02:09,015 --> 00:02:14,015
每一個edge呢 有一個link的值我們叫一個cost

38
00:02:14,015 --> 00:02:18,038
那正統的所謂的minimum cost spanning tree就是說

39
00:02:18,038 --> 00:02:21,028
好吧 那你給我一個graph 我找到一個spanning tree

40
00:02:21,028 --> 00:02:25,055
然後這個edge呢 他的cost加總呢是最小的

41
00:02:25,055 --> 00:02:29,085
就是說譬如你有一個n個node

42
00:02:29,085 --> 00:02:34,008
那竟然是一個spanning tree 沒有root就找n-1個edge

43
00:02:34,008 --> 00:02:36,018
譬如說你有5個node就找4個edge

44
00:02:36,018 --> 00:02:37,078
你有8個node就找7個edge

45
00:02:37,078 --> 00:02:41,038
把這個7個edge找出來 把這個node連起來

46
00:02:41,038 --> 00:02:44,005
但這個edge的cost呢加總要最小

47
00:02:44,005 --> 00:02:47,015
這個是傳統的叫minimum cost的spanning tree

48
00:02:47,015 --> 00:02:50,075
我們要找的圖是這個 我們要找的是說

49
00:02:50,075 --> 00:02:53,075
你給我先把root找出來 然後所有的bridge呢

50
00:02:53,075 --> 00:02:57,021
找到這個root最短的路徑 cost最小的路徑

51
00:02:57,021 --> 00:03:00,031
每一個LAN 到這個root最小的路徑

52
00:03:00,031 --> 00:03:04,058
這樣子 這些最小的路徑的聯集

53
00:03:04,058 --> 00:03:06,058
就是我們的spanning tree

54
00:03:06,058 --> 00:03:07,088
所以我們的spanning tree呢

55
00:03:07,088 --> 00:03:11,035
跟一般graph裡面所謂的minimum cost spanning tree呢

56
00:03:11,035 --> 00:03:12,075
是不一樣的

57
00:03:12,075 --> 00:03:13,098
這個要特別注意一下

58
00:03:13,098 --> 00:03:16,088
好 那還有一點非常非常重要就是說

59
00:03:16,088 --> 00:03:19,065
根據我們剛剛講那種方法

60
00:03:19,065 --> 00:03:23,038
就是說每一個bridge呢 找一個最短的路到root

61
00:03:23,038 --> 00:03:25,085
每一個LAN找一個最短的路到那個root

62
00:03:25,085 --> 00:03:28,065
所以呢我們說 這個spanning tree呢

63
00:03:28,065 --> 00:03:32,025
叫做predictable 或者deterministic

64
00:03:32,025 --> 00:03:34,005
就是說你給我一個網路的拓墣呢

65
00:03:34,005 --> 00:03:36,038
這個spanning tre我是可以找出來的

66
00:03:36,038 --> 00:03:39,085
他是可預測的 他是可具有決定性的

67
00:03:39,085 --> 00:03:42,015
就是你給我一個這個網路的架構圖

68
00:03:42,015 --> 00:03:45,015
我就可以告訴你這個spanning tree是什麼樣子

69
00:03:45,015 --> 00:03:46,091
我們底下就來看一個例子

70
00:03:46,091 --> 00:03:50,065
好 那在這個例子給之前 我們就是說

71
00:03:50,065 --> 00:03:55,081
給我一個這種用bridge所相連的網路 我們說

72
00:03:55,081 --> 00:04:01,021
他的spanning tree呢 是可以用人工把它算出來的

73
00:04:01,021 --> 00:04:06,031
可以把它計算出來 事實上因為有剛剛這樣的規則嘛

74
00:04:06,031 --> 00:04:08,081
底下我們就來看一個例子

75
00:04:08,081 --> 00:04:10,095
在這個例子裡面我們注意到

76
00:04:10,095 --> 00:04:15,021
我們的網路稍微有一點點大啦

77
00:04:15,021 --> 00:04:18,071
就是說我們這裡面呢 有八個bridge

78
00:04:18,071 --> 00:04:21,051
注意到我們這個圖裡面 我們有八個bridge

79
00:04:21,051 --> 00:04:24,031
那我們有好多好多LAN接起來

80
00:04:24,031 --> 00:04:29,001
接下來我們就要來看說 假設這個bridge呢有八個

81
00:04:29,001 --> 00:04:32,051
他的id分別是10 20 30 40

82
00:04:32,051 --> 00:04:36,068
一直到80 所以第一個我們先找root是誰

83
00:04:36,068 --> 00:04:39,021
在這個例子裡面我們也找到啦

84
00:04:39,021 --> 00:04:42,091
因為root就是id最小的 在這個例子裡面

85
00:04:42,091 --> 00:04:47,071
就是黃色的這個bridge1 他的id最小 所以他就是我們的root

86
00:04:47,071 --> 00:04:51,095
底下我們就來看 因為我們所謂的predictable就是說

87
00:04:51,095 --> 00:04:55,021
是可以用算出來的 我們可以直接就可以算出來

88
00:04:55,021 --> 00:04:56,055
我們來看第一個 譬如說

89
00:04:56,055 --> 00:04:59,018
假設我們spanning tree找出來之後呢

90
00:04:59,018 --> 00:05:01,088
我們這個就會有這個root

91
00:05:01,088 --> 00:05:07,018
他會送 我看到這個紫色 這個叫所謂的BPDU

92
00:05:07,018 --> 00:05:09,081
剛剛有提到 因為這個root本身

93
00:05:09,081 --> 00:05:15,068
他要維護這個所謂的tree的這個正確性 正常運作

94
00:05:15,068 --> 00:05:18,055
所以他會 每隔一段時間

95
00:05:18,055 --> 00:05:21,035
標準裡面大概就是一秒 或者兩秒

96
00:05:21,035 --> 00:05:22,048
我們叫做hello time

97
00:05:22,048 --> 00:05:26,065
他就會送出這個所謂的BPDU的封包

98
00:05:26,065 --> 00:05:29,075
那這個封包就會沿著spanning tree

99
00:05:29,075 --> 00:05:32,025
送到整個網路的各個角落

100
00:05:32,025 --> 00:05:36,011
你注意到 譬如說 我們看上面這一條路

101
00:05:36,011 --> 00:05:38,018
如果你看上面這一條路的話

102
00:05:38,018 --> 00:05:41,075
他是走這樣子 這個圖他是走這樣過來的喔

103
00:05:41,075 --> 00:05:46,098
注意他走這條路 那這裡就是因為說

104
00:05:46,098 --> 00:05:50,031
我們沿著spanning tree走 那我們看下面的話

105
00:05:50,031 --> 00:05:52,091
他就走這裡是一條路嘛 走這邊

106
00:05:52,091 --> 00:05:56,051
啊另外一條路可能就是走這邊 進到這個LAN

107
00:05:56,051 --> 00:06:02,025
所以你注意到每一個LAN呢 進到這個LAN的封包

108
00:06:02,025 --> 00:06:06,048
一定都是走他的代理的那個port 代理的port

109
00:06:06,048 --> 00:06:09,038
所以我們如果再仔細看一下 代理的port在哪裡呢

110
00:06:09,038 --> 00:06:12,065
針對這個LAN2 代理的port在這個地方

111
00:06:12,065 --> 00:06:18,018
所以進到這個LAN2的封包 一定從這個代理的port進去

112
00:06:18,018 --> 00:06:21,001
我們在看LAN4 最下面這個LAN

113
00:06:21,001 --> 00:06:23,048
他的代理的port呢 在這個地方

114
00:06:23,048 --> 00:06:27,035
所以進到這個LAN的 也都是從那個代理的port

115
00:06:27,035 --> 00:06:31,018
所以我們從這個動畫裡面 我們就可以知道說

116
00:06:31,018 --> 00:06:34,071
這個代理port 它的意義就是說

117
00:06:34,071 --> 00:06:39,058
進到這個LAN裡面的這個port呢

118
00:06:39,058 --> 00:06:41,025
一定要經過這個pot

119
00:06:41,025 --> 00:06:45,078
進到這個LAN的封包 一定要經過這個代理的port進去

120
00:06:45,078 --> 00:06:48,091
就BPDU這一塊 那我們接下來就來看說

121
00:06:48,091 --> 00:06:52,001
因為我們說這個spanning tree是可預測的

122
00:06:52,001 --> 00:06:55,071
或者說可計算的 我們就一個一個來看每一個bridge

123
00:06:55,071 --> 00:06:59,051
我們先看bridge7 就最右上角這個地方

124
00:06:59,051 --> 00:07:01,028
我們用紅色框框把它匡起來的

125
00:07:01,028 --> 00:07:06,028
這個 對這個bridge7來講的話 他到這個root呢

126
00:07:06,028 --> 00:07:11,081
其實路徑有兩個啦 一個就是我們講 直接走下來

127
00:07:11,081 --> 00:07:15,028
這個路徑 一個就是走上面

128
00:07:15,028 --> 00:07:18,081
上面這邊有很多路了 反正這個路很多

129
00:07:18,081 --> 00:07:21,051
都可以到這個root 不過很明顯的

130
00:07:21,051 --> 00:07:24,071
如果我們看這個bridge7來講的話

131
00:07:24,071 --> 00:07:30,035
他走下面的路 直接到這個root呢

132
00:07:30,035 --> 00:07:34,075
他的cost只有5而已嘛 就是這個這個5 這個地方

133
00:07:34,075 --> 00:07:40,055
所以走上面當然就cost更高 所以我們就讓他走下面啦

134
00:07:40,055 --> 00:07:43,058
所以從這個例子來看 對bridge7來講

135
00:07:43,058 --> 00:07:46,095
他的root port就是下面的這個 這個port

136
00:07:46,095 --> 00:07:48,045
所以我們這邊有一個root port

137
00:07:48,045 --> 00:07:49,081
再來我們看另外一個bridge

138
00:07:49,081 --> 00:07:53,081
假設我們看最右下角的這個bridge

139
00:07:53,081 --> 00:07:55,025
就是bridge8

140
00:07:55,025 --> 00:07:59,045
bridge8呢 他到這個root呢 也有兩條路

141
00:07:59,045 --> 00:08:02,065
一個是走上面的 譬如說我們看一下

142
00:08:02,065 --> 00:08:04,081
走上面就是走這一條路

143
00:08:04,081 --> 00:08:08,085
一個是走右邊 走左邊對不起

144
00:08:08,085 --> 00:08:11,038
左邊就是走這一條路 走這條路

145
00:08:11,038 --> 00:08:14,095
當然她還可以繞更遠的路啦 到這邊也都算

146
00:08:14,095 --> 00:08:20,008
就是說事實上路很多 但是呢 我們也很簡單的看出來

147
00:08:20,008 --> 00:08:23,055
這個直接走上面的port1呢是最短的路

148
00:08:23,055 --> 00:08:30,021
因為他cost只有5而已嘛 所以我們還是讓他走這個port

149
00:08:30,021 --> 00:08:33,001
這個port變成是我們的root port

150
00:08:33,001 --> 00:08:38,055
所以對bridge8來講的話 他就是port1 就是他的root port

151
00:08:38,055 --> 00:08:40,031
我們再來看 譬如說

152
00:08:40,031 --> 00:08:44,081
現在是bridge6 我們看bridge6

153
00:08:44,081 --> 00:08:47,071
bridge6就稍微離這個bridge root bridge

154
00:08:47,071 --> 00:08:48,091
比較稍微遠一點點了

155
00:08:48,091 --> 00:08:51,071
所以他的路徑哪一個好 哪一個比較不好

156
00:08:51,071 --> 00:08:55,065
就比較沒那麼明顯了 兩邊我們先看一下他

157
00:08:55,065 --> 00:09:01,075
對這個bridge6來說的話 他譬如說我可以走這條路

158
00:09:01,075 --> 00:09:06,041
我可以走這條路 我至少這兩條路呢

159
00:09:06,041 --> 00:09:10,041
可能就沒有那麼明顯 哪一個好哪一個不好啦

160
00:09:10,041 --> 00:09:14,068
我們來看 如果走上面這條路呢 我的cost是多少

161
00:09:14,068 --> 00:09:17,031
cost就是說在這個路徑上面

162
00:09:17,031 --> 00:09:22,038
你要傳送 transmission的cost的加總

163
00:09:22,038 --> 00:09:26,085
所以如果走上面這條路的話 他要加的就是這個

164
00:09:26,085 --> 00:09:29,068
這個 跟這個

165
00:09:29,068 --> 00:09:34,078
因為 走上面這條路會經過bridge6 bridge7

166
00:09:34,078 --> 00:09:38,088
那6的 bridge6的傳輸 就是5 cost 5

167
00:09:38,088 --> 00:09:42,088
bridge7的傳輸呢 傳輸的這一塊 他cost也是5

168
00:09:42,088 --> 00:09:46,051
所以走上面這一條路呢 他的total cost就是等於10

169
00:09:46,051 --> 00:09:50,085
那如果走下面這個的話呢 等於說要先到這個一次

170
00:09:50,085 --> 00:09:54,021
到這個地方 那 這個cost就比較高了

171
00:09:54,021 --> 00:09:57,005
等於說要把這個加總跟這個加總

172
00:09:57,005 --> 00:10:00,048
這兩個加起來cost比較高 所以他就

173
00:10:00,048 --> 00:10:04,071
這兩條路的比較之下 可能走上面的這條路呢

174
00:10:04,071 --> 00:10:08,078
會比較 cost比較小一點 所以對bridge 6來講的話

175
00:10:08,078 --> 00:10:12,038
那他就走上面 所以他就走上面

176
00:10:12,038 --> 00:10:16,031
所以他的root port呢 也就是port1

177
00:10:16,031 --> 00:10:19,031
我們再來看另外一個例子 譬如說看這個bridge

178
00:10:23,011 --> 00:10:26,058
他也是有好幾條路可以到這個root

179
00:10:26,058 --> 00:10:29,041
像走下面的這是一條路 這個

180
00:10:29,041 --> 00:10:31,068
走下面這裡 走上面

181
00:10:31,068 --> 00:10:33,048
也可以 這樣也可以到

182
00:10:33,048 --> 00:10:36,045
所以對他來講 他要有兩條路

183
00:10:36,045 --> 00:10:40,025
那我們看 那走下面的話cost是15啦

184
00:10:40,025 --> 00:10:42,035
下面的話事實上只要送一次

185
00:10:42,035 --> 00:10:45,058
那走上面的話 就是要這裡送一次

186
00:10:45,058 --> 00:10:48,065
這裡送一次 這裡還要送一次

187
00:10:48,065 --> 00:10:52,041
等於他要把三次加起來 這個是大於15

188
00:10:52,041 --> 00:10:56,085
所以對bridge 3來講的話 他還是走下面比較划算

189
00:10:56,085 --> 00:10:58,085
所以他的root port呢 就是port2

190
00:10:58,085 --> 00:11:03,018
我們再來看一個 好 如果是bridge5的話呢

191
00:11:03,018 --> 00:11:07,065
一樣 他也可以有兩條路呢 可以到這個root bridge

192
00:11:07,065 --> 00:11:10,055
一個是走上面的 走這裡

193
00:11:10,055 --> 00:11:13,068
一個是走右邊 可能走這裡

194
00:11:13,068 --> 00:11:15,048
這樣子 這兩條路

195
00:11:15,048 --> 00:11:19,095
那這兩條路我們用算的就可以算出來 走上面的比較短

196
00:11:19,095 --> 00:11:22,058
所以他的root port呢 就是port1

197
00:11:22,058 --> 00:11:25,085
好 那我們再來看 另外一個

198
00:11:25,085 --> 00:11:32,095
所謂的最左上角的bridge2 那bridge2因為他沒有迴圈

199
00:11:32,095 --> 00:11:37,068
所以他本身比較單純 因為他本身沒有在那個loop裡面

200
00:11:37,068 --> 00:11:41,061
所以他唯一可以到這個root bridge的

201
00:11:41,061 --> 00:11:43,081
也就是只有一個port而已嘛

202
00:11:43,081 --> 00:11:46,061
所以他這個root port就比較簡單 就這個port

203
00:11:46,061 --> 00:11:49,055
因為他只有唯一的port可以到這個root去

204
00:11:49,055 --> 00:11:53,065
再來看一個 好 那接下來我們就來看

205
00:11:53,065 --> 00:11:58,065
看LAN 我們剛提到是說 每一個bridge本身

206
00:11:58,065 --> 00:12:02,085
他都可以很容易算出來說他的root port是哪一個port

207
00:12:02,085 --> 00:12:06,068
因為我可能好幾個路徑嘛 我就找那個最短的路徑

208
00:12:06,068 --> 00:12:09,058
那是算得出來 我們叫做predictable 他是可以算得出來

209
00:12:09,058 --> 00:12:12,058
那我接下來就看LAN LAN比較複雜一點

210
00:12:12,058 --> 00:12:14,058
因為LAN本身自己沒有運算能力

211
00:12:14,058 --> 00:12:17,018
所以他要靠跟他先連的bridge

212
00:12:17,018 --> 00:12:19,051
找找看 所以我們看那個LAN2

213
00:12:19,051 --> 00:12:21,095
這個LAN2很特別 我們看一下

214
00:12:21,095 --> 00:12:25,025
LAN2本身可以到這個root的路徑

215
00:12:25,025 --> 00:12:31,015
如果我們走上面 這個就這條路沒有到root

216
00:12:31,015 --> 00:12:33,071
因為這條路是更遠離那個root

217
00:12:33,071 --> 00:12:36,005
但至少呢 從這個LAN來講的話

218
00:12:36,005 --> 00:12:39,015
我們可以有一條路走這個地方 一條路走這個地方

219
00:12:39,015 --> 00:12:42,085
一條路走這個地方 我有三條路

220
00:12:42,085 --> 00:12:44,065
就對這個LAN來講的話

221
00:12:44,065 --> 00:12:49,038
我可以走bridge6 可以走bridge3 可以走bridge4

222
00:12:49,038 --> 00:12:51,081
我有三個bridge呢 我都可以到root

223
00:12:51,081 --> 00:12:55,071
那我們就算 那哪一個路徑最小

224
00:12:55,071 --> 00:12:59,051
我如果走上面 透過bridge6的話

225
00:12:59,051 --> 00:13:06,008
我的傳輸就是一個6一個7 所以我走上面這條路

226
00:13:06,008 --> 00:13:09,095
我的cost就是10 這是可以算出來的

227
00:13:09,095 --> 00:13:12,051
那如果我走 譬如說走bridge3

228
00:13:12,051 --> 00:13:15,038
他的cost 就是15

229
00:13:15,038 --> 00:13:18,051
因為他要送經過這個port是15

230
00:13:18,051 --> 00:13:22,028
那如果走下面bridge4 他也是15

231
00:13:22,028 --> 00:13:25,071
所以對這個LAN來講的話 我當然是走

232
00:13:25,071 --> 00:13:29,028
上面的bridge6 他是cost是最小的

233
00:13:29,028 --> 00:13:31,081
所以 對於這個LAN來講

234
00:13:31,081 --> 00:13:33,081
所以注意到我們這個spanning tree

235
00:13:33,081 --> 00:13:36,038
就是要 等於說這個LAN

236
00:13:36,038 --> 00:13:39,038
他的代理的bridge呢就是bridge6

237
00:13:39,038 --> 00:13:43,071
那每一個LAN呢 會有一個D port 注意到

238
00:13:43,071 --> 00:13:47,088
就是在這個地方 D port就這樣出來

239
00:13:47,088 --> 00:13:51,098
這個D port就是說 這個就是代理這個LAN的port

240
00:13:51,098 --> 00:13:55,098
就是bridge6的port2 就是他的D port就出來

241
00:13:55,098 --> 00:13:59,061
這是我們從LAN2的角度來看 我們也可以這樣算出來

242
00:13:59,061 --> 00:14:03,015
我們再來看一個 譬如說LAN7

243
00:14:03,015 --> 00:14:06,038
LAN7 然後一樣 你看他LAN7本身

244
00:14:06,038 --> 00:14:10,081
要到這個root bridge本身 他可以走這條路啊

245
00:14:10,081 --> 00:14:15,095
他也可以走這條路 等於說他的路也有兩個可以選

246
00:14:15,095 --> 00:14:19,001
因為他接兩個bridge 我們就去算一下

247
00:14:19,001 --> 00:14:22,098
對於LAN7來講的話 走bridge7

248
00:14:22,098 --> 00:14:26,041
cost只有等於 這個cost等於5

249
00:14:26,041 --> 00:14:28,001
因為他只要送一次而已

250
00:14:28,001 --> 00:14:31,051
那走這個 這個另外這個bridge6的話

251
00:14:31,051 --> 00:14:36,025
這個cost就比較多 要這一個加這一個

252
00:14:36,025 --> 00:14:42,051
這cost大概是20 所以比較之下我們還是讓LAN7

253
00:14:42,051 --> 00:14:45,035
走右邊的 就走這個bridge7

254
00:14:45,035 --> 00:14:47,031
這個就我們也就把它算出來

255
00:14:47,031 --> 00:14:49,048
好 再來看一個例子

256
00:14:49,048 --> 00:14:51,038
譬如說 這個LAN3

257
00:14:51,038 --> 00:14:56,098
這個LAN3本身接的bridge 就接了5個 包含root bridge

258
00:14:56,098 --> 00:15:01,045
那如果是跟root bridge接的話 那最簡單

259
00:15:01,045 --> 00:15:05,065
因為他要到root 一定是走root這一條

260
00:15:05,065 --> 00:15:08,008
是最 因為他已經直接連在一起了

261
00:15:08,008 --> 00:15:10,098
就這一條 直接連在一起了 就直接連了

262
00:15:10,098 --> 00:15:15,088
跟root bridge連在一起的 就不用再經過什麼走這一條

263
00:15:15,088 --> 00:15:17,045
走這一條 走這一條

264
00:15:17,045 --> 00:15:20,035
那多多餘 因為我根本就跟root接在一起了

265
00:15:20,035 --> 00:15:22,091
所以跟root 接在一起的

266
00:15:22,091 --> 00:15:26,095
他的那個LAN的代理呢 一定就是root bridge

267
00:15:26,095 --> 00:15:32,001
所以這句話的結論就是說 我們注意觀察一下

268
00:15:32,001 --> 00:15:36,008
這個root bridge本身 就是root bridge本身

269
00:15:36,008 --> 00:15:39,041
他的每一個port 都是D port

270
00:15:39,041 --> 00:15:42,005
他的每一個port 都是D port

271
00:15:42,005 --> 00:15:44,098
注意到 像這個port也是一個D port

272
00:15:44,098 --> 00:15:50,035
就是說 root bridge他有很多個port

273
00:15:50,035 --> 00:15:52,081
他每一個port呢接一個LAN

274
00:15:52,081 --> 00:15:56,038
那他每一個port呢都是那個LAN的代理的port

275
00:15:56,038 --> 00:16:00,021
因為那個LAN到這個root呢就直接到了

276
00:16:00,021 --> 00:16:03,071
不用再經過其他的bridge 所以這是他的特色之一

277
00:16:03,071 --> 00:16:08,001
好 那我們再來看一下其他的LAN 很快地看一下

278
00:16:08,001 --> 00:16:10,091
譬如說LAN4 那對於LAN4來講的話

279
00:16:10,091 --> 00:16:13,051
他有 我們講一樣 有

280
00:16:13,051 --> 00:16:16,088
他可以走 像可以走左邊這邊

281
00:16:16,088 --> 00:16:21,078
這個是可以到root 可以走右邊這邊到root

282
00:16:21,078 --> 00:16:25,031
他有兩條路 我們去看這兩條路哪一個cost比較小

283
00:16:25,031 --> 00:16:29,045
走左邊 他只要送一個cost等於5

284
00:16:29,045 --> 00:16:33,058
走右邊也是送一個cost等於5

285
00:16:33,058 --> 00:16:34,078
所以這兩個cost就是一樣

286
00:16:34,078 --> 00:16:37,088
那我們剛剛有提到 當我的cost一樣的時候

287
00:16:37,088 --> 00:16:40,038
我們走id比較小 那這個bridge

288
00:16:40,038 --> 00:16:44,058
5跟8比較起來 5比較小 所以他就走左邊

289
00:16:44,058 --> 00:16:49,011
所以這個就可以很快地就知道說 這個LAN4

290
00:16:49,011 --> 00:16:52,071
他的代理 是在走bridge5

291
00:16:52,071 --> 00:16:55,031
好 那我們看一下LAN6

292
00:16:55,031 --> 00:16:59,025
那LAN6本身因為跟root bridge直接接在一起

293
00:16:59,025 --> 00:17:03,031
所以他就直接挑這個root bridge的這個port就是他的D port

294
00:17:03,031 --> 00:17:06,095
最後最後就是 看左上角 這個LAN1

295
00:17:06,095 --> 00:17:11,005
LAN1本身 因為他 跟它相連的bridge只有一個

296
00:17:11,005 --> 00:17:14,025
所以他的代理的bridge也不用選 只有一個而已

297
00:17:14,025 --> 00:17:16,061
所以他的代理的bridge就是bridge2

298
00:17:16,061 --> 00:17:20,058
然後他的port呢就是 D port呢就是那個port1

299
00:17:20,058 --> 00:17:25,035
所以我們把這個LAN 最後再看一下最右下角那個LAN5

300
00:17:25,035 --> 00:17:30,048
LAN5跟LAN1呢也是一樣 因為它相連的bridge只有一個

301
00:17:30,048 --> 00:17:33,061
所以代理的bridge跟代理的port呢也只有一個

302
00:17:33,061 --> 00:17:36,008
所以大概就可以馬上就算出來

303
00:17:36,008 --> 00:17:39,075
好所以從這個地方我們就可以發現到

304
00:17:39,075 --> 00:17:43,011
我們其實每一個bridge 我們雖然很多路徑

305
00:17:43,011 --> 00:17:45,081
但是我可以算出來 哪一個是他的root bridge

306
00:17:45,081 --> 00:17:47,071
每一個LAN 可以算出來

307
00:17:47,071 --> 00:17:50,011
哪一個是他的所謂的designated bridge

308
00:17:50,011 --> 00:17:51,065
designated port  就D port

309
00:17:51,065 --> 00:17:56,078
好所以你注意到 這個架構上面我們就針對

310
00:17:56,078 --> 00:17:59,001
注意看一下 我們看一下

311
00:17:59,001 --> 00:18:03,008
每一個bridge 我們有一個port

312
00:18:03,008 --> 00:18:05,078
就所謂的黃色的 就所謂的R port

313
00:18:05,078 --> 00:18:08,078
每一個bridge他有一個R port

314
00:18:08,078 --> 00:18:10,055
每一個bridge都有一個R port

315
00:18:10,055 --> 00:18:15,005
然後 這個R port 就是黃色這個R port 這個

316
00:18:15,005 --> 00:18:17,018
那每一個LAN呢都有一個D port

317
00:18:17,018 --> 00:18:19,065
每一個LAN有一個D port

318
00:18:19,065 --> 00:18:22,011
就是說每一個bridge找到他的R port

319
00:18:22,011 --> 00:18:23,075
每一個LAN找到他的D port

320
00:18:23,075 --> 00:18:27,075
那我們就把這個spanning tree呢 我們就找出來

321
00:18:27,075 --> 00:18:29,071
所以我們講他是可預測的

322
00:18:29,071 --> 00:18:32,041
那你注意到 我們再注意到就是說

323
00:18:32,041 --> 00:18:36,031
我們現在這個紫色的這個 所謂的BPDU

324
00:18:36,031 --> 00:18:41,098
他在傳送的時候 他就一定沿著spanning tree傳送

325
00:18:41,098 --> 00:18:44,091
他會沿著spanning tree傳送 那我們注意到

326
00:18:44,091 --> 00:18:50,078
像這個紅色的這兩塊 這個叫做blocking

327
00:18:50,078 --> 00:18:54,081
我們剛剛的演算法裡面 這兩個port

328
00:18:54,081 --> 00:18:57,028
他不扮演D port也不扮演R port

329
00:18:57,028 --> 00:19:00,061
所以他就會有一個block 那被block就是說

330
00:19:00,061 --> 00:19:02,098
這個封包呢 他是不會從這邊進去的

331
00:19:02,098 --> 00:19:06,081
這個地方相當於他是暫時斷線 所以目前

332
00:19:06,081 --> 00:19:09,048
對不起 還有這個 下面這個地方

333
00:19:09,048 --> 00:19:12,061
這三個port 就暫時有點是讓他斷線了

334
00:19:12,061 --> 00:19:15,045
那讓他斷線之後呢 我們這個封包

335
00:19:15,045 --> 00:19:19,051
所有的封包傳送呢 就會沿著spanning tree走了

336
00:19:19,051 --> 00:19:22,061
也就是說如果這個時候 我們有一個station

337
00:19:22,061 --> 00:19:24,011
假設他是接在這個地方

338
00:19:24,011 --> 00:19:28,011
那有一個station是接在這個地方 這樣子

339
00:19:28,011 --> 00:19:32,068
那這兩個station他們想要送封包 就他想把一個封包丟給他

340
00:19:32,068 --> 00:19:35,091
其實他們兩個很靠近

341
00:19:35,091 --> 00:19:38,088
因為他們中間只有一個bridge3把他接起來而已

342
00:19:38,088 --> 00:19:43,035
但是呢 即使這個封包要送 他也必須沿著spanning tree

343
00:19:43,035 --> 00:19:46,021
那他們之間的spanning tree就是這一條路

344
00:19:46,021 --> 00:19:49,085
就這樣子 繞繞繞繞繞

345
00:19:49,085 --> 00:19:52,075
這樣子繞過來 就是說

346
00:19:52,075 --> 00:19:57,028
他們雖然實際的地理的這個連接呢可能非常的靠近

347
00:19:57,028 --> 00:19:59,091
可是他們之間的封包要傳送的話

348
00:19:59,091 --> 00:20:02,038
就一定要沿著這個spanning tree走

349
00:20:02,038 --> 00:20:05,098
所以我們在這章例子裡面呢 就告訴我們說

350
00:20:05,098 --> 00:20:10,075
這個spanning tree呢 其實他是可以算得出來的

351
00:20:10,075 --> 00:20:13,011
如果我們是集中的演算法

352
00:20:13,011 --> 00:20:15,071
我們是可以看到這個網路的架構圖

353
00:20:15,071 --> 00:20:18,075
我們就可以知道他的spanning tree長什麼樣子

354
00:20:18,075 --> 00:20:24,051
只是說 在這個bridge裡面 因為沒有一個集中演算法

355
00:20:24,051 --> 00:20:28,001
他必須靠分散式的演算法 剛剛我們介紹的

356
00:20:28,001 --> 00:20:33,055
這個整個過程 讓每一個bridge 找到他的R port

357
00:20:33,055 --> 00:20:36,005
每一個LAN 找到他的D port

358
00:20:36,005 --> 00:20:39,048
那我們這個spanning tree呢 基本上就把它建起來了

359
00:20:39,048 --> 00:20:44,028
那我們說這種bridge LAN 要傳送封包

360
00:20:44,028 --> 00:20:46,091
或著要所謂的做address learning

361
00:20:46,091 --> 00:20:51,048
他的條件 就是一定要先把spanning tree找出來

362
00:20:51,048 --> 00:20:55,038
在spanning tree沒有找出來之前 封包不可以轉送

363
00:20:55,038 --> 00:20:59,071
因為一轉送就有迴路 我們就提到這兩個最重要的問題

364
00:20:59,071 --> 00:21:03,041
因為如果有迴路的話 封包可能會重複接收

365
00:21:03,041 --> 00:21:05,065
然後address learning也會錯誤

366
00:21:05,065 --> 00:21:09,021
所以當我們把一個網路用bridge一連起來的時候

367
00:21:09,021 --> 00:21:14,075
一開機 第一件事情 就開始交換找spanning tree

368
00:21:14,075 --> 00:21:18,075
spanning tree一旦找出來之後 就變成唯一路徑了

369
00:21:18,075 --> 00:21:20,071
這個時候開始做address learning

370
00:21:20,071 --> 00:21:22,091
開始做forwarding 就比較沒有問題

371
00:21:22,091 --> 00:21:24,091


