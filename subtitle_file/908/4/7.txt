1
00:00:08,071 --> 00:00:12,075
好 我們說 這個bridge網路裡面呢

2
00:00:12,075 --> 00:00:14,078
因為要找那個spanning tree嘛

3
00:00:14,078 --> 00:00:17,085
所以他是一個分散式的演算法

4
00:00:17,085 --> 00:00:21,018
也就是說bridge之間 他們會互相交換

5
00:00:21,018 --> 00:00:24,048
所謂的情報 那包含是說 剛剛提到

6
00:00:24,048 --> 00:00:29,041
到底是 誰是id最小的 我們要找那個root bridge

7
00:00:29,041 --> 00:00:31,038
那個整個過程當中呢

8
00:00:31,038 --> 00:00:34,071
就是要讓bridge之間要能夠交換一些資料

9
00:00:34,071 --> 00:00:38,001
那個交換資料呢 就是用這個封包的格式

10
00:00:38,001 --> 00:00:40,078
我們叫做bridge protocol data unit

11
00:00:40,078 --> 00:00:44,015
就所謂的BPDU 這BPDU呢 有兩種

12
00:00:44,015 --> 00:00:48,041
我們看左邊這個地方 像左邊這個藍色跟黃色的這個

13
00:00:48,041 --> 00:00:51,001
就是說 我們在找spanning tree的時候呢

14
00:00:51,001 --> 00:00:54,021
我要告訴別人 到底我有什麼

15
00:00:54,021 --> 00:00:56,048
所以送這個封包的呢

16
00:00:56,048 --> 00:00:59,091
我們就叫做他自己本身的bridge id在這裡

17
00:00:59,091 --> 00:01:04,071
代表說 那這個BPDU是誰送的

18
00:01:04,071 --> 00:01:09,045
所以這個bridge id是說 誰送了這個BPDU

19
00:01:09,045 --> 00:01:12,051
好 然後他是從哪個port丟出去的

20
00:01:14,025 --> 00:01:17,068
對不起 就是說他的root port到底現在是誰

21
00:01:17,068 --> 00:01:21,065
就剛剛意思是說 因為每一個bridge本身

22
00:01:21,065 --> 00:01:25,041
我們講一開始的時候呢 他認為自己就是root嘛

23
00:01:25,041 --> 00:01:27,098
一開始他認為就是root 所以他丟出去的時候呢

24
00:01:27,098 --> 00:01:31,081
他就認為說 譬如說這個root bridge id

25
00:01:31,081 --> 00:01:35,008
root bridge id呢就是他自己

26
00:01:35,008 --> 00:01:39,035
也就是說 這個BPDU裡面 欄位很多啦

27
00:01:39,035 --> 00:01:43,041
但是呢 比較重要的是這黃色的這四個欄位

28
00:01:43,041 --> 00:01:44,071
我們就介紹這四個 首先

29
00:01:44,071 --> 00:01:46,028
第一個呢 剛提到

30
00:01:46,028 --> 00:01:50,065
送這個封包的 他自己的bridge 所謂的bridge id

31
00:01:50,065 --> 00:01:54,095
那第二個就是說 那他認為他現在的root是誰

32
00:01:54,095 --> 00:01:57,008
剛提到 一開始是自己

33
00:01:57,008 --> 00:02:00,041
但是一旦他被征服之後呢 他就知道說

34
00:02:00,041 --> 00:02:03,068
那他認為他現在 他所知道的

35
00:02:03,068 --> 00:02:07,081
那個id最小的那個root bridge 他的id

36
00:02:07,081 --> 00:02:11,051
所以有一個id呢 是講自己的id

37
00:02:11,051 --> 00:02:15,028
這是自己的id 那這個呢是他目前

38
00:02:15,028 --> 00:02:19,045
他所知道 那個id最小的 那個root bridge id

39
00:02:19,045 --> 00:02:21,088
好 然後接下來就是說

40
00:02:21,088 --> 00:02:26,098
那從這個自己的id 到這個root bridge呢

41
00:02:26,098 --> 00:02:31,001
他的cost是多少 目前那條路是多少

42
00:02:31,001 --> 00:02:35,048
那這個就所謂的RPC 就root path cost

43
00:02:35,048 --> 00:02:37,075
就是說 這個是root

44
00:02:37,075 --> 00:02:39,085
那這是現在 我 我在右邊

45
00:02:39,085 --> 00:02:45,078
這是root 那我現在到這個root呢 現在的cost最短的是多少

46
00:02:45,078 --> 00:02:49,048
就這個RPC是指這個 就是說root path cost

47
00:02:49,048 --> 00:02:54,098
好 那我經由哪一個port出去的 就是我的root port是什麼

48
00:02:54,098 --> 00:02:57,041
我們剛剛提到 任何一個bridge

49
00:02:57,041 --> 00:03:00,011
他都要找到他的root port

50
00:03:00,011 --> 00:03:03,075
那這個root port呢 是他認為他現在的root port

51
00:03:03,075 --> 00:03:06,005
我們剛剛講現在 就是因為我們前面有提到

52
00:03:06,005 --> 00:03:09,068
這個state machine的概念 現在不代表永遠

53
00:03:09,068 --> 00:03:12,048
就是你現在他是一個root port

54
00:03:12,048 --> 00:03:16,055
說不定他等一下可能會 他可能會有變化啦

55
00:03:16,055 --> 00:03:19,081
就現在是 不代表他永遠都是

56
00:03:19,081 --> 00:03:22,078
因為我們會隨著這個封包跑來跑去

57
00:03:22,078 --> 00:03:24,061
可能一開始可能是這樣子

58
00:03:24,061 --> 00:03:26,018
等下可能又會cancel掉

59
00:03:26,018 --> 00:03:31,021
所以至少 但是我認為至少現在呢 現在是誰

60
00:03:31,021 --> 00:03:33,058
所以這四個欄位非常非常的重要

61
00:03:33,058 --> 00:03:35,035
就剛剛再講一遍 就是第一個

62
00:03:35,035 --> 00:03:38,051
這個BPDU 就是說我從這邊

63
00:03:38,051 --> 00:03:41,091
假設我被 假設我在這邊 我被征服之後

64
00:03:41,091 --> 00:03:44,088
我被征服之後呢 我就開始要幫他轉送嘛

65
00:03:44,088 --> 00:03:48,051
我開始轉送 那你一轉送出去呢 這個封包第一個

66
00:03:48,051 --> 00:03:52,055
就是你是誰 就是你的bridge id是什麼

67
00:03:52,055 --> 00:03:56,091
就第一個就出來 所以你是誰 是這個

68
00:03:58,035 --> 00:04:01,098
你轉送了 就你被征服之後轉送 那你是誰

69
00:04:01,098 --> 00:04:04,028
那既然你是被這個封包征服了

70
00:04:04,028 --> 00:04:06,075
那這個port就是你現在的R port

71
00:04:06,075 --> 00:04:10,048
你知道你的R port是誰 是哪一個port

72
00:04:10,048 --> 00:04:13,041
然後你知道你的現在的root是誰

73
00:04:13,041 --> 00:04:17,008
因為你被這個封包征服了嘛 那這個封包上面就帶著

74
00:04:17,008 --> 00:04:18,081
就是帶著這個 就是說

75
00:04:18,081 --> 00:04:22,051
他這個封包他帶著說 那他的root到底是誰

76
00:04:22,051 --> 00:04:24,098
所以你轉出去的時候 一樣

77
00:04:24,098 --> 00:04:29,095
把你被誰征服的 他那個id一樣就複製過來

78
00:04:29,095 --> 00:04:33,091
再征服出去的意思 就你的這個封包的這個bridge呢

79
00:04:33,091 --> 00:04:36,058
你認為你現在的root是誰

80
00:04:36,058 --> 00:04:38,088
然後從這個port被征服嘛

81
00:04:38,088 --> 00:04:42,015
那從這個port到root的cost 就這一段

82
00:04:42,015 --> 00:04:46,071
這一段呢 就是RPC 就是所謂的root path cost

83
00:04:46,071 --> 00:04:51,015
就把這個等於說 送給旁邊的bridge

84
00:04:51,015 --> 00:04:57,031
讓他來判斷說 這個BPDU 讓他來判斷說

85
00:04:57,031 --> 00:05:01,095
有沒有辦法讓你決定你現在的root 要不要變更的意思

86
00:05:01,095 --> 00:05:03,095
我們等下會有一個比較完整的例子

87
00:05:03,095 --> 00:05:06,085
把這個過程呢 做一個比較詳細的說明

88
00:05:06,085 --> 00:05:10,058
好 這是左邊這個BPDU 那右邊這個BPDU呢

89
00:05:10,058 --> 00:05:14,091
他主要是做所謂的topology change BPDU

90
00:05:14,091 --> 00:05:18,041
就是說 這是比較後面一點我們會介紹

91
00:05:18,041 --> 00:05:21,028
就是網路的拓墣如果有變更

92
00:05:21,028 --> 00:05:23,028
譬如說我們spanning tree都找好啦

93
00:05:23,028 --> 00:05:27,005
那也都在運作了 那萬一等下有一個bridge壞掉

94
00:05:27,005 --> 00:05:31,058
或者有一個link斷掉 因為是一個tree嘛

95
00:05:31,058 --> 00:05:33,025
我們把它連成一個spanning tree

96
00:05:33,025 --> 00:05:38,001
所以tree呢 上面的任何一個link或者一個bridge他如果壞掉

97
00:05:38,001 --> 00:05:40,058
他網路就會斷掉 那斷掉當然

98
00:05:40,058 --> 00:05:44,015
因為我們有loop 所以會把另外那個loo把他叫起來

99
00:05:44,015 --> 00:05:48,068
可是一旦叫起來 我的tree就基本上已經跟原來不一樣

100
00:05:48,068 --> 00:05:51,088
就是因為你可能少了一個link多了一個link

101
00:05:51,088 --> 00:05:56,011
所以你的拓墣已經不一樣 那這種不一樣就要通知大家

102
00:05:56,011 --> 00:05:59,011
說我現在呢拓墣的結構呢 有變化

103
00:05:59,011 --> 00:06:02,078
那通知的方式就是用這個 叫做topology change

104
00:06:02,078 --> 00:06:07,048
那個notification 就是我告訴大家說 現在拓墣有變更

105
00:06:07,048 --> 00:06:10,091
拓墣變更到底有什麼差別呢 第一個

106
00:06:10,091 --> 00:06:15,031
拓墣一變更 我們這個封包傳送的路徑就不一樣

107
00:06:15,031 --> 00:06:18,011
因為spanning tree就是我們的routing

108
00:06:18,011 --> 00:06:22,038
那spanning tree如果不一樣 你的routing的路徑就不一樣

109
00:06:22,038 --> 00:06:26,091
還有一個更重要的 就是我們address learning呢就會不一樣

110
00:06:26,091 --> 00:06:29,091
我們在學習那個address的位置的時候呢

111
00:06:29,091 --> 00:06:31,041
是跟Tree的結構有關

112
00:06:31,041 --> 00:06:34,035
tree長的不一樣 你學起來的結果就是不一樣

113
00:06:34,035 --> 00:06:37,058
所以一旦這個tree的這個架構有變更的話

114
00:06:37,058 --> 00:06:41,078
我們是需要通知大家的 那通知就是靠這個

115
00:06:41,078 --> 00:06:45,041
右邊這個 所謂的topology change BPDU來做這件事情

116
00:06:45,041 --> 00:06:49,095
好底下呢 接下來我們就來用一個比較完整的例子

117
00:06:49,095 --> 00:06:55,098
來說明說這個spanning tree到底怎麼找出來的

118
00:06:55,098 --> 00:06:59,038
這個例子非常非常的關鍵 也非常非常的重要

119
00:06:59,038 --> 00:07:02,011
好我們說這個例子裡面 我們假設呢

120
00:07:02,011 --> 00:07:05,088
我們中間有一個LAN 就是所謂的LAN的W

121
00:07:05,088 --> 00:07:08,081
這個地方 我們有一個LAN W在這個地方

122
00:07:08,081 --> 00:07:14,008
那我們有三個bridge 分別是X Y Z

123
00:07:14,008 --> 00:07:18,051
就X Y Z在這個LAN的 有連接起來啦

124
00:07:18,051 --> 00:07:22,028
好 然後我們每一個這個birdge上面呢

125
00:07:22,028 --> 00:07:25,005
每一個port也有一個transmission cost

126
00:07:25,005 --> 00:07:26,025
像這個地方 我們都有

127
00:07:26,025 --> 00:07:28,018
每一個地方都有transmission cost

128
00:07:28,018 --> 00:07:31,085
像這個地方 這個地方 都有

129
00:07:31,085 --> 00:07:33,061
這個就是我們的 等於說

130
00:07:33,061 --> 00:07:36,005
基本的參數 好那我們接下來

131
00:07:36,005 --> 00:07:39,091
就要來看看說 怎麼把這個spanning tree找出來

132
00:07:39,091 --> 00:07:42,011
我們先看 按照這個步驟

133
00:07:42,011 --> 00:07:44,055
首先我們從最下面這邊來看

134
00:07:44,055 --> 00:07:46,061
最下面這邊來看就是說

135
00:07:46,061 --> 00:07:47,098
假設 我有一個封包

136
00:07:47,098 --> 00:07:52,038
我們這個紅色的圈圈裡面有一個數字

137
00:07:52,038 --> 00:07:56,031
這就是我們等下看到這個封包的順序

138
00:07:56,031 --> 00:07:58,041
所謂 第一個 一嘛

139
00:07:58,041 --> 00:08:01,085
有一個封包從最下面 這個bridge Z

140
00:08:01,085 --> 00:08:04,078
他的一個最下面的port 一個封包跑進來了

141
00:08:04,078 --> 00:08:10,088
那這個封包他記錄著說 他的RPC是38

142
00:08:10,088 --> 00:08:12,081
我們剛剛提到 每一個封包

143
00:08:12,081 --> 00:08:16,071
裡面都會有前面這個 就這個RPC在這個地方

144
00:08:16,071 --> 00:08:19,081
等於說 每一個封包都會講說

145
00:08:19,081 --> 00:08:25,045
他目前到root的cost 38就是積在這個地方的意思

146
00:08:25,045 --> 00:08:29,098
有一個封包從最下面跑進來 然後他說

147
00:08:29,098 --> 00:08:35,025
他的cost是38 也就是說 如果我們走下面這一條路

148
00:08:35,025 --> 00:08:39,088
下面這一條路 到root有一個cost

149
00:08:39,088 --> 00:08:43,005
有一條路徑 他的cost是38的意思

150
00:08:43,005 --> 00:08:46,038
就等於說 他下面其實也是一個

151
00:08:46,038 --> 00:08:50,028
應該說 下面這個地方也是某一個bridge啦

152
00:08:50,028 --> 00:08:52,061
那他的這個封包進來 告訴他說

153
00:08:52,061 --> 00:08:56,041
如果你經由我這個 下面這個bridge呢 到root

154
00:08:56,041 --> 00:08:59,085
到root去 我的cost是38

155
00:08:59,085 --> 00:09:03,055
好 那這個bridge Z收到之後呢

156
00:09:03,055 --> 00:09:06,055
因為這個時候他還不知道他的root是

157
00:09:06,055 --> 00:09:08,068
root port是哪裡嘛 我們剛剛特別強調

158
00:09:08,068 --> 00:09:10,068
如果我們要找spanning tree呢 就是兩件事情最重要

159
00:09:10,068 --> 00:09:18,051
第一個 找到root 第二個 每一個bridge找到他的R port

160
00:09:18,051 --> 00:09:21,098
每一個LAN 找到他的D port

161
00:09:21,098 --> 00:09:25,075
那我們就看 這個bridge本身怎麼找到他的 所謂的R port

162
00:09:25,075 --> 00:09:28,011
好 所以我們注意看一下

163
00:09:28,011 --> 00:09:30,048
第一步是 我收到一個封包

164
00:09:30,048 --> 00:09:32,085
一個BPDU 告訴我說

165
00:09:32,085 --> 00:09:37,075
從這條路呢 如果經由收到的這條路出去的話

166
00:09:37,075 --> 00:09:41,021
他到這個root的cost是38

167
00:09:41,021 --> 00:09:44,071
那這時候因為對bridge Z來講的話

168
00:09:44,071 --> 00:09:46,058
我也不知道哪邊比較好嘛

169
00:09:46,058 --> 00:09:48,028
所以我就認為 好那我就走這條路

170
00:09:48,028 --> 00:09:52,088
所以他就認為說 他走下面這條路呢

171
00:09:52,088 --> 00:09:56,081
走這條路了 到root呢 是最好的路

172
00:09:56,081 --> 00:10:01,041
至少呢 到目前為止 因為我沒有其他的可以選

173
00:10:01,041 --> 00:10:04,015
也沒有其他的封包進來嘛 所以我就好吧

174
00:10:04,015 --> 00:10:06,088
那我就說 我走下面這條路到root去

175
00:10:06,088 --> 00:10:10,055
好 如果走下面這條路到root去的話呢

176
00:10:10,055 --> 00:10:16,078
那你的RPC 注意到RPC在這個地方 就會變成48囉

177
00:10:16,078 --> 00:10:20,068
因為RPC本身是這麼算的

178
00:10:20,068 --> 00:10:27,081
好 下面告訴我說 走下面這條路呢 是38

179
00:10:27,081 --> 00:10:31,001
那我如果往下面走的呢 就相當於說

180
00:10:31,001 --> 00:10:36,095
我這個bridge Z到這個root呢  就要走下面這條路

181
00:10:36,095 --> 00:10:40,098
相當於我要經過這個port去送的意思嘛

182
00:10:40,098 --> 00:10:43,078
等於說 經過這個port去送

183
00:10:43,078 --> 00:10:46,081
那我的cost這個48 是這麼來的

184
00:10:46,081 --> 00:10:50,018
就是38再加上這個10

185
00:10:50,018 --> 00:10:56,011
等於說 38是告訴我說走下面這條路到root是38

186
00:10:56,011 --> 00:10:59,061
但是我要走下面這條路呢 我要多送一次啊

187
00:10:59,061 --> 00:11:02,018
對這個bridge Z來講他要送一次

188
00:11:02,018 --> 00:11:06,025
那這個送一次呢 就要再花這個10嘛

189
00:11:06,025 --> 00:11:09,098
所以 也就是說 如果bridge Z呢

190
00:11:09,098 --> 00:11:13,095
他走下面下去的話 走這條路下去的話

191
00:11:13,095 --> 00:11:19,028
他的cost變成48的意思 是因為38加上這個10

192
00:11:19,028 --> 00:11:21,025
把這兩個加起來 就48

193
00:11:21,025 --> 00:11:24,075
那同時呢 他就認為說

194
00:11:24,075 --> 00:11:28,018
他的R port 注意到 他的R port呢就是N

195
00:11:28,018 --> 00:11:31,098
這個port 這個就是他目前他認為他的R port

196
00:11:31,098 --> 00:11:35,015
因為到目前為止 他認為經過這個port

197
00:11:35,015 --> 00:11:38,068
他到root的cost最小 因為他往下走嘛

198
00:11:38,068 --> 00:11:42,055
然後他又想說 好吧 那我來試著看看

199
00:11:42,055 --> 00:11:45,065
可不可以來代理這個LAN 我們剛剛提到

200
00:11:45,065 --> 00:11:48,071
每一個LAN 都要找一個代理的bridge

201
00:11:48,071 --> 00:11:53,015
所以這三個bridge呢 都會嘗試著來代理這個LAN

202
00:11:53,015 --> 00:11:56,041
那要代理他 他就說好吧

203
00:11:56,041 --> 00:12:01,038
那我就來試著看可不可以擔任這個所謂的D port

204
00:12:01,038 --> 00:12:04,061
這個LAN是到W 所以也就是說

205
00:12:04,061 --> 00:12:09,008
我這個W呢 我認為我這個跟它相連的 是這個m

206
00:12:09,008 --> 00:12:10,008
是這個port

207
00:12:10,008 --> 00:12:13,065
這個port可不可以來代理這個LAN

208
00:12:13,065 --> 00:12:16,001
如果你要代理他 很簡單

209
00:12:16,001 --> 00:12:19,085
如我我們這個bridge想要代理這個LAN W的話呢

210
00:12:19,085 --> 00:12:23,045
就是要把封包丟進去 好

211
00:12:23,045 --> 00:12:24,071
封包丟進去呢 就這樣

212
00:12:24,071 --> 00:12:27,095
那丟進去之後呢 發生了什麼事呢

213
00:12:27,095 --> 00:12:32,031
你注意到 第一個就是 我的丟進去的這個封包呢 RPC

214
00:12:32,031 --> 00:12:35,025
這個地方 就是48了

215
00:12:35,025 --> 00:12:41,061
就是說 我就算我這個封包丟進去就是要告訴上面的bridge

216
00:12:41,061 --> 00:12:44,058
事實上就是bridge X跟Y 跟他們說

217
00:12:44,058 --> 00:12:48,051
經由bridge Z 經由我

218
00:12:48,051 --> 00:12:51,028
就是假設你要 等於說你可以這樣經過我

219
00:12:51,028 --> 00:12:55,091
或者這邊經過我 到root呢我的cost只要48就好了

220
00:12:55,091 --> 00:13:00,011
就是說這個bridge Z呢 他事實上在做一個宣告

221
00:13:00,011 --> 00:13:03,021
如果你們 我送出去嘛

222
00:13:03,021 --> 00:13:05,045
如果上面的bridge 不管有誰

223
00:13:05,045 --> 00:13:10,011
如果經過我 就是Z 到這個root的話呢

224
00:13:10,011 --> 00:13:11,095
我的cost只要48就好了

225
00:13:11,095 --> 00:13:17,095
那接下來我們就來看 bridge X跟bridge Y有什麼反應

226
00:13:17,095 --> 00:13:23,015
因為bridge X跟bridge Y 現在他也不知道哪一條路比較好

227
00:13:23,015 --> 00:13:26,041
因為剛剛開始的時候 他就認為說你看

228
00:13:26,041 --> 00:13:31,008
他們就各自認為說 好吧 既然這個bridge Z跟我說

229
00:13:31,008 --> 00:13:34,055
他有一條路到root是48 cost

230
00:13:34,055 --> 00:13:37,035
那我就跟他的意思 因為我現在還沒有其他選擇

231
00:13:37,035 --> 00:13:39,051
我就跟他 那你一跟他的話

232
00:13:39,051 --> 00:13:43,028
就剛剛提到 既然你跟了這條路走的話

233
00:13:43,028 --> 00:13:46,031
那他的root就在這裡 這是我的root port

234
00:13:46,031 --> 00:13:50,065
因為剛剛封包是從這邊進來 也是從這邊進來了嘛

235
00:13:50,065 --> 00:13:53,038
所以我就認為 ok 我就兩個port

236
00:13:53,038 --> 00:13:56,095
剛提到這兩個port呢 就會被暫時

237
00:13:56,095 --> 00:14:00,071
暫時從blocking port就變成 所謂的一個

238
00:14:00,071 --> 00:14:02,015
所謂的root port  R port

239
00:14:02,015 --> 00:14:05,078
好 同時算一下RPC是多少

240
00:14:05,078 --> 00:14:09,095
剛剛說我走下面是48加上這個cost是10

241
00:14:09,095 --> 00:14:14,028
所以這個58就是把那個48加10啦

242
00:14:14,028 --> 00:14:18,035
這個53呢 就是把48加上這個5

243
00:14:18,035 --> 00:14:20,061
等於加起來 就把這個48

244
00:14:20,061 --> 00:14:23,081
跟這個相加 就是等於53

245
00:14:23,081 --> 00:14:27,045
阿這48跟這個相加 就等於58

246
00:14:27,045 --> 00:14:29,035
大概就這樣 然後呢

247
00:14:29,035 --> 00:14:31,068
他就把它的R port

248
00:14:31,068 --> 00:14:36,078
就變成是這個黃色的 他的R port也變成K

249
00:14:36,078 --> 00:14:41,001
然後呢 注意到他就開始再把這個封包往上送

250
00:14:41,001 --> 00:14:46,031
就是說 一個bridge 如果他這邊收到一個封包

251
00:14:46,031 --> 00:14:50,048
是他目前最好的 那這個port就會暫時變成R port

252
00:14:50,048 --> 00:14:52,045
因為他從這個port可以到root

253
00:14:52,045 --> 00:14:56,008
同時他要把這個封包再轉出去

254
00:14:56,008 --> 00:14:58,098
等於說 一旦被征服之後就變成人家的大將

255
00:14:58,098 --> 00:15:01,045
就要開始去擴展這個國土嘛

256
00:15:01,045 --> 00:15:06,051
就再往外送 可是暫時就變成是目前 就這樣子

257
00:15:06,051 --> 00:15:10,091
好 那接下來我們就來看 可能還有其他的路

258
00:15:10,091 --> 00:15:13,091
還有其他的封包會進來 譬如說這個地方

259
00:15:13,091 --> 00:15:16,055
我們說注意到 這個地方我們假設呢

260
00:15:16,055 --> 00:15:19,045
有一個封包呢 從上面這裡

261
00:15:19,045 --> 00:15:21,021
這個地方 不知道什麼地方啦

262
00:15:21,021 --> 00:15:23,065
這樣這樣這樣 這樣繞下來 這樣子

263
00:15:23,065 --> 00:15:28,098
好 這個封包繞下來呢 他的RPC是20

264
00:15:28,098 --> 00:15:33,091
就代表說 如果左上角這條路的話

265
00:15:33,091 --> 00:15:39,048
會有一個路徑到root bridge呢 他的cost只有20喔

266
00:15:39,048 --> 00:15:41,075
所以這個時候就發生了一個問題喔

267
00:15:41,075 --> 00:15:44,048
對這個bridge來講的話 對他來講的話

268
00:15:44,048 --> 00:15:47,028
他出現一個問題就是說 我剛剛說

269
00:15:47,028 --> 00:15:51,035
走下面的路徑 cost是58喔

270
00:15:51,035 --> 00:15:56,075
現在上面有一條封包跑進來說 如果你走上面的話

271
00:15:56,075 --> 00:16:01,018
cost只有20 那我如果真的走上面的話

272
00:16:01,018 --> 00:16:04,018
我還要加上這個cost 因為你還要走上面傳輸嘛

273
00:16:04,018 --> 00:16:09,021
好那這個cost是15啊 那15加20也不過才35

274
00:16:09,021 --> 00:16:14,015
會比我原來的58還少啊 那我就決定走上面了

275
00:16:14,015 --> 00:16:17,085
注意到 我如果一定 我一旦決定走上面的話

276
00:16:17,085 --> 00:16:20,025
就會出現這個問題 第一個

277
00:16:20,025 --> 00:16:23,011
我的root port呢 就換到上面去了

278
00:16:23,011 --> 00:16:25,058
root port  就換到上面去

279
00:16:25,058 --> 00:16:27,071
我們再看一下 我原來root port

280
00:16:27,071 --> 00:16:31,025
還是在這個下面的這個Z喔

281
00:16:31,025 --> 00:16:33,098
root port原來在這裡 現在這個root port呢

282
00:16:33,098 --> 00:16:36,075
要改到上面去 看一下

283
00:16:36,075 --> 00:16:41,095
他就改上去了 那對我們這個所謂的port的state machine

284
00:16:41,095 --> 00:16:45,005
就剛剛提到 他本來已經被暫時assign回root port

285
00:16:45,005 --> 00:16:46,078
現在又被拉走了嘛 被拉走了

286
00:16:46,078 --> 00:16:48,085
port換到一個地方去了 好

287
00:16:48,085 --> 00:16:53,075
那同時呢 我的RPC 就要開始走

288
00:16:53,075 --> 00:16:57,091
我認為我要走上面了 所以我們的RPC就要重新再算過

289
00:16:57,091 --> 00:17:02,058
現在變成35了 這個地方 我們RPC呢就變成35

290
00:17:02,058 --> 00:17:05,018
然後同時呢 我的root port呢

291
00:17:05,018 --> 00:17:08,021
也會改成所謂的上面這個port

292
00:17:08,021 --> 00:17:14,021
所謂的port i也改掉了 那同時呢

293
00:17:14,021 --> 00:17:16,048
他就會開始說 那我既然已經

294
00:17:16,048 --> 00:17:21,068
換成一個更好的路 到那個root去啦

295
00:17:21,068 --> 00:17:24,065
那我可不可以變成下面這個LAN

296
00:17:24,065 --> 00:17:27,081
W的代理人 剛剛有人代理喔

297
00:17:27,081 --> 00:17:31,008
那現在我覺得說 我代理他應該會更好

298
00:17:31,008 --> 00:17:34,018
因為透過我的話 就是說如果這個LAN

299
00:17:34,018 --> 00:17:38,068
如果透過我出去的話 這個cost只有35啊

300
00:17:38,068 --> 00:17:43,051
就這個35嘛 那剛剛有人說 他是一個48

301
00:17:43,051 --> 00:17:46,078
所以我認為說 我應該可以帶領這個LAN啊

302
00:17:46,078 --> 00:17:49,051
所以他就把這個封包呢 再

303
00:17:49,051 --> 00:17:51,061
注意到 再往下送

304
00:17:51,061 --> 00:17:56,025
就這個地方 他就把它送下來

305
00:17:56,025 --> 00:17:59,035
那送下來的結果呢 我們來看一下

306
00:17:59,035 --> 00:18:03,058
對於bridge Z 對於bridge Z來講的話

307
00:18:03,058 --> 00:18:10,025
那 他收這個RPC是35的時候

308
00:18:10,025 --> 00:18:14,025
就這個封包 現在送下來是這個封包

309
00:18:14,025 --> 00:18:19,008
這個 好 那35他就來看一下 檢查一下說

310
00:18:19,008 --> 00:18:24,001
那他如果跟著這個走 就是說如果走上面這個35的話

311
00:18:24,001 --> 00:18:27,038
那他的cost會變成多少 我們來看一下

312
00:18:27,038 --> 00:18:30,051
就發現說 他如果走上面的話

313
00:18:30,051 --> 00:18:37,075
原來的cost是48嘛 那現在因為有一個35從這邊跑進來啊

314
00:18:37,075 --> 00:18:40,075
我們說 有一個35從這裡跑進來

315
00:18:40,075 --> 00:18:44,021
他告訴我是35 那我如果跟著他走的話呢

316
00:18:44,021 --> 00:18:49,081
我就要走上面了 走上面的話就要加上這個cost這個10嘛

317
00:18:49,081 --> 00:18:51,081
這個 那就是45啊

318
00:18:51,081 --> 00:18:54,045
我跟著上面走 我的cost 45

319
00:18:54,045 --> 00:18:56,071
那至少也比我原來的48還好啊

320
00:18:56,071 --> 00:19:00,041
所以我就決定往上走 那決定往上走呢

321
00:19:00,041 --> 00:19:02,045
就是我的port就換掉啦

322
00:19:02,045 --> 00:19:04,078
你看我的R port 就要換成上面這個m

323
00:19:04,078 --> 00:19:07,028
R port就換成上面的

324
00:19:07,028 --> 00:19:13,061
那針對剛剛我們再看這個針對Y來講的話

325
00:19:13,061 --> 00:19:16,021
剛剛提到 這個地方是一樣會跑到這裡來

326
00:19:16,021 --> 00:19:20,055
他說 經過他呢 是35

327
00:19:20,055 --> 00:19:24,048
那剛剛是53 那我現在走這條路

328
00:19:24,048 --> 00:19:27,058
就是我bridge Y如果是跟著他走的話

329
00:19:27,058 --> 00:19:32,005
那就變成40 至少也比原來的小

330
00:19:32,005 --> 00:19:35,028
就是原來 這個對於bridge Y來講的話

331
00:19:35,028 --> 00:19:37,088
他的root port 注意到

332
00:19:37,088 --> 00:19:40,011
他的root port沒有改 root port還是一樣

333
00:19:40,011 --> 00:19:43,001
因為都是下面這個port 可是呢

334
00:19:43,001 --> 00:19:47,005
他的RPC變小了 等於說他本來應該是走下面這條路的啦

335
00:19:47,005 --> 00:19:49,071
可他現在決定呢走上面這條路的意思

336
00:19:49,071 --> 00:19:52,098
port沒有改 可是路徑改掉了

337
00:19:52,098 --> 00:19:57,068
是說 每一個這個bridge呢 收到這個封包的時候呢

338
00:19:57,068 --> 00:19:59,065
就會做一個這樣的對應啦

339
00:19:59,065 --> 00:20:01,061
我們再來看 下面還有一點點

340
00:20:01,061 --> 00:20:04,015
好 那接下來我們假設呢

341
00:20:04,015 --> 00:20:06,041
右上角這邊 又跑來一個

342
00:20:06,041 --> 00:20:09,071
甚至應該是說 更好的封包

343
00:20:09,071 --> 00:20:11,061
就這樣 這樣這樣跑下來

344
00:20:11,061 --> 00:20:14,095
有一個封包跑進來啦 他的RPC呢 只有25

345
00:20:14,095 --> 00:20:17,061
那對於bridge Y來講的話

346
00:20:17,061 --> 00:20:20,005
喔 這個25誒 如果我走他的話

347
00:20:20,005 --> 00:20:22,068
那我的cost只要再加上這個5嘛

348
00:20:22,068 --> 00:20:25,035
就可以了 那就變30

349
00:20:25,035 --> 00:20:28,048
所以他就決定這麼做 他的port

350
00:20:28,048 --> 00:20:31,018
root port就改到上面去了 決定走上面

351
00:20:31,018 --> 00:20:34,015
走上面到root 也就是說 他這個時候呢

352
00:20:34,015 --> 00:20:37,008
把這個方向稍微改一下 等於說

353
00:20:37,008 --> 00:20:40,065
他決定走上面 上面的這個port呢

354
00:20:40,065 --> 00:20:45,001
到root去 對不起我再把它拉回來一下

355
00:20:45,001 --> 00:20:51,011
所以他就決定走這條路到root去

356
00:20:51,011 --> 00:20:53,098
所以他的root port呢 就在最上面

357
00:20:53,098 --> 00:20:56,041
而且他的cost就變成30

358
00:20:56,041 --> 00:21:01,051
30是因為這個25 然後加上這個5

359
00:21:01,051 --> 00:21:05,025
所以加起來是30 好那30他的root port

360
00:21:05,025 --> 00:21:06,078
就改成上面的這個port

361
00:21:06,078 --> 00:21:14,048
同時他也認為說 他應該可以來扮演這個LAN W的代理

362
00:21:14,048 --> 00:21:18,091
所以他會把這個封包呢 再往下送下來

363
00:21:18,091 --> 00:21:22,008
就是說再送下來  結果就是下面這個

364
00:21:22,008 --> 00:21:26,078
他就把它送下來 送下來就是 RPC就等於30

365
00:21:26,078 --> 00:21:30,098
他就告訴人家說 他的cost只有30而已

366
00:21:30,098 --> 00:21:33,048
那看看大家的反應嘛 好

367
00:21:33,048 --> 00:21:36,058
接下來反應的結果就是說 因為這已經是最小了

368
00:21:36,058 --> 00:21:40,048
他們就會去做一個變更 就 這個30下來

369
00:21:40,048 --> 00:21:45,068
他這個對Z來講的話 他收到這個30

370
00:21:45,068 --> 00:21:47,055
從這邊跑進來 30

371
00:21:47,055 --> 00:21:51,035
那他原來是root port 就是m

372
00:21:51,035 --> 00:21:54,031
所以root port沒有變 可是原來cost是45嘛

373
00:21:54,031 --> 00:21:58,088
那如果這個30加上這個10 走上面是變成40

374
00:21:58,088 --> 00:22:01,091
所以這個地方會改成40 大概就是說

375
00:22:01,091 --> 00:22:07,008
他 root port沒有變更啦 但是呢

376
00:22:07,008 --> 00:22:10,088
他的RPC呢可以變小一點 就變成說

377
00:22:10,088 --> 00:22:15,058
只要這個40就可以了 好 但是我們看一下

378
00:22:15,058 --> 00:22:22,081
這個封包因為他也會走到 我們這個bridge X這個地方來

379
00:22:22,081 --> 00:22:25,085
就這個封包也會到這裡來嘛 那他看他要不要改

380
00:22:25,085 --> 00:22:29,058
因為這個地方說他是30 如果他走

381
00:22:29,058 --> 00:22:32,095
如果這個bridge X他決定走下面的話

382
00:22:32,095 --> 00:22:35,065
那他就要把10加上去

383
00:22:35,065 --> 00:22:39,021
也就是說如果他要走下面的話 他就要變成40

384
00:22:39,021 --> 00:22:43,048
可他原來走上面是35 所以他就不變更的意思

385
00:22:43,048 --> 00:22:46,051
那最後的結果呢 我們就會發現到說

386
00:22:46,051 --> 00:22:50,088
結果就是這樣子 因為我們的封包過程當中

387
00:22:50,088 --> 00:22:54,021
就是說 來來去去 最後就變成

388
00:22:54,021 --> 00:22:58,035
形成這樣子的一個結構啦 就是說 最後

389
00:22:58,035 --> 00:23:03,035
我們發現到說 針對bridge X Y Z

390
00:23:03,035 --> 00:23:06,088
他們都找到他們的root port 就是那個黃色的

391
00:23:06,088 --> 00:23:11,085
然後呢 針對這個LAN W呢 他找到他的D port

392
00:23:11,085 --> 00:23:15,091
這個D port 就是從Y這個地方進來的

393
00:23:15,091 --> 00:23:19,048
所以他最後的spanning tree呢 就是長得這個樣子

394
00:23:19,048 --> 00:23:22,098
所以從剛剛這個例子裡面呢 我們就是說

395
00:23:22,098 --> 00:23:27,071
透過這個封包進出啦 就來回

396
00:23:27,071 --> 00:23:30,091
也一下子比較好 一下子比較不好 沒關係

397
00:23:30,091 --> 00:23:33,085
就是這個封包BPDU這樣子來來回回

398
00:23:33,085 --> 00:23:38,088
我們每一個port 就是按照剛剛講那個state machine的觀念

399
00:23:38,088 --> 00:23:41,015
可能一個port被選成R port或D port

400
00:23:41,015 --> 00:23:44,031
那 如果經過兩個forwarding delay

401
00:23:44,031 --> 00:23:47,071
他沒有變更他就底定 那如果他有變更

402
00:23:47,071 --> 00:23:50,015
可能就被取消 然後再來再來再來

403
00:23:50,015 --> 00:23:53,091
就是看封包有沒有更好的路徑 被找到

404
00:23:53,091 --> 00:23:56,041
那最後最後就是每一個port呢

405
00:23:56,041 --> 00:24:00,038
他either 就是剛剛提到 R port或者是D port

406
00:24:00,038 --> 00:24:02,025
D port代表某一個LAN

407
00:24:02,025 --> 00:24:04,085
如果不是R port也不是D port呢

408
00:24:04,085 --> 00:24:07,048
就是block port 就是那個紅色的

409
00:24:07,048 --> 00:24:09,061
就是block 那block相當於那個線就斷掉

410
00:24:09,061 --> 00:24:12,008
最後我們的spanning tree就長這個樣子

411
00:24:12,008 --> 00:24:14,008


