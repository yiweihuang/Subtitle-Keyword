1
00:00:08,095 --> 00:00:10,078
好 接下來我們來介紹說

2
00:00:10,078 --> 00:00:15,038
當這個PCF的station本身 他是transmitter

3
00:00:15,038 --> 00:00:20,058
或者receiver 也就是說 這個傳輸跟接受呢

4
00:00:20,058 --> 00:00:25,065
都是經過這個所謂的point coordinator 就是這個基地台

5
00:00:25,065 --> 00:00:29,021
也就是基地台本身呢 來送或者來收

6
00:00:29,021 --> 00:00:32,085
就是送收呢都是經過基地台來處理的時候

7
00:00:32,085 --> 00:00:36,055
我們看他是怎麼的運作 我們剛剛提到說

8
00:00:36,055 --> 00:00:40,061
這個point coordinator本身

9
00:00:40,061 --> 00:00:43,008
因為他會用polling的方式嘛

10
00:00:43,008 --> 00:00:45,068
他會去詢問說 某一個station說

11
00:00:45,068 --> 00:00:49,031
你有沒有封包要送 這種詢問本身

12
00:00:49,031 --> 00:00:52,008
被詢問到的這個station

13
00:00:52,008 --> 00:00:56,001
他必須立刻回覆這樣的一個polling

14
00:00:56,001 --> 00:00:58,028
因為如果他沒有立刻回覆的話

15
00:00:58,028 --> 00:01:01,015
他就認為說這個封包沒有要送

16
00:01:01,015 --> 00:01:03,055
這個時候沒有要送 他就會問下一個了

17
00:01:03,055 --> 00:01:05,055
所以我們說 所有的station呢

18
00:01:05,055 --> 00:01:11,075
他在回應 這個所謂的polling的這個需求的時候

19
00:01:11,075 --> 00:01:15,045
他必須所謂的immediately 必須立刻回

20
00:01:15,045 --> 00:01:18,051
那所謂的立刻回是什麼意思呢

21
00:01:18,051 --> 00:01:23,051
就是說這個polling跟我們data 就是我一個詢問

22
00:01:23,051 --> 00:01:26,005
然後data送出來 他們時間的差

23
00:01:26,005 --> 00:01:30,088
就是一定要在一個SIFS的gap裡面

24
00:01:30,088 --> 00:01:33,031
就是我們介紹的 就是說 我們以前說

25
00:01:33,031 --> 00:01:35,085
送一個data要回一個ACK

26
00:01:35,085 --> 00:01:39,048
那他們的時間差 就是一個short的IFS

27
00:01:39,048 --> 00:01:42,088
或者送一個request to send回一個clear to send

28
00:01:42,088 --> 00:01:46,065
他們的時間差也是一個short 那現在也是

29
00:01:46,065 --> 00:01:48,098
就是說我送一個polling

30
00:01:48,098 --> 00:01:52,065
然後到你把資料 真的有資料要送 送出來

31
00:01:52,065 --> 00:01:56,018
就是收到一個polling 到資料送出來 他們中間的時間差

32
00:01:56,018 --> 00:02:01,005
那也是short IFS 因為這個算是最高優先權

33
00:02:01,005 --> 00:02:03,075
就是有收到polling 趕快回應

34
00:02:03,075 --> 00:02:07,021
因為如果沒有回應的話 他就認為你沒有要送

35
00:02:07,021 --> 00:02:09,098
他就會poll另外下一個station了

36
00:02:09,098 --> 00:02:12,068
好那如果這樣的動作呢

37
00:02:12,068 --> 00:02:17,071
就會形成一個我們叫做a burst of contention free的traffic

38
00:02:17,071 --> 00:02:23,068
就是說我一個polling, 一個data,

39
00:02:23,068 --> 00:02:26,071
所以變成他就會變成一連串 這樣的所謂的

40
00:02:26,071 --> 00:02:29,001
我們的down up down up

41
00:02:29,001 --> 00:02:31,095
就是往下送往上送

42
00:02:31,095 --> 00:02:34,098
就是下上下上下 這樣一個週期

43
00:02:34,098 --> 00:02:38,041
一直到這個所謂的免競爭的週期結束

44
00:02:38,041 --> 00:02:40,018
他一般都會這樣子來做啦

45
00:02:40,018 --> 00:02:44,091
好那我們也說 如果我們有時候提供這種傳輸呢

46
00:02:44,091 --> 00:02:48,041
如果需要 我們叫做所謂的MAC level的ACK嘛

47
00:02:48,041 --> 00:02:51,091
有時候需要這個回應 就是回覆

48
00:02:51,091 --> 00:02:55,088
acknowledgement 確定說 這個封包是正確收到的

49
00:02:55,088 --> 00:02:58,055
因為我們送給誰需要ACK啊

50
00:02:58,055 --> 00:03:01,008
那如果我們要做這個ACK的時候

51
00:03:01,008 --> 00:03:05,065
我們會在 這個所謂的contention free up的frame

52
00:03:05,065 --> 00:03:08,081
往上送的frame 那上面呢

53
00:03:08,081 --> 00:03:11,071
會有一個bit 叫做所謂的ACK的bit

54
00:03:11,071 --> 00:03:16,021
等於說 我們這個封包其實還有帶了這個所謂的一個bit

55
00:03:16,021 --> 00:03:20,005
讓我們可以設定說 我剛剛收到的資料是對的

56
00:03:20,005 --> 00:03:23,015
就是我現在 我收到一個封包

57
00:03:23,015 --> 00:03:26,058
然後我上傳封包 那我上傳封包的時候呢

58
00:03:26,058 --> 00:03:30,015
同時上面有一個bit 就是acknowledgement bit

59
00:03:30,015 --> 00:03:33,025
同時告訴上面 告訴那個coordinator

60
00:03:33,025 --> 00:03:36,078
說你剛剛送給我的 我收到了是對的

61
00:03:36,078 --> 00:03:39,081
就是那個ACK本身呢 他變成一個bit

62
00:03:39,081 --> 00:03:43,068
因為我們現在的封包是有上下上下上下嘛

63
00:03:43,068 --> 00:03:49,015
所以在這個封包上下送的這個過程當中 同時用到這個bit

64
00:03:49,015 --> 00:03:52,075
就作為所謂的確認這個資料的正確性

65
00:03:53,051 --> 00:03:56,051
好 那底下我們就來看一個例子

66
00:03:56,051 --> 00:04:01,095
在這個例子裡面呢 我們假設這個整個superframe

67
00:04:01,095 --> 00:04:05,048
我們看一下 superframe是從這裡到這裡

68
00:04:05,048 --> 00:04:07,031
這是我們整個superframe

69
00:04:07,031 --> 00:04:10,051
那我們的所謂的競爭的週期呢

70
00:04:10,051 --> 00:04:15,061
是在這個地方 那右邊是競爭的週期啦

71
00:04:15,061 --> 00:04:18,085
就這個地方是contention 這邊等下會去進入競爭

72
00:04:18,085 --> 00:04:21,018
那左邊這邊 就所謂的免競爭

73
00:04:21,018 --> 00:04:23,098
就是我們現在用PCF的方式來做

74
00:04:23,098 --> 00:04:26,058
好 那一開始的時候呢

75
00:04:26,058 --> 00:04:29,088
我們要開始這個所謂的point coordinator

76
00:04:29,088 --> 00:04:33,001
他要來類似來產生一個superframe

77
00:04:33,001 --> 00:04:35,078
所以一開始的時候呢 假設時間點在這個地方

78
00:04:35,078 --> 00:04:39,008
他再來聽 說這個media是怎麼樣

79
00:04:39,008 --> 00:04:41,025
那現在發現這個media是busy

80
00:04:41,025 --> 00:04:43,091
代表說我還有一個封包還沒送完

81
00:04:43,091 --> 00:04:45,075
或者一個ACK還沒送完

82
00:04:45,075 --> 00:04:48,031
等他結束之後 我們就說

83
00:04:48,031 --> 00:04:50,051
我們這裡就等一個 剛有提到

84
00:04:50,051 --> 00:04:54,058
我們很重要的 我們等一個PIFS

85
00:04:54,058 --> 00:04:58,078
等一個PIFS 等得到 就代表說

86
00:04:58,078 --> 00:05:04,011
前面這個short 就所謂的SIFS的週期已經過了

87
00:05:04,011 --> 00:05:07,048
然後我就開始送 一個封包

88
00:05:07,048 --> 00:05:10,005
這個封包就往下送

89
00:05:10,005 --> 00:05:13,015
那同時這個封包裡面又帶了一個polling

90
00:05:13,015 --> 00:05:16,088
代表說 我封包往下送 記得我們這個因為是

91
00:05:16,088 --> 00:05:21,021
是wifi嘛 所以這個基地台往下送的時候他是廣播的

92
00:05:21,021 --> 00:05:25,025
就這個訊號是廣播送下去 所以每一個人都可以聽得到

93
00:05:25,025 --> 00:05:27,038
那聽得到 你說你再去看看說

94
00:05:27,038 --> 00:05:29,071
那上面的目的地是不是給你的

95
00:05:29,071 --> 00:05:33,081
也就是 他是用廣播的方式把這個封包往下送

96
00:05:33,081 --> 00:05:36,058
每個都收得到 聽得到

97
00:05:36,058 --> 00:05:39,078
只是是不是給你的 那我們上面有address嘛

98
00:05:39,078 --> 00:05:42,025
所以我們就把這個 檢查這個address

99
00:05:42,025 --> 00:05:43,095
如果是給我們的 我們就收起來

100
00:05:43,095 --> 00:05:47,085
那同時這個往下送的封包呢 他還帶著一個polling

101
00:05:47,085 --> 00:05:51,071
說 下一個是誰 等於說我把封包丟給你們

102
00:05:51,071 --> 00:05:54,078
其中有一個 我現在正在問他

103
00:05:54,078 --> 00:05:57,011
說你有沒有封包要送上來

104
00:05:57,011 --> 00:06:00,038
啊那個被問到的 如果他有封包要送呢

105
00:06:00,038 --> 00:06:02,098
他就必須把封包立刻送上去

106
00:06:02,098 --> 00:06:06,055
也就我們剛剛提到 這個被問到的station

107
00:06:06,055 --> 00:06:08,085
如果他有封包要送的話 我們說

108
00:06:08,085 --> 00:06:13,045
他等待的時間 只能是一個short IFS

109
00:06:13,045 --> 00:06:16,098
就是polling跟回應 他們中間的時間差

110
00:06:16,098 --> 00:06:20,091
是最短的時間差 就是所謂的short IFS呢

111
00:06:20,091 --> 00:06:22,091
他就要回應這個封包

112
00:06:22,091 --> 00:06:29,085
這樣子等於說 一個往下送 ㄧ個往上送

113
00:06:29,085 --> 00:06:34,031
這個算是我們剛提到 往下送同時往上送

114
00:06:34,031 --> 00:06:38,041
接下來當然 就進到下一個封包了

115
00:06:38,041 --> 00:06:41,005
變成說 他就可以再往下送一個

116
00:06:41,005 --> 00:06:43,078
然後再問一個 被問到的呢再往上送

117
00:06:43,078 --> 00:06:47,095
好 然後呢 這個所謂的基地台呢又往下送

118
00:06:47,095 --> 00:06:52,001
這個時候我們注意到 這個時候他也有問啦

119
00:06:52,001 --> 00:06:57,045
不過這個時候被問到的這個station 他沒有封包往上送

120
00:06:57,045 --> 00:07:00,091
剛好手上沒有封包往上送 他就沒有送封包

121
00:07:00,091 --> 00:07:03,078
那我們說如果他有送封包的話

122
00:07:03,078 --> 00:07:07,075
他的時間差 一定是要是一個所謂的short

123
00:07:07,075 --> 00:07:11,065
像這個一樣 short 那注意到在這個時間點

124
00:07:11,065 --> 00:07:15,005
經過一個short IFS的時候呢

125
00:07:15,005 --> 00:07:18,025
封包還沒有出現啊 還沒有出現

126
00:07:18,025 --> 00:07:21,045
所以這個coordinator 他本來想說

127
00:07:21,045 --> 00:07:23,098
我現在問你啦 如果你要送

128
00:07:23,098 --> 00:07:28,005
你一定要在一個short的IFS之後呢 立刻送出來

129
00:07:28,005 --> 00:07:32,028
可是我們現在發現 我們等了一個short呢還沒有發現

130
00:07:32,028 --> 00:07:37,065
我就認為說你沒有要送了 所以在這個 再等下一個

131
00:07:37,065 --> 00:07:42,061
等於說一個short IFS沒有等到資料送上來

132
00:07:42,061 --> 00:07:47,025
好 那我就讓他再經過一個PIFS

133
00:07:47,025 --> 00:07:50,051
好 沒關係 經過一個PIFS我就知道說

134
00:07:50,051 --> 00:07:54,021
等下你沒有要 我剛剛問的那個沒有要送

135
00:07:54,021 --> 00:07:56,008
我現在又把控制權又再抓回來了

136
00:07:56,008 --> 00:07:58,061
所以我會再送下一個封包

137
00:07:58,061 --> 00:08:01,011
下一個封包我會問另外一個station

138
00:08:01,011 --> 00:08:03,048
這個時候另外一個station被問到的呢

139
00:08:03,048 --> 00:08:07,021
因為他有資料要送 所以他就在 一樣

140
00:08:07,021 --> 00:08:11,025
在一個這個 在一個short的IFS的這個地方

141
00:08:11,025 --> 00:08:17,001
他又把封包丟上來 那這一次也算是有問有答啦

142
00:08:17,001 --> 00:08:22,098
接下來 假設我這個所謂的輪詢的這個期間呢

143
00:08:22,098 --> 00:08:25,041
已經要結束了嘛 因為我們已經到了

144
00:08:25,041 --> 00:08:28,065
這個所謂的免競爭的這個邊界了

145
00:08:28,065 --> 00:08:32,098
我就送一個 我們叫做所謂的contention free end

146
00:08:32,098 --> 00:08:35,068
我們剛剛提到 這個end的封包

147
00:08:35,068 --> 00:08:42,045
送end的封包送下來 目的就是要讓其他非競爭性的

148
00:08:42,045 --> 00:08:45,081
對不起 其他將來想要競爭的這些station

149
00:08:45,081 --> 00:08:47,025
我們剛開始有提到

150
00:08:47,025 --> 00:08:50,041
一開始他就會把這個network allocation vector嘛

151
00:08:50,041 --> 00:08:53,035
就設到這裡 所謂的最高值

152
00:08:53,035 --> 00:08:56,045
代表說 我把NAV設這麼大

153
00:08:56,045 --> 00:08:58,045
就代表說 等下在這個期間

154
00:08:58,045 --> 00:09:04,005
會有這個所謂的免競爭的封包 來來回回上上下下

155
00:09:04,005 --> 00:09:06,065
你們也不用來搶 也不用來看

156
00:09:06,065 --> 00:09:09,031
這段期間裡面 你就把它當成

157
00:09:09,031 --> 00:09:12,098
等下這個頻道會很忙碌 會busy的意思啦

158
00:09:12,098 --> 00:09:16,045
好那我用一個end來把它結束掉

159
00:09:16,045 --> 00:09:19,068
把等於說 用來reset這個NAV的值

160
00:09:19,068 --> 00:09:24,018
就代表說 好 那現在免競爭的這個週期

161
00:09:24,018 --> 00:09:27,005
或這個期間呢 已經正式結束

162
00:09:27,005 --> 00:09:30,031
那結束之後呢 就進到這個所謂的競爭

163
00:09:30,031 --> 00:09:33,085
我們講 就進到這個所謂的競爭週期

164
00:09:33,085 --> 00:09:38,088
那進到競爭週期就好啦 那就開始大家用CSMA/CA

165
00:09:38,088 --> 00:09:42,031
大家來搶 這個我們之前也介紹過

166
00:09:42,031 --> 00:09:45,008
就CSMA/CA到底怎麼來送

167
00:09:45,008 --> 00:09:49,005
好那接下來我們再來看 另外一個狀況就是說

168
00:09:49,005 --> 00:09:54,078
當我在詢問說 某一個station你有沒有資料要送的時候

169
00:09:54,078 --> 00:09:59,031
那這個station本身 他其實被詢問到的時候呢

170
00:09:59,031 --> 00:10:01,088
他的封包是可以丟給

171
00:10:01,088 --> 00:10:05,041
我們說丟給網路上面的任何其他的station

172
00:10:05,041 --> 00:10:09,028
就是說 被詢問到的這個station

173
00:10:09,028 --> 00:10:14,008
事實上他可以把封包送給 我們說any station

174
00:10:14,008 --> 00:10:16,078
他可以送給任何其他的station

175
00:10:16,078 --> 00:10:19,095
不一定要 不一定說只能送給那個基地台啦

176
00:10:19,095 --> 00:10:22,068
就是我問 他有沒有要送

177
00:10:22,068 --> 00:10:25,091
阿被我問到的這個station如果有資料要送

178
00:10:25,091 --> 00:10:29,025
他也可以送給其他的station

179
00:10:29,025 --> 00:10:33,068
不一定要送給這個所謂的PC啦 point coordinator

180
00:10:33,068 --> 00:10:36,071
被問到的 它送給我是ok

181
00:10:36,071 --> 00:10:38,045
但是他也可以送給第三者

182
00:10:38,045 --> 00:10:42,011
那送給第三者 第三者就要回應他

183
00:10:42,011 --> 00:10:47,011
我們說 這種送給第三者本身的這種data frame

184
00:10:47,011 --> 00:10:51,035
收到之後呢 一樣 要被acknowledged

185
00:10:51,035 --> 00:10:53,048
就是要回應 那這個回應呢

186
00:10:53,048 --> 00:10:58,008
就是跟我們平常一樣 就是變成送data 就要有ACK

187
00:10:58,008 --> 00:11:03,071
那我們在前面講的是說 如果是由基地台送下去的

188
00:11:03,071 --> 00:11:05,061
然後你送給基地台的 我們講

189
00:11:05,061 --> 00:11:10,041
PC送下去 你回給PC 因為都跟PC這樣子 互相傳輸嘛

190
00:11:10,041 --> 00:11:13,005
所以我們就可以把那個acknowledgement

191
00:11:13,005 --> 00:11:15,091
帶在這個封包裡面 變成由一個bit

192
00:11:15,091 --> 00:11:19,015
來攜帶這個acknowledgement就可以

193
00:11:19,015 --> 00:11:23,011
但現在如果說 我們把這個封包送給第三者

194
00:11:23,011 --> 00:11:25,045
那第三者就一定要回一個ACK

195
00:11:25,045 --> 00:11:28,075
就是一定要針對這個封包呢  特別回一個ACK

196
00:11:28,075 --> 00:11:32,005
來代表說 這個封包如果是成功收到的話

197
00:11:32,005 --> 00:11:35,031
也就是說 等到這個ACK結束

198
00:11:35,031 --> 00:11:39,031
就是我現在去問一個station說 你有沒有要封包要送

199
00:11:39,031 --> 00:11:41,078
如果他有 而且他不是送給我

200
00:11:41,078 --> 00:11:44,015
他是送給第三者 他就送給第三者

201
00:11:44,015 --> 00:11:47,051
第三者就要回一個ACK 這個ACK結束之後

202
00:11:47,051 --> 00:11:49,055
我又取得了這個控制權

203
00:11:49,055 --> 00:11:52,008
就是說我問一個station說 你有沒有要送

204
00:11:52,008 --> 00:11:54,001
妳說 有 送給第三者

205
00:11:54,001 --> 00:11:55,085
第三者要回一個ACK

206
00:11:55,085 --> 00:11:58,091
那我再收到 再收回那個控制權

207
00:11:58,091 --> 00:12:03,005
我再問下一個 如果說被我問到的他說他也要送

208
00:12:03,005 --> 00:12:06,005
而且他又是送給第三者 就送給第三者

209
00:12:06,005 --> 00:12:07,028
那第三者回一個ACK

210
00:12:07,028 --> 00:12:10,015
這個ACK結束之後 我又取得控制權

211
00:12:10,015 --> 00:12:13,018
那我可能再問下一個 他可能就送給我了

212
00:12:13,018 --> 00:12:17,051
我就取得控制權 就是這樣一來一回 一來一回

213
00:12:17,051 --> 00:12:22,005
或者一句給第三者 然後回ACK 再回來

214
00:12:22,005 --> 00:12:25,095
這樣的一個過程 就是我們怎麼去控制說

215
00:12:25,095 --> 00:12:31,095
當被問到的 或者被徵詢到的station 他有封包要送的時候

216
00:12:31,095 --> 00:12:34,078
他如果送給第三者 那要怎麼來處理

217
00:12:34,078 --> 00:12:40,041
我們就說 這個PCF 就這個所謂的基地台

218
00:12:40,041 --> 00:12:45,058
或者所謂的coordinator本身 他收到這個ACK

219
00:12:45,058 --> 00:12:48,061
我們講這個ACK frame 看到ACK frame之後呢

220
00:12:48,061 --> 00:12:51,085
他就取得了一個控制權 又取回來

221
00:12:51,085 --> 00:12:55,081
所以經過一個 這個SIFS之後

222
00:12:55,081 --> 00:12:58,001
他就可以再重新取得控制權

223
00:12:58,001 --> 00:13:00,065
再去polling另外一個station的意思

224
00:13:00,065 --> 00:13:03,038
好 我們一樣 來看一個例子

225
00:13:03,038 --> 00:13:08,005
在這個例子裡面 一樣的我們在這個圖當中呢

226
00:13:08,005 --> 00:13:11,031
我們的這個superframe 還是這麼長

227
00:13:12,018 --> 00:13:15,078
然後我們中間這裡 一樣 是一個分界點

228
00:13:15,078 --> 00:13:18,045
那右邊這邊呢 是競爭的週期

229
00:13:18,045 --> 00:13:22,031
那左邊這邊就是我們現在要介紹的 免競爭的週期

230
00:13:22,031 --> 00:13:25,085
那一開始的時候呢 我們還是說我去聽聽看嘛

231
00:13:25,085 --> 00:13:30,021
然後發現這個媒介呢 現在正在忙碌

232
00:13:30,021 --> 00:13:33,028
代表我有封包還沒送完 我們就等

233
00:13:33,028 --> 00:13:38,075
好 等他送完之後呢 一樣 等一個我們叫做PIFS呢

234
00:13:38,075 --> 00:13:42,085
我們就開始進入 這個所謂的免競爭週期啦

235
00:13:42,085 --> 00:13:45,048
首先 我還是送一個封包下去

236
00:13:45,048 --> 00:13:48,028
那送封包下去給這些station

237
00:13:48,028 --> 00:13:52,011
然後接下來我會問說 其中這個封包帶了一個polling

238
00:13:52,011 --> 00:13:56,028
代表說 我現在同時問某一個station說你有沒有要送

239
00:13:56,028 --> 00:13:59,018
好 我們發現說 這個station有要送

240
00:13:59,018 --> 00:14:01,065
而且他是送給第三者 所以我們看一下

241
00:14:01,065 --> 00:14:04,045
我們叫做station to station

242
00:14:04,045 --> 00:14:08,031
在這裡 我們用station to station的這個意思呢

243
00:14:08,031 --> 00:14:14,051
來表示說 他是送給了第三方啦 就S to S

244
00:14:14,051 --> 00:14:18,041
那另外第三方 收到這個封包之後呢

245
00:14:18,041 --> 00:14:21,025
我們注意一下 他要馬上回一個ACK

246
00:14:21,025 --> 00:14:24,088
所以這兩個 就是送封包回ACK呢

247
00:14:24,088 --> 00:14:28,021
跟我們之前介紹的這個過程是一樣的

248
00:14:28,021 --> 00:14:31,085
等到這個ACK也成功送完之後 我們說

249
00:14:31,085 --> 00:14:38,008
經過一個SIFS嘛 這個時候 這個PC

250
00:14:38,008 --> 00:14:43,041
所謂的point coordinator 他又重新取回了這個控制權

251
00:14:43,041 --> 00:14:47,088
所以他就送下一個封包 一樣 送給其中的某一個

252
00:14:47,088 --> 00:14:52,061
然後其中的某一個station呢 同時被 同時polling

253
00:14:52,061 --> 00:14:56,011
說 現在應該輪到誰 他可以送了

254
00:14:56,011 --> 00:14:59,028
被徵詢到了這個station本身

255
00:14:59,028 --> 00:15:02,038
剛好也有data要送給這個基地台的話

256
00:15:02,038 --> 00:15:07,005
他就回一個封包 這個跟我們之前介紹的例子就一樣

257
00:15:07,005 --> 00:15:12,018
等於說這個呢 是送給第三者

258
00:15:12,018 --> 00:15:16,035
那這個呢 是直接送給這個基地台

259
00:15:16,035 --> 00:15:18,028
那他送給基地台之後呢

260
00:15:18,028 --> 00:15:21,051
我們假設說 這個週期呢要結束了

261
00:15:21,051 --> 00:15:23,061
所以呢 一樣 他就送一個

262
00:15:23,061 --> 00:15:26,041
contention free end的這個封包

263
00:15:26,041 --> 00:15:28,055
然後就同時我們講

264
00:15:28,055 --> 00:15:31,061
這個contention free end的封包呢

265
00:15:31,061 --> 00:15:38,051
剛提到 他就會把這個所謂的NAV的值 把它做一個reset

266
00:15:38,051 --> 00:15:41,061
這個地方NAV的值 就會變成

267
00:15:41,061 --> 00:15:44,018
就把它設為0 把它reset掉

268
00:15:44,018 --> 00:15:48,025
然後同時就開始進入到一個競爭週期

269
00:15:48,025 --> 00:15:50,045
我們說 進入到競爭週期

270
00:15:50,045 --> 00:15:54,045
就是用CSMA/CA這個protocol來跑

271
00:15:54,045 --> 00:15:56,045


