1
00:00:09,50 --> 00:00:13,210
好，那接下來我們就來開始介紹所謂的routing protocol

2
00:00:13,210 --> 00:00:16,880
我們說routing protocol就是router跟router之間

3
00:00:16,880 --> 00:00:19,710
那它們要互相的傳遞的訊息

4
00:00:19,710 --> 00:00:25,410
把每一個router它周邊的一些的網路的狀態  連線的狀態

5
00:00:25,410 --> 00:00:27,310
然後告訴其他的router

6
00:00:27,310 --> 00:00:32,110
讓每一個router呢能夠收集到整個網路拓墣啦

7
00:00:32,110 --> 00:00:34,50
還有它的整個網路狀態

8
00:00:34,50 --> 00:00:37,250
然後再來計算所謂的routing table

9
00:00:37,250 --> 00:00:40,250
好，這就是所謂routing protocol要介紹的內容

10
00:00:40,250 --> 00:00:46,980
那首先呢我們先來介紹說什麼叫做forwarding

11
00:00:46,980 --> 00:00:48,550
什麼叫做routing

12
00:00:48,550 --> 00:00:51,10
我們說所謂的forwarding呢

13
00:00:51,10 --> 00:00:54,550
就是一個router它已經收到封包了

14
00:00:54,550 --> 00:00:59,379
那收到封包之後  我們說它一定要去查表

15
00:00:59,380 --> 00:01:01,380
那它查表的時候呢

16
00:01:01,380 --> 00:01:05,610
會根據這個封包上面的destination address

17
00:01:05,610 --> 00:01:09,810
就是目的地的IP位置然後跟routing table

18
00:01:09,810 --> 00:01:14,980
把這個目的地的位置到routing table裡面去查看看說

19
00:01:14,980 --> 00:01:19,950
那我如果要到這個destination的IP我應該往哪裡去

20
00:01:19,950 --> 00:01:21,580
這個叫做forwarding

21
00:01:21,580 --> 00:01:24,649
所以forwarding本身是說

22
00:01:24,650 --> 00:01:26,580
我已經有一個routing table

23
00:01:26,580 --> 00:01:28,350
然後封包進來的時候

24
00:01:28,350 --> 00:01:30,979
我根據這個封包裡面的IP位置

25
00:01:30,980 --> 00:01:33,680
把它拿出來去查表  然後看看要往哪裡去

26
00:01:33,680 --> 00:01:36,910
這個叫做forwarding  那我們說那routing呢

27
00:01:36,910 --> 00:01:41,679
Routing是說那你怎麼去把這個routing table建起來

28
00:01:41,680 --> 00:01:46,250
就是routing table把routing table建起來的過程當中

29
00:01:46,250 --> 00:01:48,250
就叫所謂的routing在做的事情

30
00:01:48,250 --> 00:01:49,810
包含routing protocol

31
00:01:49,810 --> 00:01:51,510
我們後面會介紹說

32
00:01:51,510 --> 00:01:53,550
我這些不同的router之間

33
00:01:53,550 --> 00:01:56,679
我平常在交換情報交換了半天的目的地呢

34
00:01:56,680 --> 00:01:58,980
就是要把這個routing table建起來

35
00:01:58,980 --> 00:02:03,480
那建起來之後呢就是給以後每一個封包進來

36
00:02:03,480 --> 00:02:06,150
都要去這個routing table裡面查表

37
00:02:06,150 --> 00:02:09,80
所以一個是建表、一個是查表

38
00:02:09,80 --> 00:02:11,50
這個是它們最大的不一樣

39
00:02:11,50 --> 00:02:13,450
那因此我們就來看

40
00:02:13,450 --> 00:02:16,480
好，那forwarding table長什麼樣子

41
00:02:16,480 --> 00:02:18,609
然後routing table是長什麼樣子

42
00:02:18,610 --> 00:02:22,10
這個我們先看所謂的forwarding table

43
00:02:22,10 --> 00:02:28,679
Forwarding table就是說我查表之後要從哪個port出去嘛

44
00:02:28,680 --> 00:02:31,410
我必須知道從哪個port出去的時候呢

45
00:02:31,410 --> 00:02:34,310
那這個port出去要跟我接的那台電腦

46
00:02:34,310 --> 00:02:37,450
或者那個router它的MAC也要知道

47
00:02:37,450 --> 00:02:43,49
就是我們講這個router裡面本來那個IP跟MAC的對照表

48
00:02:43,50 --> 00:02:46,750
就是我們即使知道了要從哪個port出去

49
00:02:46,750 --> 00:02:49,610
那我們還要知道從這個port出去呢

50
00:02:49,610 --> 00:02:52,850
是哪一台電腦要把這個封包接過去

51
00:02:52,850 --> 00:02:56,250
如果它是直接是主機就是目的地的話

52
00:02:56,250 --> 00:02:58,10
那就直接丟給這個目的地的網卡

53
00:02:58,10 --> 00:03:00,410
那如果不是直接連接

54
00:03:00,410 --> 00:03:01,850
就還要再經過一個router

55
00:03:01,850 --> 00:03:03,950
那我們就要送給那個router

56
00:03:03,950 --> 00:03:07,79
那我們必須有那個router的網卡的位置

57
00:03:07,80 --> 00:03:08,780
就是那個網卡的MAC address

58
00:03:08,780 --> 00:03:12,50
也就是說這個forwarding table裡面

59
00:03:12,50 --> 00:03:16,310
它還要把剛剛提到那個IP跟MAC

60
00:03:16,310 --> 00:03:18,810
那個對照表的訊息把它整合進來

61
00:03:18,810 --> 00:03:21,810
就是說對於這個forwarding table來講

62
00:03:21,810 --> 00:03:24,750
我們需要有一個譬如說它的network number

63
00:03:24,750 --> 00:03:28,510
然後他應該是從哪個port出去

64
00:03:28,510 --> 00:03:30,579
就是我們先做比對嘛

65
00:03:30,580 --> 00:03:34,150
找到說你這個目的地是要到哪一個網路

66
00:03:34,150 --> 00:03:40,210
然後呢它應該從哪一個介面、哪一個網卡、哪一個接口出去

67
00:03:40,210 --> 00:03:46,710
而且出去呢對方的這個MAC也通通都要在裡面

68
00:03:46,710 --> 00:03:50,450
這個MAC就相當於譬如說對方的router

69
00:03:50,450 --> 00:03:52,209
如果它用、我們假設用ethernet的話

70
00:03:52,210 --> 00:03:53,450
就ethernet的MAC

71
00:03:53,450 --> 00:03:56,350
那對方如果是一個譬如說是一個AP

72
00:03:56,350 --> 00:03:57,880
我們透過AP去送嘛

73
00:03:57,880 --> 00:04:02,410
那就是那個AP的wireless的MAC address

74
00:04:02,410 --> 00:04:05,950
所以forwarding table本身我們看一下

75
00:04:05,950 --> 00:04:10,149
就相當於說我需要有的內容

76
00:04:10,150 --> 00:04:14,510
就是說那network的address

77
00:04:14,510 --> 00:04:18,709
譬如說我們這裡是140.114/16

78
00:04:18,709 --> 00:04:22,380
我們知道這個slash 16就是所謂的CIDR的作法

79
00:04:22,380 --> 00:04:23,409
就是它有prefix

80
00:04:23,410 --> 00:04:27,350
也就是說我們只要到140.114

81
00:04:27,350 --> 00:04:30,850
我只看16個bits的意思

82
00:04:30,850 --> 00:04:34,410
就是140.114後面.1、.2、.3、.5我們不管

83
00:04:34,410 --> 00:04:36,450
我只看16個bits

84
00:04:36,450 --> 00:04:43,909
就是我只要看反正你的目的地的IP只要是140.114開頭的

85
00:04:43,910 --> 00:04:47,910
後面我通通不用管  因為我只看16個bits就算match

86
00:04:47,910 --> 00:04:53,950
Match之後呢我就說那就應該從port 0出去 Port 0

87
00:04:53,950 --> 00:04:55,849
好，那你要從port 0出去

88
00:04:55,850 --> 00:05:00,580
那你跟這個port 0直接對接的那個對方也是個router

89
00:05:00,580 --> 00:05:05,479
或當然這個例子是說假如port 0它已經是到某一台主機了

90
00:05:05,480 --> 00:05:09,110
那個主機的MAC、這個地方這裡

91
00:05:09,110 --> 00:05:12,80
那我們有這樣資訊的時候呢

92
00:05:12,80 --> 00:05:15,810
我們在做forwarding table就非常完整

93
00:05:15,810 --> 00:05:20,80
就是這個封包進來的時候把它的IP拿出來

94
00:05:20,80 --> 00:05:23,310
然後IP呢跟這個來做比對

95
00:05:23,310 --> 00:05:26,180
如果比對是正確的話

96
00:05:26,180 --> 00:05:28,50
我就說你要從port 0出去

97
00:05:28,50 --> 00:05:30,550
然後你有多少  你的MAC是什麼

98
00:05:30,550 --> 00:05:32,210
這樣我們就可以一氣呵成

99
00:05:32,210 --> 00:05:35,250
把這個forwarding就做得非常流暢

100
00:05:35,250 --> 00:05:39,550
那我們說另一個就是所謂的routing table

101
00:05:39,550 --> 00:05:42,680
那routing table本身  我們看一下

102
00:05:42,680 --> 00:05:45,910
Routing table本身就比較簡單一點

103
00:05:45,910 --> 00:05:48,550
因為我們說routing table呢

104
00:05:48,550 --> 00:05:52,510
就是由routing protocol它們互相交換情報之後呢

105
00:05:52,510 --> 00:05:55,610
最後再把那個routing table把它建起來

106
00:05:55,610 --> 00:06:01,180
好，那我們說這個routing table是由routing algorithm

107
00:06:01,180 --> 00:06:05,550
Routing algorithm它們互相的不管是哪一種方法

108
00:06:05,550 --> 00:06:10,250
我們後面會介紹幾種不同的這個routing的protocol

109
00:06:10,250 --> 00:06:15,580
那經由這個routing protocol把資料收集起來之後呢

110
00:06:15,580 --> 00:06:18,849
這個router就有一個這個整個網路的拓墣

111
00:06:18,850 --> 00:06:19,810
然後它就去算

112
00:06:19,810 --> 00:06:23,380
基本上都會算譬如說最短的路徑

113
00:06:23,380 --> 00:06:27,180
那基本上就是說這個routing table裡面就會說

114
00:06:27,180 --> 00:06:29,910
好，如果你要到某一個網路

115
00:06:29,910 --> 00:06:35,810
那你應該下一個、下一個hop是誰

116
00:06:35,810 --> 00:06:40,450
這個hop可能是直接相連的host或者是說

117
00:06:40,450 --> 00:06:42,650
要經過下一個router

118
00:06:42,650 --> 00:06:43,950
好，我們來看一下

119
00:06:43,950 --> 00:06:48,210
所以這個所謂的routing table

120
00:06:48,210 --> 00:06:50,349
就像我們上面所show的

121
00:06:50,350 --> 00:06:52,480
Routing table本身比較不一樣

122
00:06:52,480 --> 00:06:55,50
它是說如果你要到這個網路

123
00:06:55,50 --> 00:07:00,980
那你的next hop的IP是什麼、就next hop的IP

124
00:07:00,980 --> 00:07:05,250
就是你要到這個最後目的地是要到這個網路的話

125
00:07:05,250 --> 00:07:08,810
這個網段那你的下一個IP是什麼

126
00:07:08,810 --> 00:07:10,710
所以它只要知道下一個IP就好

127
00:07:10,710 --> 00:07:14,909
也就是說routing table本身雖然網路可能很大

128
00:07:14,910 --> 00:07:18,280
那從一個router到一個router

129
00:07:18,280 --> 00:07:23,250
或者從一個所謂的source IP到一個destination的IP

130
00:07:23,250 --> 00:07:25,450
我中間可能要經過很多router

131
00:07:25,450 --> 00:07:28,10
但是我們在這個routing table裡面

132
00:07:28,10 --> 00:07:31,180
不用記整條路線

133
00:07:31,180 --> 00:07:33,580
說我要經過router 1、router 2、router 3

134
00:07:33,580 --> 00:07:37,349
不用這樣子  你只要記下一個是誰就好

135
00:07:37,350 --> 00:07:41,580
所以我們的做法就是說  每一個router都是記

136
00:07:41,580 --> 00:07:44,550
好，你要送給哪一個IP  你下一站是誰

137
00:07:44,550 --> 00:07:47,550
每一個都記下一站、下一站、下一站

138
00:07:47,550 --> 00:07:49,450
大家一起工作的時候

139
00:07:49,450 --> 00:07:52,849
我就交給下一個、它就交給下一個、它就交給下一個

140
00:07:52,850 --> 00:07:54,280
自然就會到那個目的地

141
00:07:54,280 --> 00:07:57,909
就是說我們在這個路徑的選擇的時候

142
00:07:57,910 --> 00:08:00,80
我們不需要把整個路徑記下來

143
00:08:00,80 --> 00:08:03,409
我們只要記下一站是誰就可以

144
00:08:03,410 --> 00:08:06,110
因為每一個router都記著下一站

145
00:08:06,110 --> 00:08:11,180
那這樣它就自然可以一路一路的等於說一手交一手

146
00:08:11,180 --> 00:08:13,450
就會交到最後的這個目的地去

147
00:08:13,450 --> 00:08:16,580
好，那接下來我們就來看說

148
00:08:16,580 --> 00:08:18,710
那我們再來看所謂的routing

149
00:08:18,710 --> 00:08:21,479
我們可以說一個網路呢

150
00:08:21,480 --> 00:08:25,450
事實上可以用一個graph來表達

151
00:08:25,450 --> 00:08:27,650
那什麼意思呢

152
00:08:27,650 --> 00:08:32,709
譬如說我們這裡面有A、B、C、D、E、F

153
00:08:32,710 --> 00:08:37,150
我們有六個  類似有六個網路  六個網路

154
00:08:37,150 --> 00:08:42,650
然後呢我們在這個表達的方式上面就是說

155
00:08:42,650 --> 00:08:45,310
譬如說任何兩個node之間

156
00:08:45,310 --> 00:08:49,380
譬如說我們這裡有一個link 7，上面有一個數字

157
00:08:49,380 --> 00:08:53,950
就代表說我們如果從A送給F

158
00:08:53,950 --> 00:08:57,880
那我們要的cost就是7  這個7是怎麼算

159
00:08:57,880 --> 00:09:01,580
這個看我們的這個cost function是什麼

160
00:09:01,580 --> 00:09:02,650
譬如說可能是因為

161
00:09:02,650 --> 00:09:05,150
算它的delay、距離長短

162
00:09:05,150 --> 00:09:08,550
我們就可以把這個A、B、C、D、E、F

163
00:09:08,550 --> 00:09:12,109
假設啦就把它當成是router、當成是router

164
00:09:12,110 --> 00:09:14,510
然後這個7就是說

165
00:09:14,510 --> 00:09:16,610
從這個router送到這個router

166
00:09:16,610 --> 00:09:19,380
兩個router之間是怎麼連起來的

167
00:09:19,380 --> 00:09:21,880
我們記得，兩個router之間的連法

168
00:09:21,880 --> 00:09:23,210
那我可能是一條線

169
00:09:23,210 --> 00:09:26,910
就一個網路線段把兩個router接起來

170
00:09:26,910 --> 00:09:30,949
那我也可以透過一個所謂的ethernet  交換機

171
00:09:30,950 --> 00:09:34,310
那我也可以透過wifi、就是無線網路

172
00:09:34,310 --> 00:09:37,180
就是說兩個router之間相連的

173
00:09:37,180 --> 00:09:39,849
可以是有線的網路  可以是無線的網路

174
00:09:39,850 --> 00:09:43,650
可以是點對點的、可以是透過一個交換機、一個hop

175
00:09:44,750 --> 00:09:47,980
好，所以我們說這個每一個link上面

176
00:09:47,980 --> 00:09:51,80
都有一個這個、這個所謂的數字

177
00:09:51,80 --> 00:09:52,410
就是所謂我們叫做cost

178
00:09:52,410 --> 00:09:59,949
代表說從這條link的一邊送到另外一邊它要花多少成本

179
00:09:59,950 --> 00:10:03,350
我們說這個成本本身可以用各種的角度來看

180
00:10:03,350 --> 00:10:08,910
譬如說它的速度或者它的delay、延遲

181
00:10:08,910 --> 00:10:11,709
時間的延遲啦或者頻寬的速度啦

182
00:10:11,710 --> 00:10:14,850
或者甚至呢是各種的組合

183
00:10:14,850 --> 00:10:17,80
反正我們就定一個叫cost function

184
00:10:17,80 --> 00:10:22,50
我就去算說從某一個點送到某一個點

185
00:10:22,50 --> 00:10:24,780
到底要花多少的這個成本

186
00:10:24,780 --> 00:10:28,180
好，那我們所謂的把一個網路呢

187
00:10:28,180 --> 00:10:30,579
把它變成一個graph、變成一個圖

188
00:10:30,580 --> 00:10:32,680
那接下來我們要找的是什麼

189
00:10:32,680 --> 00:10:33,910
我們就希望找說

190
00:10:33,910 --> 00:10:38,579
任何兩點之間、就是任何兩個router之間

191
00:10:38,580 --> 00:10:42,550
我們希望找到所謂的lowest-cost的path

192
00:10:42,550 --> 00:10:47,510
最短路徑或者所謂的最節省成本的路徑

193
00:10:47,510 --> 00:10:52,450
譬如說我們假設  我們今天從C然後要到F

194
00:10:52,450 --> 00:10:56,210
我們在這個網路上面我可以走這條路

195
00:10:56,210 --> 00:11:03,680
那走這一條路我的cost就是把這條路所經過的edge把它加起來

196
00:11:03,680 --> 00:11:07,250
在這個是1加2加7嘛

197
00:11:07,250 --> 00:11:10,480
這條路我的cost就是10的意思

198
00:11:10,480 --> 00:11:14,910
好，那我們再來看  那我如果走這一條路呢

199
00:11:14,910 --> 00:11:20,280
這一條路呢就是1加4加6  我的cost就是11

200
00:11:20,280 --> 00:11:22,780
那我們可不可以有其他的路呢

201
00:11:22,780 --> 00:11:27,810
我可以走這樣啦 這樣子 這樣子

202
00:11:27,810 --> 00:11:30,79
我如果走這條路的話

203
00:11:30,80 --> 00:11:33,280
發現是1加1加6，就是8

204
00:11:33,280 --> 00:11:36,709
所以我們剛剛看  我這邊有不同的路嘛

205
00:11:36,710 --> 00:11:41,350
都可以到這個D  就C到F我有好幾條路

206
00:11:41,350 --> 00:11:45,180
但是呢最好的路  看起來應該是這條嘛

207
00:11:45,180 --> 00:11:52,750
就是1、1、6這個  好，這個就是C到F的最好的路徑

208
00:11:52,750 --> 00:11:53,950
我們要把它找出來

209
00:11:53,950 --> 00:11:57,850
這個就是我們以後要封包要走的路線的意思

210
00:11:57,850 --> 00:12:00,980
如果是C到F拉  那我們如果再看一個說

211
00:12:00,980 --> 00:12:03,80
我如果不是C到F  我們假設啦

212
00:12:03,80 --> 00:12:08,910
譬如說假設A  我們希望算A到這個C的

213
00:12:08,910 --> 00:12:12,680
A到C的路徑  我走這條是3嘛

214
00:12:12,680 --> 00:12:16,280
好，那我走這條這個就是8嘛

215
00:12:16,280 --> 00:12:21,510
那看起來直接走3的是cost是最小的

216
00:12:21,510 --> 00:12:28,480
也就是說整個routing就希望說任何兩個node之間

217
00:12:28,480 --> 00:12:32,410
希望找出它們最短的路徑

218
00:12:32,410 --> 00:12:36,949
它們希望找出最短或者所謂cost最小的路徑

219
00:12:36,950 --> 00:12:40,210
這個就是routing想要做的事情

220
00:12:40,210 --> 00:12:42,880
就是說你給我一個網路這樣的拓墣

221
00:12:42,880 --> 00:12:47,650
好，然後呢我要算出任何兩點之間它們最短的路徑

222
00:12:47,650 --> 00:12:50,10
那我們說那每一個router

223
00:12:50,10 --> 00:12:54,250
它怎麼知道這個網路到底這個長這個樣子呢

224
00:12:54,250 --> 00:12:56,880
一個router怎麼會知道呢

225
00:12:56,880 --> 00:13:00,580
我們說這是因為我們有routing protocol

226
00:13:00,580 --> 00:13:02,350
就是因為router本身

227
00:13:02,350 --> 00:13:06,980
它會把它周邊的網路的狀態告訴它旁邊的router

228
00:13:06,980 --> 00:13:08,410
然後再告訴旁邊

229
00:13:08,410 --> 00:13:10,650
就是會互相交換、交換、交換

230
00:13:10,650 --> 00:13:15,610
最後呢每一個router呢就會有整個網路拓墣的結構

231
00:13:15,610 --> 00:13:17,910
好，那有了之後呢

232
00:13:17,910 --> 00:13:20,350
它就去做這件事情  它就去算說

233
00:13:20,350 --> 00:13:23,980
它要到其他的node最短的路徑是什麼

234
00:13:23,980 --> 00:13:25,880
就通通把它算出來的意思

235
00:13:25,880 --> 00:13:29,480
好，我們說如果我們的網路呢比較小

236
00:13:29,480 --> 00:13:31,310
網路比較簡單的時候呢

237
00:13:31,310 --> 00:13:34,680
我們可以直接把所有的

238
00:13:34,680 --> 00:13:37,510
我們叫做shortest path全部把它算出來

239
00:13:37,510 --> 00:13:41,50
就是我們先把這個點對點之間

240
00:13:41,50 --> 00:13:45,479
node跟node之間的所有的最短的路徑先把它算出來

241
00:13:45,480 --> 00:13:46,410
算出來之後呢

242
00:13:46,410 --> 00:13:49,550
我們就讓它下載到每一個node

243
00:13:49,550 --> 00:13:52,849
讓他來使用  就是我們先算好

244
00:13:52,850 --> 00:13:54,150
然後給大家用

245
00:13:54,150 --> 00:13:56,449
那我們這個先算好的做法呢

246
00:13:56,450 --> 00:13:58,480
就叫做static approach

247
00:13:58,480 --> 00:14:01,350
就是所謂的靜態或者固定式的

248
00:14:01,350 --> 00:14:03,50
就是變成說我們算好以後呢

249
00:14:03,50 --> 00:14:05,880
交給這些router、這些node來使用

250
00:14:05,880 --> 00:14:08,650
那它有什麼缺點呢  就第一個

251
00:14:08,650 --> 00:14:12,350
因為我們是先算好了嘛  所以都已經固定了

252
00:14:12,350 --> 00:14:15,680
那如果說有link或者說有node failure

253
00:14:15,680 --> 00:14:19,380
譬如說線路斷掉或者router掛掉

254
00:14:19,380 --> 00:14:22,780
那這都沒辦法反映出來  因為我們都算好了

255
00:14:22,780 --> 00:14:26,680
所以對於這種動態發生的狀況

256
00:14:26,680 --> 00:14:30,949
就比較沒有辦法去反應它  那另外說也有可能說

257
00:14:30,950 --> 00:14:34,880
這樣子我們加入新的router或者加入新的link

258
00:14:34,880 --> 00:14:38,410
也加一個新的進來  或者加了一個線路近來

259
00:14:38,410 --> 00:14:41,480
我也沒有辦法去反應  那另外就是說

260
00:14:41,480 --> 00:14:42,880
因為我是固定了嘛

261
00:14:42,880 --> 00:14:46,150
所以我的edge的cost也不能改變

262
00:14:46,150 --> 00:14:48,910
那事實上edge的cost它反應的是說

263
00:14:48,910 --> 00:14:50,810
你每一條連線的狀態

264
00:14:50,810 --> 00:14:55,150
譬如說你現在網路壅擠了  這條線路壅擠

265
00:14:55,150 --> 00:14:56,810
所以我的cost應該要變高

266
00:14:56,810 --> 00:15:00,810
就是說這種情況靜態式的呢

267
00:15:00,810 --> 00:15:02,780
它也不能及時反應出來

268
00:15:02,780 --> 00:15:04,850
所以呢我們需要的是什麼

269
00:15:04,850 --> 00:15:09,50
我們需要是一個動態式   我們叫做dynamic

270
00:15:09,50 --> 00:15:13,109
我可以動態來反應這個網路的狀態

271
00:15:13,110 --> 00:15:15,610
而且它需要我們叫一個distributed

272
00:15:15,610 --> 00:15:18,910
就是說我不要有一台來幫大家算好

273
00:15:18,910 --> 00:15:21,250
而是我們每一個router自己算

274
00:15:21,250 --> 00:15:25,310
每一個router自己算這個最好的路徑

275
00:15:25,310 --> 00:15:27,849
而且這個算出來這個路徑本身

276
00:15:27,850 --> 00:15:32,410
要能夠動態的反應這個網路的狀態

277
00:15:32,410 --> 00:15:36,150
譬如說網路組塞啦、網路斷線啦、Router壞掉啦

278
00:15:36,150 --> 00:15:38,310
這裡通那裏不通等等

279
00:15:38,310 --> 00:15:41,50
所有動態的這種、這種情況呢

280
00:15:41,50 --> 00:15:44,180
都要能夠及時的處理它

281
00:15:44,180 --> 00:15:47,50
而且是由每一個router自己算

282
00:15:47,50 --> 00:15:51,280
我們說這個方法我們需要一個叫做分散式

283
00:15:51,280 --> 00:15:54,180
就是router、每一個router呢都來做

284
00:15:54,180 --> 00:15:58,180
然後能夠動態的反應這個網路狀況的情況

285
00:15:58,180 --> 00:16:01,479
那我們說有沒有這樣的protocol呢

286
00:16:01,480 --> 00:16:05,380
有，在internet裡面有兩個

287
00:16:05,380 --> 00:16:10,680
我們說有兩個  兩類啦  兩類的protocol  作法不一樣

288
00:16:10,680 --> 00:16:13,150
那一個呢我們叫做distance vector

289
00:16:13,150 --> 00:16:15,709
一個叫做所謂的link state

290
00:16:15,710 --> 00:16:17,880
這兩個呢都非常有名

291
00:16:17,880 --> 00:16:21,150
那我們後面呢就會來開始跟各位介紹

292
00:16:21,150 --> 00:16:24,680
什麼叫做distance vector的這個routing protocol

293
00:16:24,680 --> 00:16:27,880
什麼叫做link state的routing protocol

